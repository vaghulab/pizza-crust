8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TIMER
OBJECT MODULE PLACED IN TIMER.OBJ
ASSEMBLER INVOKED BY:  F:\ASM86.EXE TIMER.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $MOD186
                             2 +1  $EP
                             3     NAME TIMER
                             4     
                             5     ; =========================================================================
                             6     ; Main Timer Driver Program
                             7     ; Author: Vaghul Aditya Balaji
                             8     
                             9     ; This file contains proprietary information and cannot be copied 
                            10     ; or distributed without prior permission from the author.
                            11     ; =========================================================================
                            12     
                            13     public  serial_rec_action, timer2_action
                            14     extrn   print_char:far, print_2hex:far, iodefine:far
                            15     extrn   set_timer2:far
                            16     
                            17     ;IO Setup for 80C188 
  FFA0                      18             UMCR    EQU    0FFA0H ; Upper Memory Control Register
  FFA2                      19             LMCR    EQU    0FFA2H ; Lower Memory control Register         
  FFA4                      20             PCSBA   EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA6                      21             MMCS    EQU    0FFA6H ; Used for controlling the MCS pins on the 8088
  FFA8                      22             MPCS    EQU    0FFA8H ; MMCS and PCS Alter Control Register
                            23             
  0080                      24             PORTA  EQU    0080H
  0081                      25             PORTB  EQU    0081H
  0082                      26             PORTC  EQU    0082H
  0083                      27             CWR    EQU    0083H
                            28             
  FF38                      29             INT0CON  EQU   0FF38H
  FF22                      30             EOI      EQU   0FF22H
  FF28                      31             IMASK    EQU   0FF28H
                            32             
  0100                      33             PCS2_ADDR EQU 100H ; Used for controlling which BCD displays the digit
  0180                      34             PCS3_ADDR EQU 180H ; Used for controlling the pattern that is displayed on th
                                   e BCDs
  0200                      35             PCS4_ADDR EQU 200H ; Used for controlling the DAC chip of the speaker system
                            36             
  0018                      37             TIMER_COUNTER_BCD_LEN   EQU 24
  0030                      38             TIMER_COUNTER_KBD_LEN   EQU 48
  0604                      39             TIMEOUT_COUNTER_LEN             EQU 1540
                            40             
                            41             ;Sound Mappings for playing on the speaker
  002C                      42             SOUND_SILENCE                    EQU  44
  001E                      43             SOUND_AND                        EQU  30
  0021                      44             SOUND_DOLLARS                    EQU  33
  0022                      45             SOUND_CENTS                      EQU  34
  001C                      46             SOUND_HUNDRED                    EQU  28
  001D                      47             SOUND_THOUSAND                   EQU  29
  0023                      48             SOUND_GOOD                       EQU  35
  0025                      49             SOUND_AFTERNOON                  EQU  37
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE    2


LOC  OBJ                  LINE     SOURCE

  0028                      50             SOUND_PURCHASED                  EQU  40
  001F                      51             SOUND_COST                               EQU  31
  0029                      52             SOUND_YOURCHANGEIS               EQU  41
  002A                      53             SOUND_THANKYOUANDGOODBYE EQU  42        
                            54             
                            55             ;Serial Communication Mappings
  0000                      56             NETWORK_DISABLE             EQU  00
  0001                      57             NETWORK_ENABLE              EQU  01     
  0002                      58             NETWORK_END_TRANSACTION     EQU  02
  0003                      59             NETWORK_LOGOUT                      EQU  03
  0004                      60             NETWORK_CANCEL_TRANSACTION  EQU  04
                            61             
                            62             ;Cash Register State Mappings
  0000                      63             WAITING_FOR_LOGIN     EQU  00
  0001                      64             ENTER_LOGIN_USERNAME  EQU  01
  0002                      65             WAITING_FOR_BARCODE   EQU  02
  0003                      66             ENTER_BARCODE         EQU  03
  0004                      67             ENTER_QUANTITY        EQU  04
  0005                      68             DISPLAY_ITEM_PRICE    EQU  05
  0006                      69             CANCEL_ITEM                   EQU  06
  0007                      70             END_TRANSACTION           EQU  07
  0008                      71             CHANGE_PAY                        EQU  08
                            72             
                            73             ;Keypad Character Mappings
  0000                      74             KBD_CHAR_RESET                 EQU  00
  005F                      75             KBD_BACKSPACE                  EQU  '_'
  007C                      76             KBD_ENTER                      EQU  '|'
  0041                      77             KBD_TRIGGER_LOGIN              EQU  'A'
  0042                      78             KBD_TRIGGER_TRANSACTION        EQU  'B'
  0043                      79             KBD_TRIGGER_NEW_ITEM               EQU  'C'
  0044                      80             KBD_TRIGGER_CANCEL_ITEM            EQU  'D'
  0045                      81             KBD_TRIGGER_CANCEL_TRANSACTION EQU  'E'
  0046                      82             KBD_TRIGGER_END_TRANSACTION    EQU  'F'
  0047                      83             KBD_TRIGGER_MODIFY                         EQU  'G'
  0048                      84             KBD_TRIGGER_DISPLAY_CURRENT    EQU  'H'
  0049                      85             KBD_TRIGGER_CHANGE_PAY         EQU  'I'
  004A                      86             KBD_TRIGGER_ANDROID                        EQU  'J'
  004C                      87             KBD_TRIGGER_SEND_EMAIL_SMS     EQU  'L'
                            88             
                            89             ;Keyboard Input Constants
  0006                      90             KBD_USERNAME_LENGTH  EQU  06
  0008                      91             KBD_BARCODE_LENGTH   EQU  08
  0003                      92             KBD_QUANTITY_LENGTH  EQU  03
  0008                      93             KBD_CHANGE_LENGTH    EQU  08
  0000                      94             KBD_OLD_INPUT        EQU  00
  0001                      95             KBD_NEW_INPUT        EQU  01
                            96     
                            97             
----                        98     STACK_SEG       SEGMENT
0000 (256                   99             DB      256 DUP(?)
     ??
     )
0100                       100             TOS     LABEL   WORD
----                       101     STACK_SEG       ENDS
                           102     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE    3


LOC  OBJ                  LINE     SOURCE

                           103     
----                       104     DATA_SEG        SEGMENT
0000 0A                    105             TIMER2_MESS           DB        10,13,'TIMER2 INTERRUPT    '
0001 0D
0002 54494D45523220
     494E5445525255
     505420202020
0016 2F                    106             T_COUNT               DB        2FH
0017 2F                    107             T_COUNT_SET           DB        2FH
0018 0A                    108             REC_MESS              DB        10,13,'Period of timer =     '
0019 0D
001A 506572696F6420
     6F662074696D65
     72203D20202020
     20
0030 43323237315D          109             CASH_REGISTER_ID  DB    'C2271]'
                           110             
                           111             ;Keypad Variables       
0036 7C                    112             KEYS_PART1           DB   '|','0','_','L','K','J','9','8','7','I','H','G' 
0037 30
0038 5F
0039 4C
003A 4B
003B 4A
003C 39
003D 38
003E 37
003F 49
0040 48
0041 47
0042 36                    113             KEYS_PART2           DB   '6','5','4','F','E','D','3','2','1','C','B','A'
0043 35
0044 34
0045 46
0046 45
0047 44
0048 33
0049 32
004A 31
004B 43
004C 42
004D 41
004E 00                    114             KEY_FLAG             DB   00H ;This variable is used for controlling multiple
                                    detections of the same key-press inside the keypad loop
004F 00                    115             KBD_NUM_INPUT        DB   00H ;This variable stores the numerical input from 
                                   the keyboard
0050 00                    116             KBD_CHAR_INPUT       DB   00H ;This variable stores the character input from 
                                   the keyboard
0051 00                    117             KBD_INPUT_STATE      DB   00H
0052 00                    118             CHANGE_PLACE_VALUE   DB   00H
0053 (10                   119             CHANGE_PRICE         DB   10 DUP('0')
     30
     )
005D (6                    120             USER_USERNAME        DB   6 DUP('0')
     30
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE    4


LOC  OBJ                  LINE     SOURCE

     )
0063 (6                    121             USER_PASSWORD        DB   6 DUP('0')
     30
     )
0069 (8                    122             USER_BARCODE         DB   8 DUP('0')
     30
     )
0071 (3                    123             USER_QUANTITY        DB   3 DUP('0')
     30
     )
0074 00                    124             USER_INPUT_LENGTH    DB   00H   
0075 00                    125             CHANGE_SUCCESS_FLAG  DB  00H
                           126             
                           127             ;Sound Variables
0076 0000                  128             SOUND_OFFSET   DW   0000H, 1269H, 2121H, 2EA9H, 3BD3H, 478DH, 546EH, 6608H, 7
                                   53DH, 7C41H
0078 6912
007A 2121
007C A92E
007E D33B
0080 8D47
0082 6E54
0084 0866
0086 3D75
0088 417C
008A 0B8D                  129                                        DW   8D0BH, 98C6H, 0AAF8H, 0BA1EH, 0CA87H, 0DB3CH,
                                    9D67H, 055BH, 1E09H, 32B8H
008C C698
008E F8AA
0090 1EBA
0092 87CA
0094 3CDB
0096 679D
0098 5B05
009A 091E
009C B832
009E 554A                  130                                        DW   4A55H, 567AH, 60D6H, 6E3CH, 7A8BH, 8BFAH, 9E5
                                   BH, 0AA63H, 0B8D6H, 0C3F7H
00A0 7A56
00A2 D660
00A4 3C6E
00A6 8B7A
00A8 FA8B
00AA 5B9E
00AC 63AA
00AE D6B8
00B0 F7C3
00B2 67CF                  131                                        DW   0CF67H, 0D6EAH, 0E31DH, 0F49EH, 06C9H, 13A6H,
                                    1C5FH, 29DAH, 408FH, 5293H
00B4 EAD6
00B6 1DE3
00B8 9EF4
00BA C906
00BC A613
00BE 5F1C
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE    5


LOC  OBJ                  LINE     SOURCE

00C0 DA29
00C2 8F40
00C4 9352
00C6 3466                  132                                        DW   6634H, 83C7H, 0A00BH, 0C7B2H, 0CAD7H
00C8 C783
00CA 0BA0
00CC B2C7
00CE D7CA
                           133                                
00D0 6812                  134             SOUND_SIZE         DW   1268H, 0EB7H, 0D87H, 0D29H, 0BB9H, 0CE0H, 1199H, 0F34
                                   H, 0703H, 10C9H
00D2 B70E
00D4 870D
00D6 290D
00D8 B90B
00DA E00C
00DC 9911
00DE 340F
00E0 0307
00E2 C910
00E4 BA0B                  135                                        DW   0BBAH, 1231H, 0F25H, 1068H, 10B4H, 122AH, 175
                                   3H, 18ADH, 14AEH, 179CH
00E6 3112
00E8 250F
00EA 6810
00EC B410
00EE 2A12
00F0 5317
00F2 AD18
00F4 AE14
00F6 9C17
00F8 240C                  136                                        DW   0C24H, 0A5BH, 0D65H, 0C4EH, 116EH, 1260H, 0C0
                                   7H, 0E72H, 0B20H, 0B6FH
00FA 5B0A
00FC 650D
00FE 4E0C
0100 6E11
0102 6012
0104 070C
0106 720E
0108 200B
010A 6F0B
010C 8207                  137                                        DW   0782H, 0C32H, 1180H, 122AH, 0CDCH, 08B8H, 0D7
                                   AH, 16B4H, 1203H, 13A0H
010E 320C
0110 8011
0112 2A12
0114 DC0C
0116 B808
0118 7A0D
011A B416
011C 0312
011E A013
0120 921D                  138                                        DW   1D92H, 1C43H, 27A6H, 0324H, 031FH       
                                                         
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE    6


LOC  OBJ                  LINE     SOURCE

0122 431C
0124 A627
0126 2403
0128 1F03
                           139     
012A 0040                  140             EEPROM_START   DW   4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4
                                   000H, 4000H
012C 0040
012E 0040
0130 0040
0132 0040
0134 0040
0136 0040
0138 0040
013A 0040
013C 0040
013E 0040                  141                                        DW   4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 450
                                   0H, 5000H, 5000H, 5000H
0140 0040
0142 0040
0144 0040
0146 0040
0148 0040
014A 0045
014C 0050
014E 0050
0150 0050
0152 0050                  142                                        DW   5000H, 5000H, 5000H, 5000H, 5000H, 5000H, 500
                                   0H, 5000H, 5000H, 5000H 
0154 0050
0156 0050
0158 0050
015A 0050
015C 0050
015E 0050
0160 0050
0162 0050
0164 0050
0166 0050                  143                                        DW   5000H, 5000H, 5000H, 5000H, 6000H, 6000H, 600
                                   0H, 6000H, 6000H, 6000H
0168 0050
016A 0050
016C 0050
016E 0060
0170 0060
0172 0060
0174 0060
0176 0060
0178 0060
017A 0060                  144                                        DW   6000H, 6000H, 6000H, 6000H, 6000H       
                                                         
017C 0060
017E 0060
0180 0060
0182 0060
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE    7


LOC  OBJ                  LINE     SOURCE

                           145                                        
0184 0000                  146             SOUND_ADDRESS        DW   0000H
0186 0000                  147             SOUND_COUNT          DW   0000H
0188 (32                   148             SOUND_QUEUE          DB   32 DUP(?)
     ??
     )
01A8 00                    149             SOUND_HEAD           DB   00H
01A9 00                    150             SOUND_TAIL           DB   00H
01AA 00                    151             SOUND_INDEX_INPUT    DB   00H
01AB 00                    152             SAY_SOUND_ONCE_FLAG  DB   00H
                           153             
                           154             ;7-Segment Variables
                           155             ; BCD Digit Mapping:    0        1        2        3    4    5    6    7    8
                                       9    L     E    A    P
01AC 5F                    156         BCD_NUMBERS        DB  5FH, 50H, 6DH, 79H, 72H, 3BH, 3EH, 51H, 7FH, 73H, 0EH, 02F
                                   H, 77H, 67H                                                
01AD 50
01AE 6D
01AF 79
01B0 72
01B1 3B
01B2 3E
01B3 51
01B4 7F
01B5 73
01B6 0E
01B7 2F
01B8 77
01B9 67
01BA 0E                    157             BCD_DISPLAY            DB  0EH, 0EH, 0EH, 0EH, 0EH, 0EH
01BB 0E
01BC 0E
01BD 0E
01BE 0E
01BF 0E
01C0 00                    158             CURRENT_BCD        DB  00H
01C1 00                    159             TRIGGER_L_FLAG     DB  00H 
01C2 00                    160             TRIGGER_E_FLAG     DB  00H 
01C3 00                    161             TRIGGER_A_FLAG     DB  00H 
01C4 00                    162             TRIGGER_P_FLAG     DB  00H 
01C5 00                    163             SHOW_BCD_ONCE_FLAG DB  00H
                           164             
                           165             ;Timer Variables
01C6 00                    166             TIMER_COUNTER_BCD   DB  00H
01C7 0000                  167         TIMER_COUNTER_KBD   DW  0000H
01C9 0000                  168             TIMEOUT_COUNTER         DW  0000H
01CB 00                    169             TIMEOUT_SEC_COUNT   DB  00H
                           170             
                           171             ;Serial Variables
01CC 00                    172             START_READ            DB  00H
01CD 00                    173             START_RECEIVE_PRICE   DB  00H
01CE 00                    174             SERIAL_INDEX          DB  00H
01CF (10                   175             ITEM_PRICE            DB  10 DUP('0')
     30
     )
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE    8


LOC  OBJ                  LINE     SOURCE

01D9 00                    176             PLACE_VALUE           DB  00H
01DA 00                    177             TMP_PLACE_VALUE       DB  00H
01DB (2                    178             TWO_DIGIT_SOUND       DB  2 DUP(?)
     ??
     )
01DD 00                    179             AND_FLAG              DB  00H
01DE 00                    180             CENTS_AND_FLAG        DB  00H
01DF 00                    181             THOUSAND_FLAG         DB  00H
01E0 (10                   182             TOTAL_PRICE           DB  10 DUP('0')
     30
     )
01EA 00                    183             TOTAL_PLACE_VALUE     DB  00H
01EB 00                    184             CASH_REGISTER_START   DB  00H
01EC 00                    185             CASH_REGISTER_FLAG    DB  00H
01ED 00                    186             NETWORK_STATE         DB  00H
01EE 00                    187             CASH_REGISTER_STATE   DB  WAITING_FOR_LOGIN
01EF 00                    188             PURCHASE_ITEM_COUNT   DB  00H
01F0 00                    189             CHANGE_DONE_FLAG      DB  00H
01F1 00                    190             SWAP_JUMP_FLAG            DB  00H
01F2 00                    191             MODIFY_ITEM_FLAG      DB  00H
01F3 00                    192             USERNAME_FLAG             DB  00H
01F4 00                    193             EMAIL_FLAG                        DB  00H
01F5 00                    194             ANDROID_FLAG          DB  00H
----                       195     DATA_SEG        ENDS
                           196     
                           197             
----                       198     CODE_SEG        SEGMENT
                           199     
                           200             PUBLIC          START
                           201     
                           202     ASSUME  CS:CODE_SEG, SS:STACK_SEG, DS:DATA_SEG
                           203     
0000                       204     START:
                           205     ;initialize stack area
0000 B8----         R      206             MOV     AX,STACK_SEG            
0003 8ED0                  207             MOV     SS,AX
0005 368B260001            208             MOV     SP,TOS
                           209                     
000A B8----         R      210             MOV AX, DATA_SEG
000D 8ED8                  211             MOV DS, AX
                           212     
                           213     ; Initialize the on-chip peripherals
000F 9A0000----     E      214             CALL FAR PTR IODEFINE
                           215             
                           216     ; Initialize MPCS to MAP peripheral to IO address
                           217             
0014 BAA8FF                218             MOV  DX, MPCS  
0017 B88320                219             MOV  AX, 2083H 
001A EF                    220             OUT  DX, AX
                           221             
001B BAA6FF                222             MOV  DX, MMCS ; send MCS start address to 40000
001E B80340                223             MOV  AX, 4003H 
0021 EF                    224             OUT  DX, AX
                           225     
                           226     ; PCSBA initial, set the parallel port start from 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE    9


LOC  OBJ                  LINE     SOURCE

0022 BAA4FF                227             MOV DX, PCSBA
0025 B80300                228             MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
0028 EF                    229             OUT DX, AX
                           230     
                           231     ; Initialize LMCS 
0029 BAA2FF                232         MOV DX, LMCR
002C B8C401                233         MOV AX, 01C4H  ; Starting address 1FFFH, 8K, No waits, last should be 5H for 1 wa
                                   its      
002F EF                    234         OUT DX, AX
                           235             
0030 B089                  236             MOV AL, 89H ;mode 0, [A-out(for led)] [B - out, C-in (for reading keypad))]
0032 BA8300                237             MOV DX, CWR ; load CWR to DX
0035 EE                    238             OUT DX, AL      ;load CWR value from AL
                           239             
                           240     ; ######################### Start of User Main Routine ###########################
                           241       
0036 9A0000----     E      242         CALL FAR PTR set_timer2
003B FB                    243         STI
                           244                     
003C                       245             NEXT:
003C EBFE                  246                     JMP NEXT
                           247             
                           248     ; ######################### End of User Main Routine #############################
                                      
                           249     
                           250     
                           251     ;Procedure to change the state of the cash register according to user's input
003E                       252     CHANGE_CASHIER_STATE PROC FAR   
003E 50                    253             PUSH AX
003F 53                    254             PUSH BX
0040 51                    255             PUSH CX
                           256     
0041 803EEE0100            257             CMP CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0046 743B                  258             JE CASHIER_WAITING_FOR_LOGIN
                           259             
0048 803EEE0101            260             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
004D 7448                  261             JE CASHIER_ENTER_USERNAME       
                           262             
004F 803EEE0102            263             CMP CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0054 7469                  264             JE FIRST_JUMP_WAITING_FOR_BARCODE
                           265             
0056 803EEE0103            266             CMP CASH_REGISTER_STATE, ENTER_BARCODE
005B 7465                  267             JE FIRST_JUMP_ENTER_BARCODE
                           268             
005D 803EEE0104            269             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0062 7461                  270             JE FIRST_JUMP_ENTER_QUANTITY
                           271             
0064 803EEE0105            272             CMP CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0069 745D                  273             JE FIRST_JUMP_DISPLAY_ITEM_PRICE
                           274             
006B 803EEE0106            275             CMP CASH_REGISTER_STATE, CANCEL_ITEM
0070 7459                  276             JE FIRST_JUMP_CANCEL_ITEM
                           277             
0072 803EEE0108            278             CMP CASH_REGISTER_STATE, CHANGE_PAY
0077 7458                  279             JE FIRST_JUMP_CHANGE_PAY
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   10


LOC  OBJ                  LINE     SOURCE

                           280             
0079 803EEE0107            281             CMP CASH_REGISTER_STATE, END_TRANSACTION
007E 744E                  282             JE FIRST_JUMP_END_TRANSACTION
                           283     
0080 EB3A90                284             JMP FIRST_JUMP_STATE_END
                           285     
                           286     ;Waiting for user to press the login button     
0083                       287     CASHIER_WAITING_FOR_LOGIN:
0083 803E500041            288             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
0088 7532                  289             JNE FIRST_JUMP_STATE_END
008A C606EE0101            290             MOV CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
008F 9A1506----     R      291             CALL FAR PTR STATE_TRANSITION
0094 EB2690                292             JMP FIRST_JUMP_STATE_END
                           293             
                           294     ;User is now entering his/her login credentials
0097                       295     CASHIER_ENTER_USERNAME:
0097 803E500000            296             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
009C 7477                  297             JE USERNAME_CHECK_NUMBER
009E 803E500041            298             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
00A3 752F                  299             JNE USERNAME_CHECK_BACKSPACE
00A5 C606C10101            300             MOV TRIGGER_L_FLAG, 01H
00AA C606EE0100            301             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
00AF C606F30100            302             MOV USERNAME_FLAG, 00H
00B4 9A1506----     R      303             CALL FAR PTR STATE_TRANSITION
00B9 E98204                304             JMP CASHIER_STATE_END   
00BC                       305     FIRST_JUMP_STATE_END:
00BC E97F04                306             JMP CASHIER_STATE_END
00BF                       307     FIRST_JUMP_WAITING_FOR_BARCODE:
00BF EB6390                308             JMP CASHIER_WAITING_FOR_BARCODE
00C2                       309     FIRST_JUMP_ENTER_BARCODE:
00C2 E99800                310             JMP CASHIER_ENTER_BARCODE
00C5                       311     FIRST_JUMP_ENTER_QUANTITY:
00C5 E92801                312             JMP CASHIER_ENTER_QUANTITY
00C8                       313     FIRST_JUMP_DISPLAY_ITEM_PRICE:
00C8 E9A301                314             JMP CASHIER_DISPLAY_ITEM_PRICE
00CB                       315     FIRST_JUMP_CANCEL_ITEM:
00CB E9EC02                316             JMP CASHIER_CANCEL_ITEM
00CE                       317     FIRST_JUMP_END_TRANSACTION:
00CE E94903                318             JMP CASHIER_END_TRANSACTION
00D1                       319     FIRST_JUMP_CHANGE_PAY:
00D1 E96903                320             JMP CASHIER_CHANGE_PAY
00D4                       321     USERNAME_CHECK_BACKSPACE:
00D4 803E50005F            322             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
00D9 7508                  323             JNE USERNAME_CHECK_ENTER
00DB 9A2A06----     R      324             CALL FAR PTR BACKSPACE_KEYPRESS
00E0 E95B04                325             JMP CASHIER_STATE_END
00E3                       326     USERNAME_CHECK_ENTER:
00E3 803E50007C            327             CMP KBD_CHAR_INPUT, KBD_ENTER
00E8 752B                  328             JNE USERNAME_CHECK_NUMBER
00EA 803E740006            329             CMP USER_INPUT_LENGTH, KBD_USERNAME_LENGTH
00EF 75CB                  330             JNE FIRST_JUMP_STATE_END
00F1 803EF30101            331             CMP USERNAME_FLAG, 01H
00F6 750C                  332             JNE CONTINUE_TO_PASSWORD
00F8 C606ED0101            333             MOV NETWORK_STATE, NETWORK_ENABLE
00FD 9A1506----     R      334             CALL FAR PTR STATE_TRANSITION
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   11


LOC  OBJ                  LINE     SOURCE

0102 EBB8                  335             JMP FIRST_JUMP_STATE_END
0104                       336     CONTINUE_TO_PASSWORD:
0104 C606F30101            337             MOV USERNAME_FLAG, 01H
0109 C606EE0101            338             MOV CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
010E 9A1506----     R      339             CALL FAR PTR STATE_TRANSITION
0113 EBA7                  340             JMP FIRST_JUMP_STATE_END
0115                       341     USERNAME_CHECK_NUMBER:  
0115 803E740006            342             CMP USER_INPUT_LENGTH, KBD_USERNAME_LENGTH
011A 74A0                  343             JE FIRST_JUMP_STATE_END
011C 9A4C05----     R      344             CALL FAR PTR GET_USER_DIGIT
0121                       345     SECOND_JUMP_STATE_END:
0121 E91A04                346             JMP CASHIER_STATE_END   
                           347             
                           348     ;Waiting for the user to begin a new transaction
0124                       349     CASHIER_WAITING_FOR_BARCODE:
0124 803E500000            350             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0129 74F6                  351             JE SECOND_JUMP_STATE_END
012B 803E500041            352             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
0130 7517                  353             JNE BARCODE_CHECK_TRANSACTION
0132 C606C10101            354             MOV TRIGGER_L_FLAG, 01H
0137 C606EE0100            355             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
013C C606ED0103            356             MOV NETWORK_STATE, NETWORK_LOGOUT
0141 9A1506----     R      357             CALL FAR PTR STATE_TRANSITION
0146 E9F503                358             JMP CASHIER_STATE_END   
0149                       359     BARCODE_CHECK_TRANSACTION:
0149 803E500042            360             CMP KBD_CHAR_INPUT, KBD_TRIGGER_TRANSACTION
014E 75D1                  361             JNE SECOND_JUMP_STATE_END
0150 C606EE0103            362             MOV CASH_REGISTER_STATE, ENTER_BARCODE
0155 9A1506----     R      363             CALL FAR PTR STATE_TRANSITION
015A E9E103                364             JMP CASHIER_STATE_END
                           365             
                           366     ;User is now entering the barcode
015D                       367     CASHIER_ENTER_BARCODE:
015D 803E500000            368             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0162 744B                  369             JE FIRST_JMP_BARCODE_CHECK_NUMBER
0164 803E50005F            370             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
0169 7508                  371             JNE BARCODE_CANCEL_ITEM
016B 9A2A06----     R      372             CALL FAR PTR BACKSPACE_KEYPRESS
0170 E9CB03                373             JMP CASHIER_STATE_END
0173                       374     BARCODE_CANCEL_ITEM:
0173 803E500044            375             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
0178 7538                  376             JNE BARCODE_CHECK_ENTER
017A 803EF40101            377             CMP EMAIL_FLAG, 01H
017F 7512                  378             JNE NORMAL_CANCEL_BARCODE
0181 C606EE0108            379             MOV CASH_REGISTER_STATE, CHANGE_PAY
0186 C606F40100            380             MOV EMAIL_FLAG, 00H
018B 9A1506----     R      381             CALL FAR PTR STATE_TRANSITION
0190 E9AB03                382             JMP CASHIER_STATE_END
0193                       383     NORMAL_CANCEL_BARCODE:
0193 C606EE0105            384             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0198 C606F20100            385             MOV MODIFY_ITEM_FLAG, 00H
019D C606C50101            386             MOV SHOW_BCD_ONCE_FLAG, 01H
01A2 C606AB0101            387             MOV SAY_SOUND_ONCE_FLAG, 01H
01A7 9A1506----     R      388             CALL FAR PTR STATE_TRANSITION
01AC E98F03                389             JMP CASHIER_STATE_END
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   12


LOC  OBJ                  LINE     SOURCE

01AF                       390     FIRST_JMP_BARCODE_CHECK_NUMBER:
01AF EB3090                391             JMP BARCODE_CHECK_NUMBER
01B2                       392     BARCODE_CHECK_ENTER:
01B2 803E50007C            393             CMP KBD_CHAR_INPUT, KBD_ENTER
01B7 7528                  394             JNE BARCODE_CHECK_NUMBER
01B9 803E740008            395             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
01BE 752D                  396             JNE THIRD_JUMP_STATE_END
01C0 803EF40101            397             CMP EMAIL_FLAG, 01H
01C5 750D                  398             JNE NORMAL_BARCODE_ENTER
01C7 C606ED0101            399             MOV NETWORK_STATE, NETWORK_ENABLE
01CC 9A1506----     R      400             CALL FAR PTR STATE_TRANSITION
01D1 E96A03                401             JMP CASHIER_STATE_END
01D4                       402     NORMAL_BARCODE_ENTER:
01D4 C606EE0104            403             MOV CASH_REGISTER_STATE, ENTER_QUANTITY
01D9 9A1506----     R      404             CALL FAR PTR STATE_TRANSITION
01DE E95D03                405             JMP CASHIER_STATE_END
01E1                       406     BARCODE_CHECK_NUMBER:   
01E1 803E740008            407             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
01E6 7405                  408             JE THIRD_JUMP_STATE_END
01E8 9A4C05----     R      409             CALL FAR PTR GET_USER_DIGIT
01ED                       410     THIRD_JUMP_STATE_END:
01ED E94E03                411             JMP CASHIER_STATE_END   
                           412     
                           413     ;User is now entering the quantity      
01F0                       414     CASHIER_ENTER_QUANTITY:
01F0 803E500000            415             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
01F5 7468                  416             JE QUANTITY_CHECK_NUMBER
01F7 803E50005F            417             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
01FC 7508                  418             JNE QUANTITY_CANCEL_ITEM
01FE 9A2A06----     R      419             CALL FAR PTR BACKSPACE_KEYPRESS
0203 E93803                420             JMP CASHIER_STATE_END
0206                       421     QUANTITY_CANCEL_ITEM:
0206 803E500044            422             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
020B 751C                  423             JNE QUANTITY_CHECK_ANDROID
020D C606EE0105            424             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0212 C606F20100            425             MOV MODIFY_ITEM_FLAG, 00H
0217 C606C50101            426             MOV SHOW_BCD_ONCE_FLAG, 01H
021C C606AB0101            427             MOV SAY_SOUND_ONCE_FLAG, 01H
0221 9A1506----     R      428             CALL FAR PTR STATE_TRANSITION
0226 E91503                429             JMP CASHIER_STATE_END
0229                       430     QUANTITY_CHECK_ANDROID:
0229 803E50004A            431             CMP KBD_CHAR_INPUT, KBD_TRIGGER_ANDROID
022E 750F                  432             JNE QUANTITY_CHECK_ENTER
0230 803E740000            433             CMP USER_INPUT_LENGTH, 00H
0235 74B6                  434             JE THIRD_JUMP_STATE_END
0237 C606F50101            435             MOV ANDROID_FLAG, 01H
023C EB0F90                436             JMP BYPASS_ANDROID_END
023F                       437     QUANTITY_CHECK_ENTER:
023F 803E50007C            438             CMP KBD_CHAR_INPUT, KBD_ENTER
0244 7519                  439             JNE QUANTITY_CHECK_NUMBER
0246 803E740000            440             CMP USER_INPUT_LENGTH, 00H
024B 74A0                  441             JE THIRD_JUMP_STATE_END
024D                       442     BYPASS_ANDROID_END:
024D C606ED0101            443             MOV NETWORK_STATE, NETWORK_ENABLE
0252 C606500000            444             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   13


LOC  OBJ                  LINE     SOURCE

0257 9A7B10----     R      445             CALL FAR PTR CLEAR_7SEGMENT
025C E9DF02                446             JMP CASHIER_STATE_END
025F                       447     QUANTITY_CHECK_NUMBER:  
025F 803E740003            448             CMP USER_INPUT_LENGTH, KBD_QUANTITY_LENGTH
0264 7405                  449             JE FOURTH_JUMP_STATE_END
0266 9A4C05----     R      450             CALL FAR PTR GET_USER_DIGIT
026B                       451     FOURTH_JUMP_STATE_END:
026B E9D002                452             JMP CASHIER_STATE_END
                           453     
                           454     ;Cash register is now displaying the item price after receiving it via serial
026E                       455     CASHIER_DISPLAY_ITEM_PRICE:
026E 803EC50101            456             CMP SHOW_BCD_ONCE_FLAG, 01H
0273 740A                  457             JE CONTINUE_WITH_SOUND_PRICE
0275 C606C50101            458             MOV SHOW_BCD_ONCE_FLAG, 01H
027A 9A6506----     R      459             CALL FAR PTR DISPLAY_PRICE_ON_BCD
027F                       460     CONTINUE_WITH_SOUND_PRICE:
027F 803EAB0101            461             CMP SAY_SOUND_ONCE_FLAG, 01H
0284 7427                  462             JE PRICE_CHECK_NEW_ITEM
0286 FE06EF01              463             INC PURCHASE_ITEM_COUNT
028A C606AB0101            464             MOV SAY_SOUND_ONCE_FLAG, 01H
028F C606AA011F            465             MOV SOUND_INDEX_INPUT, SOUND_COST ;To say the word 'cost'
0294 9ADF0B----     R      466             CALL FAR PTR ADD_SOUND_INDEX
0299 C606AA012C            467             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
029E 9ADF0B----     R      468             CALL FAR PTR ADD_SOUND_INDEX
02A3 9A080C----     R      469             CALL FAR PTR POPULATE_SOUND_QUEUE
02A8 9ADA0D----     R      470             CALL FAR PTR ADD_INCOMING_PRICE
02AD                       471     PRICE_CHECK_NEW_ITEM:
02AD 803E500043            472             CMP KBD_CHAR_INPUT, KBD_TRIGGER_NEW_ITEM
02B2 7517                  473             JNE PRICE_CANCEL_TRANSACTION
02B4 C606EE0103            474             MOV CASH_REGISTER_STATE, ENTER_BARCODE
02B9 C606AB0100            475             MOV SAY_SOUND_ONCE_FLAG, 00H
02BE C606C50100            476             MOV SHOW_BCD_ONCE_FLAG, 00H
02C3 9A1506----     R      477             CALL FAR PTR STATE_TRANSITION
02C8 E97302                478             JMP CASHIER_STATE_END
02CB                       479     PRICE_CANCEL_TRANSACTION:       
02CB 803E500045            480             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
02D0 751C                  481             JNE PRICE_VIEW_CURRENT
02D2                       482     BYPASS_CANCEL_TRANSACTION:
02D2 C606EE0102            483             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
02D7 C606C40101            484             MOV TRIGGER_P_FLAG, 01H
02DC 9A1506----     R      485             CALL FAR PTR STATE_TRANSITION
02E1 9AB305----     R      486             CALL FAR PTR CLEAR_ALL_VARIABLES
02E6 C606ED0104            487             MOV NETWORK_STATE, NETWORK_CANCEL_TRANSACTION
02EB E95002                488             JMP CASHIER_STATE_END
02EE                       489     PRICE_VIEW_CURRENT:
02EE 803E500048            490             CMP KBD_CHAR_INPUT, KBD_TRIGGER_DISPLAY_CURRENT
02F3 7514                  491             JNE PRICE_CANCEL_ITEM
02F5 803EEF0100            492             CMP PURCHASE_ITEM_COUNT, 00H
02FA 7432                  493             JE FIFTH_JUMP_STATE_END
02FC C606AA0128            494             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
0301 9ADF0B----     R      495             CALL FAR PTR ADD_SOUND_INDEX
0306 EB4B90                496             JMP BYPASS_VIEW_TOTAL
0309                       497     PRICE_CANCEL_ITEM:
0309 803E500044            498             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   14


LOC  OBJ                  LINE     SOURCE

030E 7521                  499             JNE PRICE_END_TRANSACTION
0310 803EEF0100            500             CMP PURCHASE_ITEM_COUNT, 00H
0315 740D                  501             JE DISPLAY_ERROR_CODE_PRICE
0317 C606EE0106            502             MOV CASH_REGISTER_STATE, CANCEL_ITEM
031C 9A1506----     R      503             CALL FAR PTR STATE_TRANSITION
0321 E91A02                504             JMP CASHIER_STATE_END
0324                       505     DISPLAY_ERROR_CODE_PRICE:
0324 C606C20101            506             MOV TRIGGER_E_FLAG, 01H
0329 9A1506----     R      507             CALL FAR PTR STATE_TRANSITION
032E                       508     FIFTH_JUMP_STATE_END:
032E E90D02                509             JMP CASHIER_STATE_END
0331                       510     PRICE_END_TRANSACTION:
0331 803E500046            511             CMP KBD_CHAR_INPUT, KBD_TRIGGER_END_TRANSACTION
0336 7555                  512             JNE PRICE_MODIFY_ITEM
0338 803EEF0100            513             CMP PURCHASE_ITEM_COUNT, 00H
033D 7493                  514             JE BYPASS_CANCEL_TRANSACTION
033F C606EE0107            515             MOV CASH_REGISTER_STATE, END_TRANSACTION
0344 C606ED0102            516             MOV NETWORK_STATE, NETWORK_END_TRANSACTION
0349 C606AA0128            517             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
034E 9ADF0B----     R      518             CALL FAR PTR ADD_SOUND_INDEX
0353                       519     BYPASS_VIEW_TOTAL:
0353 9A1506----     R      520             CALL FAR PTR STATE_TRANSITION
0358 33C9                  521             XOR CX, CX
035A 33DB                  522             XOR BX, BX
035C B10A                  523             MOV CL, 10
035E                       524     TRANSFER_TO_ITEM_PRICE:
035E 8A87E001              525             MOV AL, TOTAL_PRICE[BX]
0362 8887CF01              526             MOV ITEM_PRICE[BX], AL
0366 43                    527             INC BX
0367 E2F5                  528             LOOP TRANSFER_TO_ITEM_PRICE
0369 A0EA01                529             MOV AL, TOTAL_PLACE_VALUE
036C 0430                  530             ADD AL, 48
036E A2D901                531             MOV PLACE_VALUE, AL
0371 A2DA01                532             MOV TMP_PLACE_VALUE, AL
0374 2C2D                  533             SUB AL, 45
0376 A2CE01                534             MOV SERIAL_INDEX, AL
0379 9A6506----     R      535             CALL FAR PTR DISPLAY_PRICE_ON_BCD
037E 9A080C----     R      536             CALL FAR PTR POPULATE_SOUND_QUEUE
0383 803EEE0108            537             CMP CASH_REGISTER_STATE, CHANGE_PAY
0388 7464                  538             JE FIRST_JUMP_CHANGE_REMAINING
038A E9B101                539             JMP CASHIER_STATE_END
038D                       540     PRICE_MODIFY_ITEM:
038D 803E500047            541             CMP KBD_CHAR_INPUT, KBD_TRIGGER_MODIFY
0392 759A                  542             JNE FIFTH_JUMP_STATE_END
0394 803EEF0100            543             CMP PURCHASE_ITEM_COUNT, 00H
0399 7412                  544             JE DISPLAY_ERROR_MODIFY_PRICE
039B C606EE0103            545             MOV CASH_REGISTER_STATE, ENTER_BARCODE
03A0 C606F20101            546             MOV MODIFY_ITEM_FLAG, 01H
03A5 9A1506----     R      547             CALL FAR PTR STATE_TRANSITION
03AA E99101                548             JMP CASHIER_STATE_END
03AD                       549     DISPLAY_ERROR_MODIFY_PRICE:
03AD C606C20101            550             MOV TRIGGER_E_FLAG, 01H
03B2 9A1506----     R      551             CALL FAR PTR STATE_TRANSITION   
03B7 E98401                552             JMP CASHIER_STATE_END
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   15


LOC  OBJ                  LINE     SOURCE

                           553             
                           554     ; Cashier is now cancelling a single item in the transaction
03BA                       555     CASHIER_CANCEL_ITEM:
03BA 803E500000            556             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
03BF 744B                  557             JE CANCEL_CHECK_NUMBER
03C1 803E50005F            558             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
03C6 7508                  559             JNE CANCEL_CHECK_AGAIN
03C8 9A2A06----     R      560             CALL FAR PTR BACKSPACE_KEYPRESS
03CD E96E01                561             JMP CASHIER_STATE_END
03D0                       562     CANCEL_CHECK_AGAIN:
03D0 803E500044            563             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
03D5 751A                  564             JNE CANCEL_CHECK_ENTER
03D7 C606EE0105            565             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
03DC C606C50101            566             MOV SHOW_BCD_ONCE_FLAG, 01H
03E1 C606AB0101            567             MOV SAY_SOUND_ONCE_FLAG, 01H
03E6 9A1506----     R      568             CALL FAR PTR STATE_TRANSITION
03EB E95001                569             JMP CASHIER_STATE_END
03EE                       570     FIRST_JUMP_CHANGE_REMAINING:
03EE E93101                571             JMP CHANGE_REMAINING
03F1                       572     CANCEL_CHECK_ENTER:
03F1 803E50007C            573             CMP KBD_CHAR_INPUT, KBD_ENTER
03F6 7514                  574             JNE CANCEL_CHECK_NUMBER
03F8 803E740008            575             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
03FD 750A                  576             JNE SIXTH_JUMP_STATE_END
03FF C606ED0101            577             MOV NETWORK_STATE, NETWORK_ENABLE
0404 9A1506----     R      578             CALL FAR PTR STATE_TRANSITION
0409                       579     SIXTH_JUMP_STATE_END:
0409 E93201                580             JMP CASHIER_STATE_END
040C                       581     CANCEL_CHECK_NUMBER:    
040C 803E740008            582             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
0411 74F6                  583             JE SIXTH_JUMP_STATE_END
0413 9A4C05----     R      584             CALL FAR PTR GET_USER_DIGIT
0418 EBEF                  585             JMP SIXTH_JUMP_STATE_END
                           586             
                           587     ; Cashier is now ending the transaction 
041A                       588     CASHIER_END_TRANSACTION:
041A 803E500045            589             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
041F 7503                  590             JNE END_CHANGE_PAY
0421 E9AEFE                591             JMP BYPASS_CANCEL_TRANSACTION
0424                       592     END_CHANGE_PAY:
0424 803E500049            593             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CHANGE_PAY
0429 75DE                  594             JNE SIXTH_JUMP_STATE_END
042B C606EE0108            595             MOV CASH_REGISTER_STATE, CHANGE_PAY
0430 9A1506----     R      596             CALL FAR PTR STATE_TRANSITION
0435 C606520000            597             MOV CHANGE_PLACE_VALUE, 00H
043A E90101                598             JMP CASHIER_STATE_END
                           599             
                           600     ;Cashier is now calculating the change
043D                       601     CASHIER_CHANGE_PAY:
043D 803E500000            602             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0442 745D                  603             JE CHANGE_NUMBER
0444 803E50005F            604             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
0449 7508                  605             JNE CHANGE_CANCEL_TRANSACTION
044B 9A2A06----     R      606             CALL FAR PTR BACKSPACE_KEYPRESS
0450 E9EB00                607             JMP CASHIER_STATE_END
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   16


LOC  OBJ                  LINE     SOURCE

0453                       608     CHANGE_CANCEL_TRANSACTION:
0453 803E500045            609             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
0458 7503                  610             JNE CHANGE_END_TRANSACTION
045A E975FE                611             JMP BYPASS_CANCEL_TRANSACTION
045D                       612     CHANGE_END_TRANSACTION:
045D 803E500046            613             CMP KBD_CHAR_INPUT, KBD_TRIGGER_END_TRANSACTION
0462 751E                  614             JNE CHANGE_EMAIL_SMS
0464 803EF00101            615             CMP CHANGE_DONE_FLAG, 01H
0469 7514                  616             JNE SEVENTH_JUMP_STATE_END
046B C606EE0102            617             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0470 C606C40101            618             MOV TRIGGER_P_FLAG, 01H
0475 9A1506----     R      619             CALL FAR PTR STATE_TRANSITION
047A 9AB305----     R      620             CALL FAR PTR CLEAR_ALL_VARIABLES
047F                       621     SEVENTH_JUMP_STATE_END:
047F E9BC00                622             JMP CASHIER_STATE_END
0482                       623     CHANGE_EMAIL_SMS:
0482 803E50004C            624             CMP KBD_CHAR_INPUT, KBD_TRIGGER_SEND_EMAIL_SMS
0487 7539                  625             JNE CHANGE_CHECK_ENTER
0489 803EF00101            626             CMP CHANGE_DONE_FLAG, 01H
048E 75EF                  627             JNE SEVENTH_JUMP_STATE_END
0490 C606F40101            628             MOV EMAIL_FLAG, 01H
0495 C606EE0103            629             MOV CASH_REGISTER_STATE, ENTER_BARCODE
049A 9A1506----     R      630             CALL FAR PTR STATE_TRANSITION
049F EBDE                  631             JMP SEVENTH_JUMP_STATE_END
04A1                       632     CHANGE_NUMBER:  
04A1 803E510000            633             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
04A6 74D7                  634             JE SEVENTH_JUMP_STATE_END
04A8 803EF00101            635             CMP CHANGE_DONE_FLAG, 01H
04AD 74D0                  636             JE SEVENTH_JUMP_STATE_END
04AF 803E740008            637             CMP USER_INPUT_LENGTH, KBD_CHANGE_LENGTH
04B4 74C9                  638             JE SEVENTH_JUMP_STATE_END
04B6 FE065200              639             INC CHANGE_PLACE_VALUE
04BA 9A4C05----     R      640             CALL FAR PTR GET_USER_DIGIT
04BF EB7D90                641             JMP CASHIER_STATE_END
04C2                       642     CHANGE_CHECK_ENTER:
04C2 803E50007C            643             CMP KBD_CHAR_INPUT, KBD_ENTER
04C7 7575                  644             JNE CASHIER_STATE_END
04C9 803EF00101            645             CMP CHANGE_DONE_FLAG, 01H
04CE 746E                  646             JE CASHIER_STATE_END
04D0 803E740002            647             CMP USER_INPUT_LENGTH, 02H
04D5 7E67                  648             JLE CASHIER_STATE_END
04D7 33DB                  649             XOR BX, BX
04D9 8A1E5200              650             MOV BL, CHANGE_PLACE_VALUE
04DD 8A4752                651             MOV AL, CHANGE_PRICE[BX-1]
04E0 884753                652             MOV CHANGE_PRICE[BX], AL
04E3 8A4751                653             MOV AL, CHANGE_PRICE[BX-2]
04E6 884752                654             MOV CHANGE_PRICE[BX-1], AL
04E9 C647512E              655             MOV CHANGE_PRICE[BX-2], '.'
04ED 802E520002            656             SUB CHANGE_PLACE_VALUE, 2
04F2 9A0E0F----     R      657             CALL FAR PTR CALCULATE_CHANGE
04F7 803E750000            658             CMP CHANGE_SUCCESS_FLAG, 00H
04FC 7417                  659             JE FINISH_CHANGE
04FE C606EE0107            660             MOV CASH_REGISTER_STATE, END_TRANSACTION
0503 C606C20101            661             MOV TRIGGER_E_FLAG, 01H
0508 9A1506----     R      662             CALL FAR PTR STATE_TRANSITION
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   17


LOC  OBJ                  LINE     SOURCE

050D C606750000            663             MOV CHANGE_SUCCESS_FLAG, 00H
0512 EB2A90                664             JMP CASHIER_STATE_END
0515                       665     FINISH_CHANGE:
0515 C606AA0129            666             MOV SOUND_INDEX_INPUT, SOUND_YOURCHANGEIS ;To say the phrase 'your change is'
051A 9ADF0B----     R      667             CALL FAR PTR ADD_SOUND_INDEX
051F E931FE                668             JMP BYPASS_VIEW_TOTAL
0522                       669     CHANGE_REMAINING:
0522 C606AA012C            670             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
0527 9ADF0B----     R      671             CALL FAR PTR ADD_SOUND_INDEX
052C C606AA012A            672             MOV SOUND_INDEX_INPUT, SOUND_THANKYOUANDGOODBYE ;To say the phrase 'thank you
                                    and goodbye'
0531 9ADF0B----     R      673             CALL FAR PTR ADD_SOUND_INDEX
0536 C606F00101            674             MOV CHANGE_DONE_FLAG, 01H
053B EB0190                675             JMP CASHIER_STATE_END
                           676             
053E                       677     CASHIER_STATE_END:      
053E C606500000            678             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
0543 C606510000            679             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
0548 59                    680             POP     CX
0549 5B                    681             POP     BX
054A 58                    682             POP AX
054B CB                    683             RET
                           684     CHANGE_CASHIER_STATE ENDP
                           685     
                           686     
                           687     ;Procedure to add user's numeric input to a corresponding array depending on the stat
                                   e
054C                       688     GET_USER_DIGIT PROC FAR
054C 50                    689             PUSH AX
054D 53                    690             PUSH BX
                           691             
054E 803E510000            692             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
0553 745B                  693             JE GET_USER_DIGIT_END
                           694             
0555 33DB                  695             XOR BX, BX
0557 8A1E7400              696             MOV BL, USER_INPUT_LENGTH
055B A04F00                697             MOV AL, KBD_NUM_INPUT
055E 9AA207----     R      698             CALL FAR PTR ADD_BCD_QUEUE
0563 A2AA01                699             MOV SOUND_INDEX_INPUT, AL
0566 9ADF0B----     R      700             CALL FAR PTR ADD_SOUND_INDEX
056B 0430                  701             ADD AL, 48
                           702             
056D 803EEE0104            703             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0572 741B                  704             JE MOV_AL_QUANTITY
                           705             
0574 803EF30101            706             CMP USERNAME_FLAG, 01H
0579 741A                  707             JE MOV_AL_PASSWORD
                           708             
057B 803EEE0101            709             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
0580 7419                  710             JE MOV_AL_USERNAME
                           711             
0582 803EEE0108            712             CMP CASH_REGISTER_STATE, CHANGE_PAY
0587 7418                  713             JE MOV_AL_CHANGE
                           714             
0589 884769                715             MOV USER_BARCODE[BX], AL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   18


LOC  OBJ                  LINE     SOURCE

058C EB1990                716             JMP CONTINUE_GET_DIGIT
                           717             
058F                       718     MOV_AL_QUANTITY:
058F 884771                719             MOV USER_QUANTITY[BX], AL
0592 EB1390                720             JMP CONTINUE_GET_DIGIT
                           721             
0595                       722     MOV_AL_PASSWORD:
0595 884763                723             MOV USER_PASSWORD[BX], AL
0598 EB0D90                724             JMP CONTINUE_GET_DIGIT
                           725             
059B                       726     MOV_AL_USERNAME:
059B 88475D                727             MOV USER_USERNAME[BX], AL
059E EB0790                728             JMP CONTINUE_GET_DIGIT
                           729             
05A1                       730     MOV_AL_CHANGE:
05A1 884753                731             MOV CHANGE_PRICE[BX], AL
05A4 EB0190                732             JMP CONTINUE_GET_DIGIT  
                           733             
05A7                       734     CONTINUE_GET_DIGIT:
05A7 FE067400              735             INC USER_INPUT_LENGTH
05AB C606510000            736             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
                           737     
05B0                       738     GET_USER_DIGIT_END:     
05B0 5B                    739             POP     BX
05B1 58                    740             POP AX
05B2 CB                    741             RET
                           742     GET_USER_DIGIT ENDP
                           743     
                           744     
                           745     ;Procedure to clear all variables before cancelling/ending a transaction
05B3                       746     CLEAR_ALL_VARIABLES PROC FAR
05B3 53                    747             PUSH BX
05B4 51                    748             PUSH CX
                           749             
05B5 C606520000            750             MOV CHANGE_PLACE_VALUE, 00H
05BA C606AB0100            751             MOV SAY_SOUND_ONCE_FLAG, 00H
05BF C606C50100            752             MOV SHOW_BCD_ONCE_FLAG, 00H
05C4 C606CE0100            753             MOV SERIAL_INDEX, 00H
05C9 C606EA0100            754             MOV TOTAL_PLACE_VALUE, 00H
05CE C606EB0100            755             MOV CASH_REGISTER_START, 00H
05D3 C606EF0100            756             MOV PURCHASE_ITEM_COUNT, 00H
05D8 C606F00100            757             MOV CHANGE_DONE_FLAG, 00H
05DD C606F10100            758             MOV SWAP_JUMP_FLAG, 00H
05E2 C606F20100            759             MOV MODIFY_ITEM_FLAG, 00H
05E7 C606F30100            760             MOV USERNAME_FLAG, 00H
05EC C606F40100            761             MOV EMAIL_FLAG, 00H
05F1 C606750000            762             MOV CHANGE_SUCCESS_FLAG, 00H
05F6 C606F50100            763             MOV ANDROID_FLAG, 00H
                           764             
05FB 33DB                  765             XOR BX, BX
05FD 33C9                  766             XOR CX, CX
05FF B10A                  767             MOV CL, 10
0601                       768     CLEAR_PRICES:
0601 C6475330              769             MOV CHANGE_PRICE[BX], '0'
0605 C687CF0130            770             MOV ITEM_PRICE[BX], '0'
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   19


LOC  OBJ                  LINE     SOURCE

060A C687E00130            771             MOV TOTAL_PRICE[BX], '0'
060F 43                    772             INC BX
0610 E2EF                  773             LOOP CLEAR_PRICES
                           774     
0612                       775     CLEAR_VARIABLES_END:    
0612 59                    776             POP     CX
0613 5B                    777             POP     BX
0614 CB                    778             RET
                           779     CLEAR_ALL_VARIABLES ENDP
                           780     
                           781     
                           782     ;Procedure to clear variables when changing states
0615                       783     STATE_TRANSITION PROC FAR       
0615 C606500000            784             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
061A C606740000            785             MOV USER_INPUT_LENGTH, 00H
061F C606510000            786             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
0624 9A7B10----     R      787             CALL FAR PTR CLEAR_7SEGMENT
0629 CB                    788             RET
                           789     STATE_TRANSITION ENDP
                           790     
                           791     
                           792     ;Procedure to remove user's most recent keyboard input and replace it with a zero on 
                                   the BCD
062A                       793     BACKSPACE_KEYPRESS PROC FAR     
062A 50                    794             PUSH AX
                           795     
062B 803E740000            796             CMP USER_INPUT_LENGTH, 00H
0630 7431                  797             JE BACKSPACE_KEYPRESS_END
0632 FE0E7400              798             DEC USER_INPUT_LENGTH
0636 FE0E5200              799             DEC CHANGE_PLACE_VALUE
                           800             
063A A0BB01                801             MOV AL, BCD_DISPLAY[1]
063D A2BA01                802             MOV BCD_DISPLAY[0], AL
0640 A0BC01                803             MOV AL, BCD_DISPLAY[2]
0643 A2BB01                804             MOV BCD_DISPLAY[1], AL
0646 A0BD01                805             MOV AL, BCD_DISPLAY[3]
0649 A2BC01                806             MOV BCD_DISPLAY[2], AL
064C A0BE01                807             MOV AL, BCD_DISPLAY[4]
064F A2BD01                808             MOV BCD_DISPLAY[3], AL
0652 A0BF01                809             MOV AL, BCD_DISPLAY[5]
0655 A2BE01                810             MOV BCD_DISPLAY[4], AL
0658 A0AC01                811             MOV AL, BCD_NUMBERS[0]
065B A2BF01                812             MOV BCD_DISPLAY[5], AL
                           813             
065E C606500000            814             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
                           815             
0663                       816     BACKSPACE_KEYPRESS_END: 
0663 58                    817             POP AX
0664 CB                    818             RET
                           819     BACKSPACE_KEYPRESS ENDP
                           820     
                           821     
                           822     ;Procedure that will display the price received via serial on the 7-segment display
0665                       823     DISPLAY_PRICE_ON_BCD PROC FAR   
0665 50                    824             PUSH AX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   20


LOC  OBJ                  LINE     SOURCE

0666 53                    825             PUSH BX
0667 51                    826             PUSH CX
                           827     
0668 33DB                  828             XOR BX, BX
066A 33C9                  829             XOR CX, CX
                           830             
066C 803ED90145            831             CMP PLACE_VALUE, 'E'
0671 7510                  832             JNE CONTINUE_NORMAL_DISPLAY
0673 A0B701                833             MOV AL, BCD_NUMBERS[11]
0676 A2BA01                834             MOV BCD_DISPLAY[0], AL
0679 8A0ECE01              835             MOV CL, SERIAL_INDEX
067D 80E902                836             SUB CL, 2
0680 EB0F90                837             JMP PUT_DIGIT_IN_BCD
                           838             
0683                       839     CONTINUE_NORMAL_DISPLAY:
0683 8A0ED901              840             MOV CL, PLACE_VALUE
0687 80E92D                841             SUB CL, 45 ;Subtract 48 to convert to number and add 3 to take care of decima
                                   l digits
                           842             
068A 80F907                843             CMP CL, 7
068D 7E02                  844             JLE PUT_DIGIT_IN_BCD
068F B107                  845             MOV CL, 7
                           846             
0691                       847     PUT_DIGIT_IN_BCD:       
0691 8A87CF01              848             MOV AL, ITEM_PRICE[BX]
0695 3C2E                  849             CMP AL, '.'
0697 740D                  850             JE DECIMAL_ADD
0699 2C30                  851             SUB AL, 48
069B A24F00                852             MOV KBD_NUM_INPUT, AL
069E 9AA207----     R      853             CALL FAR PTR ADD_BCD_QUEUE
06A3 EB0990                854             JMP END_PUT_DIGIT_LOOP
                           855             
06A6                       856     DECIMAL_ADD:
06A6 A0BA01                857             MOV AL, BCD_DISPLAY[0]
06A9 0C80                  858             OR AL, 80H
06AB A2BA01                859             MOV BCD_DISPLAY[0], AL
                           860             
06AE                       861     END_PUT_DIGIT_LOOP:
06AE 43                    862             INC BX
06AF E2E0                  863             LOOP PUT_DIGIT_IN_BCD
                           864     
06B1                       865     DISPLAY_PRICE_ON_BCD_END:       
06B1 59                    866             POP     CX
06B2 5B                    867             POP     BX
06B3 58                    868             POP AX
06B4 CB                    869             RET
                           870     DISPLAY_PRICE_ON_BCD ENDP
                           871     
                           872     
                           873     ;Procedure to read both the keypads for user inputs
06B5                       874     KEYPAD_READ PROC FAR
06B5 52                    875             PUSH DX
06B6 51                    876             PUSH CX
06B7 53                    877             PUSH BX
06B8 50                    878             PUSH AX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   21


LOC  OBJ                  LINE     SOURCE

06B9 56                    879             PUSH SI
                           880                                             
06BA B300                  881             MOV BL, 00H        ;initialize BL for key code
06BC 32C0                  882             XOR AL, AL        ;clear all flags
06BE BA8100                883             MOV DX, PORTB  ;port B address to DX
06C1 EE                    884             OUT DX, AL        ;ground all rows
06C2 BA8200                885             MOV DX, PORTC        ;Port C address to DX
                           886                  
06C5 EC                    887             IN AL, DX        ;read all columns
06C6 2477                  888             AND AL,77H  ;D0-D2 and D4-D6 are the 6 input pins for two keypads 0111 0111(7
                                   7H)                          
06C8 3C77                  889             CMP AL,77H
06CA 7439                  890             JZ RESET_FLAG 
                           891     
06CC 803E4E0001            892             CMP DS:KEY_FLAG, 01H
06D1 7437                  893             JZ IGNORE_KEYPRESS        ;if flag is set don't send keypad input to hyperter
                                   minal
                           894     
06D3 B07F                  895             MOV AL, 07FH       ;load data byte to ground a row
06D5 B704                  896             MOV BH, 04H        ;set row counter
                           897     
06D7                       898     NXTROW:                
06D7 D0C0                  899             ROL AL, 01H       ;rotate AL to ground next row
06D9 8AE8                  900             MOV CH, AL        ;save data byte to ground next row
06DB BA8100                901             MOV DX, PORTB        ;port B address to DX
06DE EE                    902             OUT DX, AL        ;ground one of the rows
06DF BA8200                903             MOV DX, PORTC        ;port C address to DX
06E2 EC                    904             IN AL, DX        ;read input port for key closure
                           905             
06E3 8AE0                  906             MOV AH,AL
06E5 D0CC                  907             ROR AH,01H
                           908             
06E7 80E438                909             AND AH,38H
06EA 2407                  910             AND AL,07H
06EC 0AC4                  911             OR AL,AH
                           912     
06EE 243F                  913             AND AL,3FH ;D0-D2 and D4-D6 are the 6 input pins for two keypads 0111 0111(77
                                   H)
06F0 B106                  914             MOV CL, 06H        ;set column counter
                           915     
06F2                       916     POLL_COLUMNS:        
06F2 D0D8                  917             RCR AL, 01H       ;move D0 to CF        
06F4 7365                  918             JNC SEND_KEY        ;key closure is found, if CF=0
06F6 FEC3                  919             INC BL                ;inc BL for next binary key code                       
                                     
                           920     
06F8 FEC9                  921             DEC CL                ;dec column counter if no key closure
06FA 75F6                  922             JNZ POLL_COLUMNS        ;check for key closure in next column
06FC 8AC5                  923             MOV AL, CH        ;Load data byte to ground next row
06FE FECF                  924             DEC BH                ;if no key closure found in all columns in this row, go
                                    to ground next row
0700 75D5                  925             JNZ NXTROW        ;go back to ground next row   
0702 E99700                926             JMP SKIP_SEND       
                           927     
0705                       928     RESET_FLAG:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   22


LOC  OBJ                  LINE     SOURCE

0705 C6064E0000            929             MOV DS:KEY_FLAG, 00H  ;if no keypad input is found, reset flag so that next k
                                   eypad input is printed
                           930             
070A                       931     IGNORE_KEYPRESS:
070A 9A3E00----     R      932             CALL FAR PTR CHANGE_CASHIER_STATE ;Function call to check if there is a chang
                                   e in the cash register's state     
070F 803EEE0100            933             CMP CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0714 7442                  934             JE TEMP_JUMP_SKIP_SEND
0716 803EEE0101            935             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
071B 743B                  936             JE TEMP_JUMP_SKIP_SEND
071D FF06C901              937             INC TIMEOUT_COUNTER
0721 813EC9010406          938             CMP TIMEOUT_COUNTER, TIMEOUT_COUNTER_LEN
0727 752F                  939             JNE TEMP_JUMP_SKIP_SEND
0729 C706C9010000          940             MOV TIMEOUT_COUNTER, 0
072F FE06CB01              941             INC TIMEOUT_SEC_COUNT
0733 803ECB0108            942             CMP TIMEOUT_SEC_COUNT, 08H
0738 7562                  943             JNE SKIP_SEND
073A C606C10101            944             MOV TRIGGER_L_FLAG, 01H
073F C606EE0100            945             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0744 C606CB0100            946             MOV TIMEOUT_SEC_COUNT, 0
0749 9A1506----     R      947             CALL FAR PTR STATE_TRANSITION
074E 9AB305----     R      948             CALL FAR PTR CLEAR_ALL_VARIABLES        
0753 C606ED0103            949             MOV NETWORK_STATE, NETWORK_LOGOUT
0758                       950     TEMP_JUMP_SKIP_SEND:
0758 EB4290                951             JMP SKIP_SEND ;if flag is set don't send keypad input to hyperterminal
                           952             
075B                       953     SEND_KEY:
075B 80FB0B                954             CMP BL,0BH
075E 7F07                  955             JG LOAD_KEYS_PART2
                           956             
0760                       957     LOAD_KEYS_PART1:        
0760 8D363600              958         LEA SI,KEYS_PART1 
0764 EB0890                959         JMP SEND_CHAR
                           960             
0767                       961     LOAD_KEYS_PART2:
0767 80EB0C                962         SUB BL,0CH
076A 8D364200              963         LEA SI,KEYS_PART2
                           964             
076E                       965     SEND_CHAR:
076E 33C0                  966         XOR AX, AX
0770 8AC3                  967         MOV AL,BL
0772 03F0                  968         ADD SI,AX
0774 8A04                  969         MOV AL,[SI]
                           970             
0776 2C30                  971         SUB AL, 48 ;Converting to number
0778 3C09                  972             CMP AL, 09H ;If number is > 9 then it is some other character and not a numer
                                   ic digit
077A 7E08                  973             JLE SEND_NUMBER
                           974             
077C 0430                  975             ADD AL, 48
077E A25000                976             MOV KBD_CHAR_INPUT, AL
0781 EB0990                977             JMP KEYPAD_END
                           978     
0784                       979     SEND_NUMBER:
                           980             ;manipulating the number
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   23


LOC  OBJ                  LINE     SOURCE

0784 A24F00                981             MOV KBD_NUM_INPUT, AL
0787 C606510001            982             MOV KBD_INPUT_STATE, KBD_NEW_INPUT
                           983             
078C                       984     KEYPAD_END:
078C C6064E0001            985         MOV DS:KEY_FLAG, 01H ;set flag to one so that next time same key input is not pri
                                   nted
0791 C606CB0100            986             MOV TIMEOUT_SEC_COUNT, 0
0796 C706C9010000          987             MOV TIMEOUT_COUNTER, 0
                           988             
079C                       989     SKIP_SEND:
079C 5E                    990             POP SI
079D 58                    991             POP AX
079E 5B                    992             POP BX
079F 59                    993             POP CX
07A0 5A                    994             POP DX
07A1 CB                    995             RET     
                           996     KEYPAD_READ ENDP
                           997     
                           998     
                           999     ;Procedure that will add user's numeric input to the BCD display
07A2                      1000     ADD_BCD_QUEUE PROC FAR
07A2 50                   1001             PUSH AX
07A3 53                   1002             PUSH BX
                          1003     
07A4 33DB                 1004             XOR BX, BX
                          1005     
07A6 8A1E4F00             1006             MOV BL, KBD_NUM_INPUT
07AA 8AA7AC01             1007             MOV AH, BCD_NUMBERS[BX]
                          1008             
07AE A0BE01               1009             MOV AL, BCD_DISPLAY[4]
07B1 A2BF01               1010             MOV BCD_DISPLAY[5], AL
07B4 A0BD01               1011             MOV AL, BCD_DISPLAY[3]
07B7 A2BE01               1012             MOV BCD_DISPLAY[4], AL
07BA A0BC01               1013             MOV AL, BCD_DISPLAY[2]
07BD A2BD01               1014             MOV BCD_DISPLAY[3], AL
07C0 A0BB01               1015             MOV AL, BCD_DISPLAY[1]
07C3 A2BC01               1016             MOV BCD_DISPLAY[2], AL
07C6 A0BA01               1017             MOV AL, BCD_DISPLAY[0]
07C9 A2BB01               1018             MOV BCD_DISPLAY[1], AL          
07CC 8826BA01             1019             MOV BCD_DISPLAY[0], AH
                          1020             
07D0                      1021     BCD_ADD_END:    
07D0 5B                   1022             POP     BX
07D1 58                   1023             POP AX
07D2 CB                   1024             RET
                          1025     ADD_BCD_QUEUE ENDP
                          1026                     
                          1027     
                          1028     ;Procedure that is called whenever something is being sent via serial
07D3                      1029     SERIAL_REC_ACTION       PROC    FAR
07D3 50                   1030             PUSH AX
07D4 53                   1031             PUSH BX
07D5 51                   1032             PUSH CX
07D6 52                   1033             PUSH DX
                          1034     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   24


LOC  OBJ                  LINE     SOURCE

07D7 803EEB0101           1035             CMP CASH_REGISTER_START, 01H
07DC 745D                 1036             JE FIRST_JUMP_CASHIER_RECEIVER
                          1037             
07DE 803ECC0101           1038             CMP START_READ, 01H
07E3 7413                 1039             JE START_READING_ID_VALUES
                          1040             
07E5 3C5B                 1041             CMP AL, '['
07E7 7403                 1042             JE START_READING_ID
07E9 E9D300               1043             JMP END_SERIAL_COMMUNICATION
                          1044             
07EC                      1045     START_READING_ID:
07EC FE06EC01             1046             INC CASH_REGISTER_FLAG
07F0 C606CC0101           1047             MOV START_READ, 01H
07F5 E9C700               1048             JMP END_SERIAL_COMMUNICATION
                          1049             
07F8                      1050     START_READING_ID_VALUES:
07F8 33DB                 1051             XOR BX, BX
07FA 8A1EEC01             1052             MOV BL, CASH_REGISTER_FLAG
07FE 4B                   1053             DEC BX
                          1054             
07FF 3A4730               1055             CMP AL, CASH_REGISTER_ID[BX]
0802 753A                 1056             JNE FIRST_JUMP_INITIALIZE_TERMINATE
0804 803EEC0106           1057             CMP CASH_REGISTER_FLAG, 06H
0809 7529                 1058             JNE NORMAL_ID_CHECK
080B 803EED0100           1059             CMP NETWORK_STATE, NETWORK_DISABLE
0810 742F                 1060             JE FIRST_JUMP_NEGATIVE_ACKNOWLEDGEMENT
0812 803EED0102           1061             CMP NETWORK_STATE, NETWORK_END_TRANSACTION
0817 7465                 1062             JE SEND_END_TRANSACTION_ACK
0819 803EED0103           1063             CMP NETWORK_STATE, NETWORK_LOGOUT
081E 7424                 1064             JE SEND_LOGOUT_ACK
0820 803EED0104           1065             CMP NETWORK_STATE, NETWORK_CANCEL_TRANSACTION
0825 743A                 1066             JE SEND_CANCEL_ACK
0827 C606EB0101           1067             MOV CASH_REGISTER_START, 01H
082C 9AEF0A----     R     1068             CALL FAR PTR SEND_TO_PC
0831 E98B00               1069             JMP END_SERIAL_COMMUNICATION
0834                      1070     NORMAL_ID_CHECK:
0834 FE06EC01             1071             INC CASH_REGISTER_FLAG
0838 E98400               1072             JMP END_SERIAL_COMMUNICATION
                          1073             
083B                      1074     FIRST_JUMP_CASHIER_RECEIVER:
083B E98400               1075             JMP CASH_REGISTER_RECEIVE_START
                          1076             
083E                      1077     FIRST_JUMP_INITIALIZE_TERMINATE:
083E EB7090               1078             JMP INITIALIZE_TERMINATE_SERIAL
                          1079             
0841                      1080     FIRST_JUMP_NEGATIVE_ACKNOWLEDGEMENT:
0841 EB5890               1081             JMP SEND_NEGATIVE_ACK
                          1082             
0844                      1083     SEND_LOGOUT_ACK:
0844 B02A                 1084             MOV AL, '*'
0846 9A0000----     E     1085             CALL FAR PTR PRINT_CHAR
084B B032                 1086             MOV AL, '2'
084D 9A0000----     E     1087             CALL FAR PTR PRINT_CHAR
0852 B02A                 1088             MOV AL, '*'
0854 9A0000----     E     1089             CALL FAR PTR PRINT_CHAR
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   25


LOC  OBJ                  LINE     SOURCE

0859 C606ED0100           1090             MOV NETWORK_STATE, NETWORK_DISABLE
085E EB5090               1091             JMP INITIALIZE_TERMINATE_SERIAL
                          1092     
0861                      1093     SEND_CANCEL_ACK:
0861 B02A                 1094             MOV AL, '*'
0863 9A0000----     E     1095             CALL FAR PTR PRINT_CHAR
0868 B033                 1096             MOV AL, '3'
086A 9A0000----     E     1097             CALL FAR PTR PRINT_CHAR
086F B02A                 1098             MOV AL, '*'
0871 9A0000----     E     1099             CALL FAR PTR PRINT_CHAR
0876 C606ED0100           1100             MOV NETWORK_STATE, NETWORK_DISABLE
087B EB3390               1101             JMP INITIALIZE_TERMINATE_SERIAL 
                          1102             
087E                      1103     SEND_END_TRANSACTION_ACK:
087E B02A                 1104             MOV AL, '*'
0880 9A0000----     E     1105             CALL FAR PTR PRINT_CHAR
0885 B034                 1106             MOV AL, '4'
0887 9A0000----     E     1107             CALL FAR PTR PRINT_CHAR
088C B02A                 1108             MOV AL, '*'
088E 9A0000----     E     1109             CALL FAR PTR PRINT_CHAR
0893 C606ED0100           1110             MOV NETWORK_STATE, NETWORK_DISABLE
0898 EB1690               1111             JMP INITIALIZE_TERMINATE_SERIAL
                          1112             
089B                      1113     SEND_NEGATIVE_ACK:
089B B02A                 1114             MOV AL, '*'
089D 9A0000----     E     1115             CALL FAR PTR PRINT_CHAR
08A2 B030                 1116             MOV AL, '0'
08A4 9A0000----     E     1117             CALL FAR PTR PRINT_CHAR
08A9 B02A                 1118             MOV AL, '*'
08AB 9A0000----     E     1119             CALL FAR PTR PRINT_CHAR
                          1120             
08B0                      1121     INITIALIZE_TERMINATE_SERIAL:
08B0 C606EB0100           1122             MOV CASH_REGISTER_START, 00H
08B5 C606EC0100           1123             MOV CASH_REGISTER_FLAG, 00H
08BA C606CC0100           1124             MOV START_READ, 00H
                          1125             
08BF                      1126     END_SERIAL_COMMUNICATION:
08BF E92802               1127             JMP SERIAL_END
                          1128     
08C2                      1129     CASH_REGISTER_RECEIVE_START:            
08C2 803ECD0101           1130             CMP START_RECEIVE_PRICE, 01H
08C7 740F                 1131             JE START_READING_DIGITS
                          1132             
08C9 3C28                 1133             CMP AL, '('
08CB 7403                 1134             JE START_READING_PRICE
08CD E91A02               1135             JMP SERIAL_END
                          1136             
08D0                      1137     START_READING_PRICE:
08D0 C606CD0101           1138             mov START_RECEIVE_PRICE, 01H
08D5 E91202               1139             JMP SERIAL_END
                          1140             
08D8                      1141     START_READING_DIGITS:
08D8 803ECE0100           1142             CMP SERIAL_INDEX, 00H
08DD 742A                 1143             JE GET_PLACE_VALUE
                          1144             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   26


LOC  OBJ                  LINE     SOURCE

08DF 3C3B                 1145             CMP AL, ';'
08E1 740A                 1146             JE TEMP_INDEX_INCREMENT
                          1147             
08E3 803ECE0102           1148             CMP SERIAL_INDEX, 02H
08E8 7D0A                 1149             JGE GET_DIGITS
                          1150             
08EA E9FD01               1151             JMP SERIAL_END
                          1152             
08ED                      1153     TEMP_INDEX_INCREMENT:
08ED FE06CE01             1154             INC SERIAL_INDEX
08F1 E9F601               1155             JMP SERIAL_END
                          1156             
08F4                      1157     GET_DIGITS:
08F4 3C29                 1158             CMP AL, ')'
08F6 741E                 1159             JE TERMINATE_SERIAL
                          1160             
08F8 33DB                 1161             XOR BX, BX
08FA 8A1ECE01             1162             MOV BL, SERIAL_INDEX
08FE 8887CD01             1163             MOV ITEM_PRICE[BX-2], AL
0902 FE06CE01             1164             INC SERIAL_INDEX        
0906 E9E101               1165             JMP SERIAL_END
                          1166             
0909                      1167     GET_PLACE_VALUE:
0909 FE06CE01             1168             INC SERIAL_INDEX
090D A2DA01               1169             MOV TMP_PLACE_VALUE, AL
0910 A2D901               1170             MOV PLACE_VALUE, AL
0913 E9D401               1171             JMP SERIAL_END
                          1172             
0916                      1173     TERMINATE_SERIAL:
0916 C606EB0100           1174             MOV CASH_REGISTER_START, 00H
091B C606EC0100           1175             MOV CASH_REGISTER_FLAG, 00H
0920 C606CC0100           1176             MOV START_READ, 00H
0925 C606CD0100           1177             MOV START_RECEIVE_PRICE, 00H
092A C606ED0100           1178             MOV NETWORK_STATE, NETWORK_DISABLE
                          1179             
092F 803ED90141           1180             CMP PLACE_VALUE, 'A'
0934 7426                 1181             JE FIRST_JUMP_CHANGE_BARCODE_STATE
                          1182             
0936 803ED90142           1183             CMP PLACE_VALUE, 'B'
093B 7422                 1184             JE FIRST_JUMP_WRONG_LOGIN
                          1185             
093D 803ED90144           1186             CMP PLACE_VALUE, 'D'
0942 741E                 1187             JE FIRST_JUMP_WRONG_BARCODE
                          1188             
0944 803ED90145           1189             CMP PLACE_VALUE, 'E'
0949 741A                 1190             JE FIRST_JUMP_WRONG_QUANTITY
                          1191             
094B 803EEE0104           1192             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0950 7416                 1193             JE FIRST_JUMP_PRICE_PROCESSING
                          1194             
0952 803EEE0106           1195             CMP CASH_REGISTER_STATE, CANCEL_ITEM
0957 7412                 1196             JE CANCEL_ITEM_PROCESSING
                          1197             
0959 E98E01               1198             JMP SERIAL_END
                          1199             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   27


LOC  OBJ                  LINE     SOURCE

095C                      1200     FIRST_JUMP_CHANGE_BARCODE_STATE:
095C E9CC00               1201             JMP CHANGE_STATE_TO_BARCODE
                          1202             
095F                      1203     FIRST_JUMP_WRONG_LOGIN:
095F E9FE00               1204             JMP DISPLAY_WRONG_LOGIN
                          1205             
0962                      1206     FIRST_JUMP_WRONG_BARCODE:
0962 E91201               1207             JMP DISPLAY_WRONG_BARCODE
                          1208             
0965                      1209     FIRST_JUMP_WRONG_QUANTITY:
0965 E95C01               1210             JMP DISPLAY_WRONG_QUANTITY
                          1211             
0968                      1212     FIRST_JUMP_PRICE_PROCESSING:
0968 E9AE00               1213             JMP PRICE_PROCESSING
                          1214             
096B                      1215     CANCEL_ITEM_PROCESSING: 
096B 8A16EA01             1216             MOV DL, TOTAL_PLACE_VALUE
096F 88165200             1217             MOV CHANGE_PLACE_VALUE, DL              
0973 8A26DA01             1218             MOV AH, TMP_PLACE_VALUE
0977 80EC30               1219             SUB AH, 48
097A 8826EA01             1220             MOV TOTAL_PLACE_VALUE, AH
                          1221             
097E 33C9                 1222             XOR CX, CX
0980 33DB                 1223             XOR BX, BX
0982 B10A                 1224             MOV CL, 10
0984                      1225     CREATE_PRICE_ITEMS:
0984 8A97E001             1226             MOV DL, TOTAL_PRICE[BX]
0988 885753               1227             MOV CHANGE_PRICE[BX], DL
098B 8A97CF01             1228             MOV DL, ITEM_PRICE[BX]
098F 8897E001             1229             MOV TOTAL_PRICE[BX], DL
0993 43                   1230             INC BX
0994 E2EE                 1231             LOOP CREATE_PRICE_ITEMS 
0996 9A0E0F----     R     1232             CALL FAR PTR CALCULATE_CHANGE
099B C606520000           1233             MOV CHANGE_PLACE_VALUE, 00H
                          1234             
09A0 33DB                 1235             XOR BX, BX
09A2 B10A                 1236             MOV CL, 10
09A4                      1237     TOTAL_INPUT_PRICE_SWAP:
09A4 8A97E001             1238             MOV DL, TOTAL_PRICE[BX]
09A8 8897CF01             1239             MOV ITEM_PRICE[BX], DL
09AC C6475330             1240             MOV CHANGE_PRICE[BX], '0'
09B0 43                   1241             INC BX
09B1 E2F1                 1242             LOOP TOTAL_INPUT_PRICE_SWAP
                          1243             
09B3 8A26EA01             1244             MOV AH, TOTAL_PLACE_VALUE
09B7 80C430               1245             ADD AH, 48
09BA 8826D901             1246             MOV PLACE_VALUE, AH
09BE 8826DA01             1247             MOV TMP_PLACE_VALUE, AH 
09C2 FE0EEF01             1248             DEC PURCHASE_ITEM_COUNT
09C6 803EF20101           1249             CMP MODIFY_ITEM_FLAG, 01H
09CB 751C                 1250             JNE CONTINUE_CANCELLING 
09CD C606CE0100           1251             MOV SERIAL_INDEX, 00H
09D2 C606EE0104           1252             MOV CASH_REGISTER_STATE, ENTER_QUANTITY
09D7 C606EB0101           1253             MOV CASH_REGISTER_START, 01H
09DC C606C50100           1254             MOV SHOW_BCD_ONCE_FLAG, 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   28


LOC  OBJ                  LINE     SOURCE

09E1 C606AB0100           1255             MOV SAY_SOUND_ONCE_FLAG, 00H
09E6 E90101               1256             JMP SERIAL_END
09E9                      1257     CONTINUE_CANCELLING:
09E9 C606EE0105           1258             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
09EE C606C50101           1259             MOV SHOW_BCD_ONCE_FLAG, 01H
09F3 C606AB0101           1260             MOV SAY_SOUND_ONCE_FLAG, 01H
09F8 9A1506----     R     1261             CALL FAR PTR STATE_TRANSITION
09FD C606AA0128           1262             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
0A02 9ADF0B----     R     1263             CALL FAR PTR ADD_SOUND_INDEX
0A07 9A6506----     R     1264             CALL FAR PTR DISPLAY_PRICE_ON_BCD
0A0C 9A080C----     R     1265             CALL FAR PTR POPULATE_SOUND_QUEUE       
0A11 C606CE0100           1266             MOV SERIAL_INDEX, 00H
0A16 E9D100               1267             JMP SERIAL_END
                          1268             
0A19                      1269     PRICE_PROCESSING:
0A19 C606EE0105           1270             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0A1E C606F20100           1271             MOV MODIFY_ITEM_FLAG, 00H
0A23 9A1506----     R     1272             CALL FAR PTR STATE_TRANSITION
0A28 E9BF00               1273             JMP SERIAL_END
                          1274             
0A2B                      1275     CHANGE_STATE_TO_BARCODE:
0A2B C606CE0100           1276             MOV SERIAL_INDEX, 00H
0A30 C606EE0102           1277             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0A35 C606C40101           1278             MOV TRIGGER_P_FLAG, 01H
0A3A 9A1506----     R     1279             CALL FAR PTR STATE_TRANSITION
0A3F C606AA0123           1280             MOV SOUND_INDEX_INPUT, SOUND_GOOD ;To say the word 'good'
0A44 9ADF0B----     R     1281             CALL FAR PTR ADD_SOUND_INDEX
0A49 C606AA012C           1282             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
0A4E 9ADF0B----     R     1283             CALL FAR PTR ADD_SOUND_INDEX
0A53 C606AA0125           1284             MOV SOUND_INDEX_INPUT, SOUND_AFTERNOON ;To say the word 'afternoon'
0A58 9ADF0B----     R     1285             CALL FAR PTR ADD_SOUND_INDEX
0A5D E98A00               1286             JMP SERIAL_END
                          1287             
0A60                      1288     DISPLAY_WRONG_LOGIN:
0A60 C606CE0100           1289             MOV SERIAL_INDEX, 00H
0A65 C606C30101           1290             MOV TRIGGER_A_FLAG, 01H
0A6A C606EE0100           1291             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0A6F 9A1506----     R     1292             CALL FAR PTR STATE_TRANSITION
0A74 EB7490               1293             JMP SERIAL_END
                          1294             
0A77                      1295     DISPLAY_WRONG_BARCODE:
0A77 803EF40101           1296             CMP EMAIL_FLAG, 01H
0A7C 7519                 1297             JNE NORMAL_WRONG_BARCODE
0A7E C606F40100           1298             MOV EMAIL_FLAG, 00H
0A83 C606EE0108           1299             MOV CASH_REGISTER_STATE, CHANGE_PAY
0A88 803ECF0131           1300             CMP ITEM_PRICE[0], '1'
0A8D 742E                 1301             JE SHOW_ALPHABET_A
0A8F C606C20101           1302             MOV TRIGGER_E_FLAG, 01H
0A94 EB0B90               1303             JMP CONTINUE_SEND_ERROR
0A97                      1304     NORMAL_WRONG_BARCODE:
0A97 C606EE0105           1305             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0A9C C606C20101           1306             MOV TRIGGER_E_FLAG, 01H
0AA1                      1307     CONTINUE_SEND_ERROR:
0AA1 C606CE0100           1308             MOV SERIAL_INDEX, 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   29


LOC  OBJ                  LINE     SOURCE

0AA6 C606F20100           1309             MOV MODIFY_ITEM_FLAG, 00H
0AAB C606C50101           1310             MOV SHOW_BCD_ONCE_FLAG, 01H
0AB0 C606AB0101           1311             MOV SAY_SOUND_ONCE_FLAG, 01H    
0AB5 9A1506----     R     1312             CALL FAR PTR STATE_TRANSITION
0ABA EB2E90               1313             JMP SERIAL_END
0ABD                      1314     SHOW_ALPHABET_A:
0ABD C606C30101           1315             MOV TRIGGER_A_FLAG, 01H
0AC2 EBDD                 1316             JMP CONTINUE_SEND_ERROR
                          1317             
0AC4                      1318     DISPLAY_WRONG_QUANTITY:
0AC4 C606EE0105           1319             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0AC9 C606F20100           1320             MOV MODIFY_ITEM_FLAG, 00H
0ACE C606C50101           1321             MOV SHOW_BCD_ONCE_FLAG, 01H
0AD3 C606AB0101           1322             MOV SAY_SOUND_ONCE_FLAG, 01H
0AD8 9A1506----     R     1323             CALL FAR PTR STATE_TRANSITION
0ADD 9A6506----     R     1324             CALL FAR PTR DISPLAY_PRICE_ON_BCD
0AE2 C606CE0100           1325             MOV SERIAL_INDEX, 00H
0AE7 EB0190               1326             JMP SERIAL_END
                          1327             
0AEA                      1328     SERIAL_END:
0AEA 5A                   1329             POP DX
0AEB 59                   1330             POP     CX
0AEC 5B                   1331             POP     BX
0AED 58                   1332             POP AX
0AEE CB                   1333             RET
                          1334     SERIAL_REC_ACTION       ENDP
                          1335     
                          1336     
                          1337     ;Procedure that will send the cash register input to the PC via serial
0AEF                      1338     SEND_TO_PC PROC FAR     
0AEF 50                   1339             PUSH AX
0AF0 53                   1340             PUSH BX
0AF1 51                   1341             PUSH CX
                          1342     
0AF2 803EF40101           1343             CMP EMAIL_FLAG, 01H
0AF7 7455                 1344             JE FIRST_JUMP_CANCEL_BARCODE
                          1345             
0AF9 803EF30101           1346             CMP USERNAME_FLAG, 01H
0AFE 740D                 1347             JE SEND_LOGIN_TO_PC
                          1348             
0B00 803EEE0104           1349             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0B05 744A                 1350             JE SEND_TRANSACTION_TO_PC
                          1351             
0B07 EB4590               1352             JMP FIRST_JUMP_CANCEL_BARCODE
                          1353             
0B0A E9CE00               1354             JMP SEND_PC_END
                          1355     
0B0D                      1356     SEND_LOGIN_TO_PC:       
0B0D B028                 1357             MOV AL, '('
0B0F 9A0000----     E     1358             CALL FAR PTR PRINT_CHAR
0B14 33C9                 1359             XOR CX, CX
0B16 33DB                 1360             XOR BX, BX
0B18 B106                 1361             MOV CL, KBD_USERNAME_LENGTH     
0B1A                      1362     SEND_USERNAME:
0B1A 8A475D               1363             MOV AL, USER_USERNAME[BX]
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   30


LOC  OBJ                  LINE     SOURCE

0B1D 9A0000----     E     1364             CALL FAR PTR PRINT_CHAR
0B22 43                   1365             INC BX
0B23 E2F5                 1366             LOOP SEND_USERNAME              
0B25 B03B                 1367             MOV AL, ';'
0B27 9A0000----     E     1368             CALL FAR PTR PRINT_CHAR
0B2C 33DB                 1369             XOR BX, BX
0B2E B106                 1370             MOV CL, KBD_USERNAME_LENGTH     
0B30                      1371     SEND_PASSWORD:
0B30 8A4763               1372             MOV AL, USER_PASSWORD[BX]
0B33 02C3                 1373             ADD AL, BL
0B35 040F                 1374             ADD AL, 15
0B37 9A0000----     E     1375             CALL FAR PTR PRINT_CHAR
0B3C 43                   1376             INC BX
0B3D E2F1                 1377             LOOP SEND_PASSWORD      
0B3F B029                 1378             MOV AL, ')'
0B41 9A0000----     E     1379             CALL FAR PTR PRINT_CHAR 
0B46 C606F30100           1380             MOV USERNAME_FLAG, 00H
0B4B E98D00               1381             JMP SEND_PC_END
                          1382             
0B4E                      1383     FIRST_JUMP_CANCEL_BARCODE:
0B4E EB5D90               1384             JMP SEND_CANCEL_BARCODE_PC
                          1385             
0B51                      1386     SEND_TRANSACTION_TO_PC:
0B51 803EF20101           1387             CMP MODIFY_ITEM_FLAG, 01H
0B56 740C                 1388             JE SEND_HASH_CHARACTER
0B58 803EF50101           1389             CMP ANDROID_FLAG, 01H
0B5D 740F                 1390             JE SEND_AT_CHARACTER
0B5F B05B                 1391             MOV AL, '['
0B61 EB1290               1392             JMP CONTINUE_SENDING_BARCODE
0B64                      1393     SEND_HASH_CHARACTER:    
0B64 B023                 1394             MOV AL, '#'
0B66 C606EE0106           1395             MOV CASH_REGISTER_STATE, CANCEL_ITEM
0B6B EB0890               1396             JMP CONTINUE_SENDING_BARCODE
0B6E                      1397     SEND_AT_CHARACTER:
0B6E C606F50100           1398             MOV ANDROID_FLAG, 00H
0B73 B040                 1399             MOV AL, '@'
0B75                      1400     CONTINUE_SENDING_BARCODE:
0B75 9A0000----     E     1401             CALL FAR PTR PRINT_CHAR
0B7A 33C9                 1402             XOR CX, CX
0B7C 33DB                 1403             XOR BX, BX
0B7E B108                 1404             MOV CL, KBD_BARCODE_LENGTH      
0B80                      1405     SEND_BARCODE:
0B80 8A4769               1406             MOV AL, USER_BARCODE[BX]
0B83 9A0000----     E     1407             CALL FAR PTR PRINT_CHAR
0B88 43                   1408             INC BX
0B89 E2F5                 1409             LOOP SEND_BARCODE       
0B8B B03B                 1410             MOV AL, ';'
0B8D 9A0000----     E     1411             CALL FAR PTR PRINT_CHAR
0B92 33DB                 1412             XOR BX, BX
0B94 8A0E7400             1413             MOV CL, USER_INPUT_LENGTH       
0B98                      1414     SEND_QUANTITY:
0B98 8A4771               1415             MOV AL, USER_QUANTITY[BX]
0B9B 9A0000----     E     1416             CALL FAR PTR PRINT_CHAR
0BA0 43                   1417             INC BX
0BA1 E2F5                 1418             LOOP SEND_QUANTITY      
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   31


LOC  OBJ                  LINE     SOURCE

0BA3 B05D                 1419             MOV AL, ']'
0BA5 9A0000----     E     1420             CALL FAR PTR PRINT_CHAR
0BAA EB2F90               1421             JMP SEND_PC_END
                          1422             
0BAD                      1423     SEND_CANCEL_BARCODE_PC: 
0BAD 803EF40101           1424             CMP EMAIL_FLAG, 01H
0BB2 7405                 1425             JE SEND_DOLLAR
0BB4 B03C                 1426             MOV AL, '<'
0BB6 EB0390               1427             JMP CONTINUE_SEND_CANCEL
0BB9                      1428     SEND_DOLLAR:    
0BB9 B024                 1429             MOV AL, '$'
0BBB                      1430     CONTINUE_SEND_CANCEL:
0BBB 9A0000----     E     1431             CALL FAR PTR PRINT_CHAR
0BC0 33C9                 1432             XOR CX, CX
0BC2 33DB                 1433             XOR BX, BX
0BC4 B108                 1434             MOV CL, KBD_BARCODE_LENGTH      
0BC6                      1435     SEND_ITEM_ID:
0BC6 8A4769               1436             MOV AL, USER_BARCODE[BX]
0BC9 9A0000----     E     1437             CALL FAR PTR PRINT_CHAR
0BCE 43                   1438             INC BX
0BCF E2F5                 1439             LOOP SEND_ITEM_ID               
0BD1 B03E                 1440             MOV AL, '>'
0BD3 9A0000----     E     1441             CALL FAR PTR PRINT_CHAR
0BD8 EB0190               1442             JMP SEND_PC_END
                          1443     
0BDB                      1444     SEND_PC_END:    
0BDB 59                   1445             POP     CX
0BDC 5B                   1446             POP     BX
0BDD 58                   1447             POP AX
0BDE CB                   1448             RET
                          1449     SEND_TO_PC ENDP
                          1450     
                          1451     
                          1452     ;Procedure that will take add the necessary sound indices to the sound queue for spea
                                   ker output based on a parameter
0BDF                      1453     ADD_SOUND_INDEX PROC FAR        
0BDF 50                   1454             PUSH AX
0BE0 53                   1455             PUSH BX
0BE1 51                   1456             PUSH CX
                          1457     
0BE2 33DB                 1458             XOR BX, BX
0BE4 8A1EA901             1459             MOV BL, SOUND_TAIL
0BE8 8A0EAA01             1460             MOV CL, SOUND_INDEX_INPUT
0BEC B002                 1461             MOV AL, 2
0BEE F6E1                 1462             MUL CL
0BF0 88878801             1463             MOV SOUND_QUEUE[BX], AL
                          1464             
0BF4 FE06A901             1465             INC SOUND_TAIL 
0BF8 803EA90120           1466             CMP SOUND_TAIL, 32
0BFD 7C05                 1467             JL SOUND_INDEX_END
0BFF C606A90100           1468             MOV SOUND_TAIL, 00H     
                          1469             
0C04                      1470     SOUND_INDEX_END:        
0C04 59                   1471             POP     CX
0C05 5B                   1472             POP     BX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   32


LOC  OBJ                  LINE     SOURCE

0C06 58                   1473             POP AX
0C07 CB                   1474             RET
                          1475     ADD_SOUND_INDEX ENDP
                          1476     
                          1477     
                          1478     ;Procedure that will convert a price received on the serial into a format which is sa
                                   y-able on the speaker
0C08                      1479     POPULATE_SOUND_QUEUE PROC FAR   
0C08 50                   1480             PUSH AX
0C09 53                   1481             PUSH BX
0C0A 51                   1482             PUSH CX
                          1483     
0C0B 33DB                 1484             XOR BX, BX
0C0D 33C9                 1485             XOR CX, CX
                          1486             
0C0F 802ED90130           1487             SUB     PLACE_VALUE, 48
0C14 8A0ECE01             1488             MOV CL, SERIAL_INDEX
0C18 83E902               1489             SUB CX, 2
0C1B 880ECE01             1490             MOV SERIAL_INDEX, CL    
                          1491             
0C1F                      1492     LOAD_SOUND_QUEUE:
0C1F 8A87CF01             1493             MOV AL, ITEM_PRICE[BX]
0C23 3C2E                 1494             CMP AL, '.'
0C25 7403                 1495             JE SAY_CENTS_VALUE
0C27 EB3490               1496             JMP SAY_OTHER_VALUES
                          1497             
0C2A                      1498     SAY_CENTS_VALUE:
0C2A 803EDE0100           1499             CMP CENTS_AND_FLAG, 00H
0C2F 740A                 1500             JE CONTINUE_SAYING_CENTS
0C31 C606AA011E           1501             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0C36 9ADF0B----     R     1502             CALL FAR PTR ADD_SOUND_INDEX
                          1503             
0C3B                      1504     CONTINUE_SAYING_CENTS:
0C3B 43                   1505             INC BX
0C3C 8A87CF01             1506             MOV AL, ITEM_PRICE[BX]
0C40 A2DB01               1507             MOV TWO_DIGIT_SOUND[0], AL
0C43 43                   1508             INC BX
0C44 8A87CF01             1509             MOV AL, ITEM_PRICE[BX]
0C48 A2DC01               1510             MOV TWO_DIGIT_SOUND[1], AL
0C4B 9A940D----     R     1511             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0C50 C606AA0122           1512             MOV SOUND_INDEX_INPUT, SOUND_CENTS ;To say the word 'cents'
0C55 9ADF0B----     R     1513             CALL FAR PTR ADD_SOUND_INDEX 
0C5A E92401               1514             JMP SOUND_POPULATE_END
                          1515             
0C5D                      1516     SAY_OTHER_VALUES:       
0C5D 3C30                 1517             CMP AL, '0'
0C5F 7520                 1518             JNE CHECK_OTHER_VALUES
0C61 803EDF0101           1519             CMP THOUSAND_FLAG, 01H
0C66 7516                 1520             JNE EXIT_FROM_PROCEDURE
0C68 803ED90104           1521             CMP PLACE_VALUE, 4
0C6D 750F                 1522             JNE EXIT_FROM_PROCEDURE
0C6F C606AA011D           1523             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0C74 9ADF0B----     R     1524             CALL FAR PTR ADD_SOUND_INDEX 
0C79 C606DF0100           1525             MOV THOUSAND_FLAG, 00H
                          1526             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   33


LOC  OBJ                  LINE     SOURCE

0C7E                      1527     EXIT_FROM_PROCEDURE:
0C7E E9DF00               1528             JMP CONTINUE_NEXT_ITERATION
                          1529             
0C81                      1530     CHECK_OTHER_VALUES:     
0C81 803ED90106           1531             CMP PLACE_VALUE, 6
0C86 7423                 1532             JE PROCESS_6th_DIGIT
                          1533             
0C88 803ED90105           1534             CMP PLACE_VALUE, 5
0C8D 7443                 1535             JE PROCESS_5th_DIGIT
                          1536             
0C8F 803ED90104           1537             CMP PLACE_VALUE, 4
0C94 7439                 1538             JE TEMP_JUMP_4th_DIGIT
                          1539             
0C96 803ED90103           1540             CMP PLACE_VALUE, 3
0C9B 740E                 1541             JE PROCESS_6th_DIGIT
                          1542             
0C9D 803ED90102           1543             CMP PLACE_VALUE, 2
0CA2 742E                 1544             JE PROCESS_5th_DIGIT
                          1545             
0CA4 803ED90101           1546             CMP PLACE_VALUE, 1
0CA9 7475                 1547             JE PROCESS_4th_DIGIT
                          1548             
0CAB                      1549     PROCESS_6th_DIGIT:
0CAB C606DB0130           1550             MOV TWO_DIGIT_SOUND[0], '0'
0CB0 A2DC01               1551             MOV TWO_DIGIT_SOUND[1], AL
0CB3 9A940D----     R     1552             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0CB8 C606AA011C           1553             MOV SOUND_INDEX_INPUT, SOUND_HUNDRED ;To say the word 'Hundred'
0CBD 9ADF0B----     R     1554             CALL FAR PTR ADD_SOUND_INDEX 
0CC2 C606DD0101           1555             MOV AND_FLAG, 01H
0CC7 C606DF0101           1556             MOV THOUSAND_FLAG, 01H
0CCC E99100               1557             JMP CONTINUE_NEXT_ITERATION
                          1558             
0CCF                      1559     TEMP_JUMP_4th_DIGIT:
0CCF EB4F90               1560             JMP PROCESS_4th_DIGIT
                          1561             
0CD2                      1562     PROCESS_5th_DIGIT:
0CD2 C606DF0100           1563             MOV THOUSAND_FLAG, 00H
0CD7 803EDD0100           1564             CMP AND_FLAG, 00H
0CDC 740A                 1565             JE CONTINUE_WITH_5th_DIGIT
0CDE C606AA011E           1566             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0CE3 9ADF0B----     R     1567             CALL FAR PTR ADD_SOUND_INDEX
                          1568     
0CE8                      1569     CONTINUE_WITH_5th_DIGIT:
0CE8 8A87CF01             1570             MOV AL, ITEM_PRICE[BX]
0CEC A2DB01               1571             MOV TWO_DIGIT_SOUND[0], AL
0CEF 43                   1572             INC BX
0CF0 8A87CF01             1573             MOV AL, ITEM_PRICE[BX]
0CF4 A2DC01               1574             MOV TWO_DIGIT_SOUND[1], AL
0CF7 9A940D----     R     1575             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0CFC 803ED90103           1576             CMP PLACE_VALUE, 3
0D01 7E0A                 1577             JLE CONTINUE_WITH_REST_OF_5th_DIGIT
0D03 C606AA011D           1578             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0D08 9ADF0B----     R     1579             CALL FAR PTR ADD_SOUND_INDEX 
                          1580             
0D0D                      1581     CONTINUE_WITH_REST_OF_5th_DIGIT:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   34


LOC  OBJ                  LINE     SOURCE

0D0D FE0ED901             1582             DEC PLACE_VALUE
0D11 C606DD0100           1583             MOV AND_FLAG, 00H
0D16 49                   1584             DEC CX
0D17 EB0490               1585             JMP FIRST_JMP_ITERATION 
                          1586                     
0D1A                      1587     FIRST_JMP_TO_LOAD:
0D1A E902FF               1588             JMP LOAD_SOUND_QUEUE
                          1589             
0D1D                      1590     FIRST_JMP_ITERATION:
0D1D EB4190               1591             JMP CONTINUE_NEXT_ITERATION
                          1592             
0D20                      1593     PROCESS_4th_DIGIT:
0D20 C606DF0100           1594             MOV THOUSAND_FLAG, 00H
0D25 803EDD0100           1595             CMP AND_FLAG, 00H
0D2A 740A                 1596             JE CONTINUE_WITH_4th_DIGIT
0D2C C606AA011E           1597             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0D31 9ADF0B----     R     1598             CALL FAR PTR ADD_SOUND_INDEX
                          1599             
0D36                      1600     CONTINUE_WITH_4th_DIGIT:
0D36 C606DB0130           1601             MOV TWO_DIGIT_SOUND[0], '0'
0D3B 8A87CF01             1602             MOV AL, ITEM_PRICE[BX]
0D3F A2DC01               1603             MOV TWO_DIGIT_SOUND[1], AL
0D42 9A940D----     R     1604             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0D47 803ED90103           1605             CMP PLACE_VALUE, 3
0D4C 7E0A                 1606             JLE CONTINUE_WITH_REST_OF_4th_DIGIT
0D4E C606AA011D           1607             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0D53 9ADF0B----     R     1608             CALL FAR PTR ADD_SOUND_INDEX 
0D58                      1609     CONTINUE_WITH_REST_OF_4th_DIGIT:
0D58 C606DD0100           1610             MOV AND_FLAG, 00H
0D5D EB0190               1611             JMP CONTINUE_NEXT_ITERATION     
                          1612             
0D60                      1613     CONTINUE_NEXT_ITERATION:
0D60 43                   1614             INC BX
0D61 FE0ED901             1615             DEC PLACE_VALUE
0D65 803ED90100           1616             CMP PLACE_VALUE, 0
0D6A 7403                 1617             JE SAY_DOLLARS_AFTER_PRICE
0D6C EB1090               1618             JMP CONTINUE_AFTER_DOLLAR
                          1619             
0D6F                      1620     SAY_DOLLARS_AFTER_PRICE:
0D6F C606DE0101           1621             MOV CENTS_AND_FLAG, 01H
0D74 C606AA0121           1622             MOV SOUND_INDEX_INPUT, SOUND_DOLLARS ;To say the word 'Dollars'
0D79 9ADF0B----     R     1623             CALL FAR PTR ADD_SOUND_INDEX 
                          1624             
0D7E                      1625     CONTINUE_AFTER_DOLLAR:          
0D7E 49                   1626             DEC CX
0D7F 7599                 1627             JNZ FIRST_JMP_TO_LOAD
                          1628             
0D81                      1629     SOUND_POPULATE_END:     
0D81 C606CE0100           1630             MOV SERIAL_INDEX, 00H
0D86 C606DD0100           1631             MOV AND_FLAG, 00H
0D8B C606DE0100           1632             MOV CENTS_AND_FLAG, 00H
0D90 59                   1633             POP     CX
0D91 5B                   1634             POP     BX
0D92 58                   1635             POP AX
0D93 CB                   1636             RET
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   35


LOC  OBJ                  LINE     SOURCE

                          1637     POPULATE_SOUND_QUEUE ENDP
                          1638     
                          1639     
                          1640     ;Procedure that will take in  a two digit value and add the corresponding sound indic
                                   es to the sound queue
0D94                      1641     PROCESS_TWO_DIGIT_SOUND PROC FAR        
0D94 50                   1642             PUSH AX
0D95 52                   1643             PUSH DX
                          1644     
0D96 8A16DB01             1645             MOV DL, TWO_DIGIT_SOUND[0]
0D9A 80EA30               1646             SUB DL, 48
0D9D 8AF2                 1647             MOV DH, DL
0D9F B00A                 1648             MOV AL, 10
0DA1 F6E2                 1649             MUL DL
0DA3 8AD0                 1650             MOV DL, AL
                          1651             
0DA5 A0DC01               1652             MOV AL, TWO_DIGIT_SOUND[1]
0DA8 2C30                 1653             SUB AL, 48
0DAA 8AE0                 1654             MOV AH, AL
0DAC 02C2                 1655             ADD AL, DL
                          1656             
0DAE 3C14                 1657             CMP AL, 20
0DB0 7F0B                 1658             JG PLAY_GREATER_THAN_20
0DB2 A2AA01               1659             MOV SOUND_INDEX_INPUT, AL
0DB5 9ADF0B----     R     1660             CALL FAR PTR ADD_SOUND_INDEX
                          1661             
0DBA EB1B90               1662             JMP TWO_DIGIT_SOUND_END 
                          1663             
0DBD                      1664     PLAY_GREATER_THAN_20:
0DBD 8AC6                 1665             MOV AL, DH
0DBF 0412                 1666             ADD AL, 18
0DC1 A2AA01               1667             MOV SOUND_INDEX_INPUT, AL
0DC4 9ADF0B----     R     1668             CALL FAR PTR ADD_SOUND_INDEX
                          1669             
0DC9 8AC4                 1670             MOV AL, AH
0DCB 3C00                 1671             CMP AL, 0
0DCD 7408                 1672             JE TWO_DIGIT_SOUND_END
0DCF A2AA01               1673             MOV SOUND_INDEX_INPUT, AL
0DD2 9ADF0B----     R     1674             CALL FAR PTR ADD_SOUND_INDEX
                          1675             
0DD7                      1676     TWO_DIGIT_SOUND_END:    
0DD7 5A                   1677             POP DX
0DD8 58                   1678             POP AX
0DD9 CB                   1679             RET
                          1680     PROCESS_TWO_DIGIT_SOUND ENDP
                          1681     
                          1682     
                          1683     ;Procedure that will add the incoming price to the total price
0DDA                      1684     ADD_INCOMING_PRICE PROC FAR     
0DDA 50                   1685             PUSH AX
0DDB 53                   1686             PUSH BX
0DDC 51                   1687             PUSH CX
0DDD 52                   1688             PUSH DX
                          1689     
0DDE A0DA01               1690             MOV AL, TMP_PLACE_VALUE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   36


LOC  OBJ                  LINE     SOURCE

0DE1 2C30                 1691             SUB AL, 48
0DE3 A2D901               1692             MOV PLACE_VALUE, AL     
                          1693             
0DE6 33C9                 1694             XOR CX, CX
                          1695             
0DE8 A0EA01               1696             MOV AL, TOTAL_PLACE_VALUE
0DEB 3A06D901             1697             CMP AL, PLACE_VALUE
0DEF 745F                 1698             JE FIRST_JMP_ADDITION
0DF1 7C03                 1699             JL ADD_ZERO_TOTAL
0DF3 EB6490               1700             JMP ADD_ZERO_INCOMING
                          1701             
0DF6                      1702     ADD_ZERO_TOTAL:
0DF6 8A16D901             1703             MOV DL, PLACE_VALUE
0DFA 2AD0                 1704             SUB DL, AL
0DFC 0016EA01             1705             ADD TOTAL_PLACE_VALUE, DL
0E00 8ACA                 1706             MOV CL, DL
0E02                      1707     START_SHIFT_TOTAL:
0E02 A0E801               1708             MOV AL, TOTAL_PRICE[8]
0E05 A2E901               1709             MOV TOTAL_PRICE[9], AL
0E08 A0E701               1710             MOV AL, TOTAL_PRICE[7]
0E0B A2E801               1711             MOV TOTAL_PRICE[8], AL
0E0E A0E601               1712             MOV AL, TOTAL_PRICE[6]
0E11 A2E701               1713             MOV TOTAL_PRICE[7], AL
0E14 A0E501               1714             MOV AL, TOTAL_PRICE[5]
0E17 A2E601               1715             MOV TOTAL_PRICE[6], AL
0E1A A0E401               1716             MOV AL, TOTAL_PRICE[4]
0E1D A2E501               1717             MOV TOTAL_PRICE[5], AL
0E20 A0E301               1718             MOV AL, TOTAL_PRICE[3]
0E23 A2E401               1719             MOV TOTAL_PRICE[4], AL
0E26 A0E201               1720             MOV AL, TOTAL_PRICE[2]
0E29 A2E301               1721             MOV TOTAL_PRICE[3], AL
0E2C A0E101               1722             MOV AL, TOTAL_PRICE[1]
0E2F A2E201               1723             MOV TOTAL_PRICE[2], AL
0E32 A0E001               1724             MOV AL, TOTAL_PRICE[0]
0E35 A2E101               1725             MOV TOTAL_PRICE[1], AL
0E38 803EF10101           1726             CMP SWAP_JUMP_FLAG, 01H
0E3D 7414                 1727             JE FIRST_CONTINUE_SWAP
0E3F 803EF10102           1728             CMP SWAP_JUMP_FLAG, 02H
0E44 7410                 1729             JE SECOND_CONTINUE_SWAP
0E46 C606E00130           1730             MOV TOTAL_PRICE[0], '0'
0E4B E2B5                 1731             LOOP START_SHIFT_TOTAL
0E4D EB5390               1732             JMP START_ADDITION
                          1733             
0E50                      1734     FIRST_JMP_ADDITION:
0E50 EB5090               1735             JMP START_ADDITION
                          1736             
0E53                      1737     FIRST_CONTINUE_SWAP:
0E53 E9A500               1738             JMP CONTINUE_FIRST_SWAP
                          1739             
0E56                      1740     SECOND_CONTINUE_SWAP:
0E56 E90A01               1741             JMP CONTINUE_SECOND_SWAP
                          1742             
0E59                      1743     ADD_ZERO_INCOMING:
0E59 8A16D901             1744             MOV DL, PLACE_VALUE
0E5D 2AC2                 1745             SUB AL, DL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   37


LOC  OBJ                  LINE     SOURCE

0E5F 0006D901             1746             ADD PLACE_VALUE, AL
0E63 8AC8                 1747             MOV CL, AL
0E65                      1748     START_SHIFT_INCOMING:
0E65 A0D701               1749             MOV AL, ITEM_PRICE[8]
0E68 A2D801               1750             MOV ITEM_PRICE[9], AL
0E6B A0D601               1751             MOV AL, ITEM_PRICE[7]
0E6E A2D701               1752             MOV ITEM_PRICE[8], AL
0E71 A0D501               1753             MOV AL, ITEM_PRICE[6]
0E74 A2D601               1754             MOV ITEM_PRICE[7], AL
0E77 A0D401               1755             MOV AL, ITEM_PRICE[5]
0E7A A2D501               1756             MOV ITEM_PRICE[6], AL
0E7D A0D301               1757             MOV AL, ITEM_PRICE[4]
0E80 A2D401               1758             MOV ITEM_PRICE[5], AL
0E83 A0D201               1759             MOV AL, ITEM_PRICE[3]
0E86 A2D301               1760             MOV ITEM_PRICE[4], AL
0E89 A0D101               1761             MOV AL, ITEM_PRICE[2]
0E8C A2D201               1762             MOV ITEM_PRICE[3], AL
0E8F A0D001               1763             MOV AL, ITEM_PRICE[1]
0E92 A2D101               1764             MOV ITEM_PRICE[2], AL
0E95 A0CF01               1765             MOV AL, ITEM_PRICE[0]
0E98 A2D001               1766             MOV ITEM_PRICE[1], AL
0E9B C606CF0130           1767             MOV ITEM_PRICE[0], '0'
0EA0 E2C3                 1768         LOOP START_SHIFT_INCOMING   
                          1769             
0EA2                      1770     START_ADDITION:
0EA2 8A0ED901             1771             MOV CL, PLACE_VALUE
0EA6 80C103               1772             ADD CL, 3
0EA9 8AD9                 1773             MOV BL, CL
0EAB 4B                   1774             DEC BX
0EAC 33D2                 1775             XOR DX, DX
0EAE                      1776     ADD_DIGITS:
0EAE 80BFCF012E           1777             CMP ITEM_PRICE[BX], '.'
0EB3 7431                 1778             JE ADD_DECIMAL_POINT
0EB5 8A87CF01             1779             MOV AL, ITEM_PRICE[BX]
0EB9 8AA7E001             1780             MOV AH, TOTAL_PRICE[BX]
0EBD 80EC30               1781             SUB AH, 48
0EC0 2C30                 1782             SUB AL, 48
0EC2 02E0                 1783             ADD AH, AL
0EC4 02E2                 1784             ADD AH, DL
0EC6 80FC0A               1785             CMP AH, 10
0EC9 7D0C                 1786             JGE ADD_CARRY_TO_DIGIT
0ECB 80C430               1787             ADD AH, 48
0ECE 88A7E001             1788             MOV TOTAL_PRICE[BX], AH
0ED2 B200                 1789             MOV DL, 00H     
0ED4 EB1590               1790             JMP END_ADD_LOOP
                          1791             
0ED7                      1792     ADD_CARRY_TO_DIGIT:
0ED7 80EC0A               1793             SUB AH, 10
0EDA 80C430               1794             ADD AH, 48
0EDD 88A7E001             1795             MOV TOTAL_PRICE[BX], AH
0EE1 B201                 1796             MOV DL, 01H
0EE3 EB0690               1797             JMP END_ADD_LOOP
                          1798             
0EE6                      1799     ADD_DECIMAL_POINT:
0EE6 C687E0012E           1800             MOV TOTAL_PRICE[BX], '.'
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   38


LOC  OBJ                  LINE     SOURCE

                          1801                     
0EEB                      1802     END_ADD_LOOP:
0EEB 4B                   1803             DEC BX
0EEC E2C0                 1804             LOOP ADD_DIGITS
                          1805             
0EEE 80FA00               1806             CMP DL, 00H
0EF1 7416                 1807             JE INCOMING_PRICE_END   
0EF3 C606F10101           1808             MOV SWAP_JUMP_FLAG, 01H
0EF8 E907FF               1809             JMP START_SHIFT_TOTAL
0EFB                      1810     CONTINUE_FIRST_SWAP:
0EFB C606F10100           1811             MOV SWAP_JUMP_FLAG, 00H
0F00 C606E00131           1812             MOV TOTAL_PRICE[0], '1'
0F05 FE06EA01             1813             INC TOTAL_PLACE_VALUE
                          1814     
0F09                      1815     INCOMING_PRICE_END:     
0F09 5A                   1816             POP DX
0F0A 59                   1817             POP     CX
0F0B 5B                   1818             POP     BX
0F0C 58                   1819             POP AX
0F0D CB                   1820             RET
                          1821     ADD_INCOMING_PRICE ENDP
                          1822     
                          1823     
                          1824     ;Procedure that will subtract the total price from the amount the user wants to pay a
                                   nd calculate the change
0F0E                      1825     CALCULATE_CHANGE PROC FAR       
0F0E 50                   1826             PUSH AX
0F0F 53                   1827             PUSH BX
0F10 51                   1828             PUSH CX
0F11 52                   1829             PUSH DX
                          1830     
0F12 A05200               1831             MOV AL, CHANGE_PLACE_VALUE
0F15 3A06EA01             1832             CMP AL, TOTAL_PLACE_VALUE
0F19 7F26                 1833             JG START_SUBTRACTION
0F1B 7C1C                 1834             JL SAY_ERROR
                          1835             
0F1D 33C9                 1836             XOR CX, CX
0F1F 33DB                 1837             XOR BX, BX
0F21 8A0EEA01             1838             MOV CL, TOTAL_PLACE_VALUE
0F25 80C103               1839             ADD CL, 3
                          1840     
0F28                      1841     CHECK_FOR_LESSER:
0F28 8A87E001             1842             MOV AL, TOTAL_PRICE[BX]
0F2C 384753               1843             CMP CHANGE_PRICE[BX], AL        
0F2F 7C08                 1844             JL SAY_ERROR
0F31 7F0E                 1845             JG START_SUBTRACTION
0F33 43                   1846             INC BX
0F34 E2F2                 1847             LOOP CHECK_FOR_LESSER
0F36 EB0990               1848             JMP START_SUBTRACTION   
                          1849             
0F39                      1850     SAY_ERROR:
0F39 C606750001           1851             MOV CHANGE_SUCCESS_FLAG, 01H
0F3E E9EA00               1852             JMP CALCULATE_CHANGE_END        
                          1853     
0F41                      1854     START_SUBTRACTION:      
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   39


LOC  OBJ                  LINE     SOURCE

0F41 33C9                 1855             XOR CX, CX
                          1856             
0F43 A0EA01               1857             MOV AL, TOTAL_PLACE_VALUE
0F46 3A065200             1858             CMP AL, CHANGE_PLACE_VALUE
0F4A 7C03                 1859             JL SUB_ZERO_TOTAL
0F4C EB2190               1860             JMP SUBTRACT_NUMBER
                          1861             
0F4F                      1862     SUB_ZERO_TOTAL:
0F4F 8A165200             1863             MOV DL, CHANGE_PLACE_VALUE
0F53 2AD0                 1864             SUB DL, AL
0F55 0016EA01             1865             ADD TOTAL_PLACE_VALUE, DL
0F59 8ACA                 1866             MOV CL, DL
0F5B                      1867     SUB_START_SHIFT_TOTAL:
0F5B C606F10102           1868             MOV SWAP_JUMP_FLAG, 02H
0F60 E99FFE               1869             JMP START_SHIFT_TOTAL
0F63                      1870     CONTINUE_SECOND_SWAP:
0F63 C606F10100           1871             MOV SWAP_JUMP_FLAG, 00H
0F68 C606E00130           1872             MOV TOTAL_PRICE[0], '0'
0F6D E2EC                 1873             LOOP SUB_START_SHIFT_TOTAL
                          1874             
0F6F                      1875     SUBTRACT_NUMBER:
0F6F 8A0EEA01             1876             MOV CL, TOTAL_PLACE_VALUE
0F73 80C103               1877             ADD CL, 3
0F76 8AD9                 1878             MOV BL, CL
0F78 4B                   1879             DEC BX
0F79 33D2                 1880             XOR DX, DX
0F7B                      1881     SUBTRACT_DIGITS:
0F7B 80BFE0012E           1882             CMP TOTAL_PRICE[BX], '.'
0F80 7459                 1883             JE ADD_DECIMAL_POINT_SUB
0F82 8A87E001             1884             MOV AL, TOTAL_PRICE[BX]
0F86 8A6753               1885             MOV AH, CHANGE_PRICE[BX]
0F89 80EC30               1886             SUB AH, 48
0F8C 2C30                 1887             SUB AL, 48
0F8E 3AE0                 1888             CMP AH, AL
0F90 7C36                 1889             JL BORROW_SUBTRACT
0F92 7F24                 1890             JG NORMAL_SUBTRACT
                          1891     
0F94                      1892     EQUAL_SUBTRACT: 
0F94 2AE0                 1893             SUB AH, AL
0F96 2AE2                 1894             SUB AH, DL
0F98 80FC00               1895             CMP AH, 0
0F9B 7C0C                 1896             JL LESSER_SUBTRACT
                          1897             
0F9D B200                 1898             MOV DL, 0
0F9F 80C430               1899             ADD AH, 48
0FA2 88A7E001             1900             MOV TOTAL_PRICE[BX], AH
0FA6 EB3890               1901             JMP END_SUB_LOOP
                          1902             
0FA9                      1903     LESSER_SUBTRACT:
0FA9 80C40A               1904             ADD AH, 10
0FAC B201                 1905             MOV DL, 1
0FAE 80C430               1906             ADD AH, 48
0FB1 88A7E001             1907             MOV TOTAL_PRICE[BX], AH
0FB5 EB2990               1908             JMP END_SUB_LOOP
                          1909             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   40


LOC  OBJ                  LINE     SOURCE

0FB8                      1910     NORMAL_SUBTRACT:
0FB8 2AE0                 1911             SUB AH, AL
0FBA 2AE2                 1912             SUB AH, DL
0FBC B200                 1913             MOV DL, 0
0FBE 80C430               1914             ADD AH, 48
0FC1 88A7E001             1915             MOV TOTAL_PRICE[BX], AH
0FC5 EB1990               1916             JMP END_SUB_LOOP
                          1917             
0FC8                      1918     BORROW_SUBTRACT:
0FC8 2AE0                 1919             SUB AH, AL
0FCA 2AE2                 1920             SUB AH, DL
0FCC 80C40A               1921             ADD AH, 10
0FCF B201                 1922             MOV DL, 1
0FD1 80C430               1923             ADD AH, 48
0FD4 88A7E001             1924             MOV TOTAL_PRICE[BX], AH
0FD8 EB0690               1925             JMP END_SUB_LOOP
                          1926             
0FDB                      1927     ADD_DECIMAL_POINT_SUB:
0FDB C687E0012E           1928             MOV TOTAL_PRICE[BX], '.'
                          1929                     
0FE0                      1930     END_SUB_LOOP:
0FE0 4B                   1931             DEC BX
0FE1 E298                 1932             LOOP SUBTRACT_DIGITS
                          1933             
0FE3                      1934     REMOVE_SUB_ZERO:
0FE3 803EE00130           1935             CMP TOTAL_PRICE[0], '0'
0FE8 7541                 1936             JNE CALCULATE_CHANGE_END
0FEA A0E101               1937             MOV AL, TOTAL_PRICE[1]
0FED A2E001               1938             MOV TOTAL_PRICE[0], AL
0FF0 A0E201               1939             MOV AL, TOTAL_PRICE[2]
0FF3 A2E101               1940             MOV TOTAL_PRICE[1], AL
0FF6 A0E301               1941             MOV AL, TOTAL_PRICE[3]
0FF9 A2E201               1942             MOV TOTAL_PRICE[2], AL
0FFC A0E401               1943             MOV AL, TOTAL_PRICE[4]
0FFF A2E301               1944             MOV TOTAL_PRICE[3], AL
1002 A0E501               1945             MOV AL, TOTAL_PRICE[5]
1005 A2E401               1946             MOV TOTAL_PRICE[4], AL
1008 A0E601               1947             MOV AL, TOTAL_PRICE[6]
100B A2E501               1948             MOV TOTAL_PRICE[5], AL
100E A0E701               1949             MOV AL, TOTAL_PRICE[7]
1011 A2E601               1950             MOV TOTAL_PRICE[6], AL
1014 A0E801               1951             MOV AL, TOTAL_PRICE[8]
1017 A2E701               1952             MOV TOTAL_PRICE[7], AL
101A A0E901               1953             MOV AL, TOTAL_PRICE[9]
101D A2E801               1954             MOV TOTAL_PRICE[8], AL
1020 C606E90130           1955             MOV TOTAL_PRICE[9], '0'
1025 FE0EEA01             1956             DEC TOTAL_PLACE_VALUE
1029 EBB8                 1957             JMP REMOVE_SUB_ZERO
                          1958             
102B                      1959     CALCULATE_CHANGE_END:   
102B 5A                   1960             POP DX
102C 59                   1961             POP     CX
102D 5B                   1962             POP     BX
102E 58                   1963             POP AX
102F CB                   1964             RET
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   41


LOC  OBJ                  LINE     SOURCE

                          1965     CALCULATE_CHANGE ENDP
                          1966     
                          1967     
                          1968     ;Procedure that is called whenever a timer interrupt is received
1030                      1969     TIMER2_ACTION   PROC    FAR
1030 FE06C601             1970             INC DS:TIMER_COUNTER_BCD
1034 FF06C701             1971         INC DS:TIMER_COUNTER_KBD
                          1972     
1038 833EC70130           1973         CMP DS:TIMER_COUNTER_KBD, TIMER_COUNTER_KBD_LEN
103D 741C                 1974         JE EXECUTE_KBD
                          1975             
103F 803EC60118           1976         CMP DS:TIMER_COUNTER_BCD, TIMER_COUNTER_BCD_LEN
1044 7408                 1977         JE EXECUTE_BCD
                          1978             
1046                      1979     EXECUTE_SOUND:
1046 9A1211----     R     1980             CALL FAR PTR PLAY_SOUND
104B EB2D90               1981             JMP T2_END
                          1982     
104E                      1983     EXECUTE_BCD:
104E C606C60100           1984             MOV DS:TIMER_COUNTER_BCD, 0
1053 9ADC10----     R     1985             CALL FAR PTR DISPLAY_7SEGMENT
1058 EB2090               1986             JMP T2_END
                          1987             
105B                      1988     EXECUTE_KBD:
105B 9A1211----     R     1989             CALL FAR PTR PLAY_SOUND
1060 9A1211----     R     1990             CALL FAR PTR PLAY_SOUND
1065 C706C7010000         1991             MOV DS:TIMER_COUNTER_KBD, 0
106B 9AB506----     R     1992             CALL FAR PTR KEYPAD_READ
1070 9A1211----     R     1993             CALL FAR PTR PLAY_SOUND
1075 9A1211----     R     1994             CALL FAR PTR PLAY_SOUND
                          1995             
107A                      1996     T2_END:
107A CB                   1997             RET
                          1998     TIMER2_ACTION   ENDP
                          1999     
                          2000     
                          2001     ;Procedure that will reset the 7-segment displays back to zeroes
107B                      2002     CLEAR_7SEGMENT PROC FAR
107B 50                   2003             PUSH AX
107C 53                   2004             PUSH BX
107D 51                   2005             PUSH CX
                          2006     
107E 33DB                 2007             XOR BX, BX
1080 B90600               2008             MOV CX, 06
                          2009             
1083                      2010     CLEAR_SINGLE_BCD:
1083 803EC10101           2011             CMP TRIGGER_L_FLAG, 01H
1088 741B                 2012             JE ASSIGN_BCD_VALUE_TO_L
                          2013             
108A 803EC20101           2014             CMP TRIGGER_E_FLAG, 01H
108F 741A                 2015             JE ASSIGN_BCD_VALUE_TO_E
                          2016             
1091 803EC30101           2017             CMP TRIGGER_A_FLAG, 01H
1096 7419                 2018             JE ASSIGN_BCD_VALUE_TO_A
                          2019             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   42


LOC  OBJ                  LINE     SOURCE

1098 803EC40101           2020             CMP TRIGGER_P_FLAG, 01H
109D 7418                 2021             JE ASSIGN_BCD_VALUE_TO_P
                          2022             
109F A0AC01               2023             MOV AL, BCD_NUMBERS[0]
10A2 EB1990               2024             JMP ASSIGN_TO_BCD
                          2025             
10A5                      2026     ASSIGN_BCD_VALUE_TO_L:
10A5 A0B601               2027             MOV AL, BCD_NUMBERS[10]
10A8 EB1390               2028             JMP ASSIGN_TO_BCD
                          2029             
10AB                      2030     ASSIGN_BCD_VALUE_TO_E:
10AB A0B701               2031             MOV AL, BCD_NUMBERS[11]
10AE EB0D90               2032             JMP ASSIGN_TO_BCD
                          2033             
10B1                      2034     ASSIGN_BCD_VALUE_TO_A:
10B1 A0B801               2035             MOV AL, BCD_NUMBERS[12]
10B4 EB0790               2036             JMP ASSIGN_TO_BCD
                          2037             
10B7                      2038     ASSIGN_BCD_VALUE_TO_P:
10B7 A0B901               2039             MOV AL, BCD_NUMBERS[13] 
10BA EB0190               2040             JMP ASSIGN_TO_BCD
                          2041             
10BD                      2042     ASSIGN_TO_BCD:
10BD 8887BA01             2043             MOV DS:BCD_DISPLAY[BX], AL
10C1 43                   2044             INC BX
10C2 E2BF                 2045             LOOP CLEAR_SINGLE_BCD
                          2046             
10C4 C606C10100           2047             MOV TRIGGER_L_FLAG, 00H
10C9 C606C20100           2048             MOV TRIGGER_E_FLAG, 00H
10CE C606C30100           2049             MOV TRIGGER_A_FLAG, 00H
10D3 C606C40100           2050             MOV TRIGGER_P_FLAG, 00H
                          2051     
10D8 59                   2052             POP CX
10D9 5B                   2053             POP BX
10DA 58                   2054             POP AX
10DB CB                   2055             RET
                          2056     CLEAR_7SEGMENT ENDP
                          2057     
                          2058     
                          2059     ;Procedure that will display digits on the BCD based on the BCD queue
10DC                      2060     DISPLAY_7SEGMENT PROC FAR       
10DC 50                   2061             PUSH AX
10DD 53                   2062             PUSH BX
10DE 51                   2063             PUSH CX
10DF 52                   2064             PUSH DX
                          2065     
10E0 33DB                 2066             XOR BX, BX
                          2067             
                          2068             ; BCD Select: [-] [-] [6] [5] [4] [3] [2] [1]
10E2 BA0001               2069             MOV DX, PCS2_ADDR
10E5 B0FE                 2070             MOV AL, 0FEH
10E7 8A0EC001             2071             MOV CL, DS:CURRENT_BCD
10EB D2C0                 2072             ROL AL, CL
10ED EE                   2073             OUT DX, AL
                          2074             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   43


LOC  OBJ                  LINE     SOURCE

10EE BA8001               2075             MOV DX, PCS3_ADDR
10F1 8A1EC001             2076             MOV BL, CURRENT_BCD
10F5 8A87BA01             2077             MOV AL, BCD_DISPLAY[BX]
10F9 EE                   2078             OUT DX, AL
                          2079             
10FA FE06C001             2080             INC CURRENT_BCD
10FE 803EC00106           2081             CMP CURRENT_BCD, 06H
1103 7403                 2082             JE RESET_CURRENT_BCD
1105 EB0690               2083             JMP DISP_END
                          2084             
1108                      2085     RESET_CURRENT_BCD:
1108 C606C00100           2086             MOV CURRENT_BCD, 00H
                          2087     
110D                      2088     DISP_END:       
110D 5A                   2089             POP DX
110E 59                   2090             POP     CX
110F 5B                   2091             POP     BX
1110 58                   2092             POP AX
1111 CB                   2093             RET
                          2094     DISPLAY_7SEGMENT ENDP
                          2095     
                          2096     
                          2097     ;Procedure that will play sounds on the speaker based on the speaker queue
1112                      2098     PLAY_SOUND PROC FAR     
1112 50                   2099             PUSH AX
1113 53                   2100             PUSH BX
1114 56                   2101             PUSH SI
1115 52                   2102             PUSH DX
                          2103             
1116 B8----         R     2104             MOV AX, DATA_SEG
1119 8ED8                 2105         MOV DS, AX
                          2106             
111B A0A801               2107             MOV AL, SOUND_HEAD
111E 3806A901             2108             CMP SOUND_TAIL, AL
1122 7470                 2109             JE SOUND_END
                          2110             
1124 33DB                 2111             XOR BX, BX
1126 8A1EA801             2112             MOV BL, SOUND_HEAD 
112A 8A9F8801             2113             MOV BL, SOUND_QUEUE[BX]
112E 8B87D000             2114             MOV AX, SOUND_SIZE[BX]
                          2115             
1132 833E860100           2116             CMP SOUND_COUNT, 0000H
1137 7438                 2117             JE ASSIGN_ADDRESS
1139 39068601             2118             CMP SOUND_COUNT, AX
113D 7E38                 2119             JLE SOUND_PLAY
                          2120             
113F FE06A801             2121             INC SOUND_HEAD
1143 803EA80120           2122             CMP SOUND_HEAD, 32
1148 7C05                 2123             JL SOUND_INITIALIZE_CONTINUE
114A C606A80100           2124             MOV SOUND_HEAD, 00H
                          2125     
114F                      2126     SOUND_INITIALIZE_CONTINUE:
114F C70686010000         2127             MOV SOUND_COUNT, 0000H
1155 A0A801               2128             MOV AL, SOUND_HEAD
1158 3806A901             2129             CMP SOUND_TAIL, AL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    14:14:47  12/02/;3  PAGE   44


LOC  OBJ                  LINE     SOURCE

115C 7436                 2130             JE SOUND_END
                          2131             
115E 33DB                 2132             XOR BX, BX
1160 8A1EA801             2133             MOV BL, SOUND_HEAD
1164 8A9F8801             2134             MOV BL, SOUND_QUEUE[BX]
1168 8B4776               2135             MOV AX, SOUND_OFFSET[BX]
116B A38401               2136             MOV SOUND_ADDRESS, AX
116E EB0790               2137             JMP SOUND_PLAY
                          2138             
1171                      2139     ASSIGN_ADDRESS:
1171 8B4776               2140             MOV AX, SOUND_OFFSET[BX]
1174 A38401               2141             MOV SOUND_ADDRESS, AX
                          2142             
1177                      2143     SOUND_PLAY:                             
1177 8B368401             2144             MOV SI, SOUND_ADDRESS
117B 8B872A01             2145             MOV AX, EEPROM_START[BX]
117F 8ED8                 2146             MOV DS, AX
                          2147             
1181 8A04                 2148             MOV AL, [SI]
1183 BA0002               2149             MOV DX, PCS4_ADDR
1186 EE                   2150             OUT DX, AL
                          2151                     
1187 B8----         R     2152             MOV AX, DATA_SEG
118A 8ED8                 2153         MOV DS, AX
                          2154             
118C FF068601             2155             INC SOUND_COUNT
1190 FF068401             2156             INC SOUND_ADDRESS
                          2157     
1194                      2158     SOUND_END:      
1194 5A                   2159             POP DX
1195 5E                   2160             POP     SI
1196 5B                   2161             POP     BX
1197 58                   2162             POP AX
1198 CB                   2163             RET
                          2164     PLAY_SOUND ENDP
                          2165     
                          2166     
----                      2167     CODE_SEG        ENDS
                          2168     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
