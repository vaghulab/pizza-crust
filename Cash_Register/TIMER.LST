8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TIMER
OBJECT MODULE PLACED IN TIMER.OBJ
ASSEMBLER INVOKED BY:  F:\ASM86.EXE TIMER.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $MOD186
                             2 +1  $EP
                             3     NAME TIMER
                             4     
                             5     ; =========================================================================
                             6     ; Main Timer Driver Program
                             7     ; Author: Vaghul Aditya Balaji
                             8     
                             9     ; This file contains proprietary information and cannot be copied 
                            10     ; or distributed without prior permission from the author.
                            11     ; =========================================================================
                            12     
                            13     public  serial_rec_action, timer2_action
                            14     extrn   print_char:far, print_2hex:far, iodefine:far
                            15     extrn   set_timer2:far
                            16     
                            17     ;IO Setup for 80C188
  FFA0                      18             UMCR    EQU    0FFA0H ; Upper Memory Control Register
  FFA2                      19             LMCR    EQU    0FFA2H ; Lower Memory control Register         
  FFA4                      20             PCSBA   EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA6                      21             MMCS    EQU    0FFA6H ; Used for controlling the MCS pins on the 8088
  FFA8                      22             MPCS    EQU    0FFA8H ; MMCS and PCS Alter Control Register
                            23             
  0080                      24             PORTA  EQU    0080H
  0081                      25             PORTB  EQU    0081H
  0082                      26             PORTC  EQU    0082H
  0083                      27             CWR    EQU    0083H
                            28             
  FF38                      29             INT0CON  EQU   0FF38H
  FF22                      30             EOI      EQU   0FF22H
  FF28                      31             IMASK    EQU   0FF28H
                            32             
  0100                      33             PCS2_ADDR EQU 100H ; Used for controlling which BCD displays the digit
  0180                      34             PCS3_ADDR EQU 180H ; Used for controlling the pattern that is displayed on th
                                   e BCDs
  0200                      35             PCS4_ADDR EQU 200H ; Used for controlling the DAC chip of the speaker system
                            36             
  0018                      37             TIMER_COUNTER_BCD_LEN   EQU 24
  0030                      38             TIMER_COUNTER_KBD_LEN   EQU 48
  0604                      39             TIMEOUT_COUNTER_LEN             EQU 1540
                            40             
                            41             ;Sound Mappings for playing on the speaker
  002C                      42             SOUND_SILENCE                    EQU  44
  001E                      43             SOUND_AND                        EQU  30
  0021                      44             SOUND_DOLLARS                    EQU  33
  0022                      45             SOUND_CENTS                      EQU  34
  001C                      46             SOUND_HUNDRED                    EQU  28
  001D                      47             SOUND_THOUSAND                   EQU  29
  0023                      48             SOUND_GOOD                       EQU  35
  0025                      49             SOUND_AFTERNOON                  EQU  37
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE    2


LOC  OBJ                  LINE     SOURCE

  0028                      50             SOUND_PURCHASED                  EQU  40
  001F                      51             SOUND_COST                               EQU  31
  0029                      52             SOUND_YOURCHANGEIS               EQU  41
  002A                      53             SOUND_THANKYOUANDGOODBYE EQU  42        
                            54             
                            55             ;Serial Communication Mappings
  0000                      56             NETWORK_DISABLE             EQU  00
  0001                      57             NETWORK_ENABLE              EQU  01     
  0002                      58             NETWORK_END_TRANSACTION     EQU  02
  0003                      59             NETWORK_LOGOUT                      EQU  03
  0004                      60             NETWORK_CANCEL_TRANSACTION  EQU  04
                            61             
                            62             ;Cash Register State Mappings
  0000                      63             WAITING_FOR_LOGIN     EQU  00
  0001                      64             ENTER_LOGIN_USERNAME  EQU  01
  0002                      65             WAITING_FOR_BARCODE   EQU  02
  0003                      66             ENTER_BARCODE         EQU  03
  0004                      67             ENTER_QUANTITY        EQU  04
  0005                      68             DISPLAY_ITEM_PRICE    EQU  05
  0006                      69             CANCEL_ITEM                   EQU  06
  0007                      70             END_TRANSACTION           EQU  07
  0008                      71             CHANGE_PAY                        EQU  08
                            72             
                            73             ;Keypad Character Mappings
  0000                      74             KBD_CHAR_RESET                 EQU  00
  005F                      75             KBD_BACKSPACE                  EQU  '_'
  007C                      76             KBD_ENTER                      EQU  '|'
  0041                      77             KBD_TRIGGER_LOGIN              EQU  'A'
  0042                      78             KBD_TRIGGER_TRANSACTION        EQU  'B'
  0043                      79             KBD_TRIGGER_NEW_ITEM               EQU  'C'
  0044                      80             KBD_TRIGGER_CANCEL_ITEM            EQU  'D'
  0045                      81             KBD_TRIGGER_CANCEL_TRANSACTION EQU  'E'
  0046                      82             KBD_TRIGGER_END_TRANSACTION    EQU  'F'
  0047                      83             KBD_TRIGGER_MODIFY                         EQU  'G'
  0048                      84             KBD_TRIGGER_DISPLAY_CURRENT    EQU  'H'
  0049                      85             KBD_TRIGGER_CHANGE_PAY         EQU  'I'
  004A                      86             KBD_TRIGGER_REFUND                         EQU  'J'
  004C                      87             KBD_TRIGGER_ANDROID                        EQU  'L'
                            88             
                            89             ;Keyboard Input Constants
  0006                      90             KBD_USERNAME_LENGTH  EQU  06
  0008                      91             KBD_BARCODE_LENGTH   EQU  08
  0003                      92             KBD_QUANTITY_LENGTH  EQU  03
  0008                      93             KBD_CHANGE_LENGTH    EQU  08
  0000                      94             KBD_OLD_INPUT        EQU  00
  0001                      95             KBD_NEW_INPUT        EQU  01
                            96     
                            97             
----                        98     STACK_SEG       SEGMENT
0000 (256                   99             DB      256 DUP(?)
     ??
     )
0100                       100             TOS     LABEL   WORD
----                       101     STACK_SEG       ENDS
                           102     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE    3


LOC  OBJ                  LINE     SOURCE

                           103     
----                       104     DATA_SEG        SEGMENT
0000 0A                    105             TIMER2_MESS           DB        10,13,'TIMER2 INTERRUPT    '
0001 0D
0002 54494D45523220
     494E5445525255
     505420202020
0016 2F                    106             T_COUNT               DB        2FH
0017 2F                    107             T_COUNT_SET           DB        2FH
0018 0A                    108             REC_MESS              DB        10,13,'Period of timer =     '
0019 0D
001A 506572696F6420
     6F662074696D65
     72203D20202020
     20
0030 43323237315D          109             CASH_REGISTER_ID  DB    'C2271]'
                           110             
                           111             ;Keypad Variables       
0036 7C                    112             KEYS_PART1           DB   '|','0','_','L','K','J','9','8','7','I','H','G' 
0037 30
0038 5F
0039 4C
003A 4B
003B 4A
003C 39
003D 38
003E 37
003F 49
0040 48
0041 47
0042 36                    113             KEYS_PART2           DB   '6','5','4','F','E','D','3','2','1','C','B','A'
0043 35
0044 34
0045 46
0046 45
0047 44
0048 33
0049 32
004A 31
004B 43
004C 42
004D 41
004E 00                    114             KEY_FLAG             DB   00H ;This variable is used for controlling multiple
                                    detections of the same key-press inside the keypad loop
004F 00                    115             KBD_NUM_INPUT        DB   00H ;This variable stores the numerical input from 
                                   the keyboard
0050 00                    116             KBD_CHAR_INPUT       DB   00H ;This variable stores the character input from 
                                   the keyboard
0051 00                    117             KBD_INPUT_STATE      DB   00H
0052 00                    118             CHANGE_PLACE_VALUE   DB   00H
0053 (10                   119             CHANGE_PRICE         DB   10 DUP('0')
     30
     )
005D (6                    120             USER_USERNAME        DB   6 DUP('0')
     30
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE    4


LOC  OBJ                  LINE     SOURCE

     )
0063 (6                    121             USER_PASSWORD        DB   6 DUP('0')
     30
     )
0069 (8                    122             USER_BARCODE         DB   8 DUP('0')
     30
     )
0071 (3                    123             USER_QUANTITY        DB   3 DUP('0')
     30
     )
0074 00                    124             USER_INPUT_LENGTH    DB   00H   
0075 00                    125             CHANGE_SUCCESS_FLAG  DB  00H
                           126             
                           127             ;Sound Variables
0076 0000                  128             SOUND_OFFSET   DW   0000H, 1269H, 2121H, 2EA9H, 3BD3H, 478DH, 546EH, 6608H, 7
                                   53DH, 7C41H
0078 6912
007A 2121
007C A92E
007E D33B
0080 8D47
0082 6E54
0084 0866
0086 3D75
0088 417C
008A 0B8D                  129                                        DW   8D0BH, 98C6H, 0AAF8H, 0BA1EH, 0CA87H, 0DB3CH,
                                    9D67H, 055BH, 1E09H, 32B8H
008C C698
008E F8AA
0090 1EBA
0092 87CA
0094 3CDB
0096 679D
0098 5B05
009A 091E
009C B832
009E 554A                  130                                        DW   4A55H, 567AH, 60D6H, 6E3CH, 7A8BH, 8BFAH, 9E5
                                   BH, 0AA63H, 0B8D6H, 0C3F7H
00A0 7A56
00A2 D660
00A4 3C6E
00A6 8B7A
00A8 FA8B
00AA 5B9E
00AC 63AA
00AE D6B8
00B0 F7C3
00B2 67CF                  131                                        DW   0CF67H, 0D6EAH, 0E31DH, 0F49EH, 06C9H, 13A6H,
                                    1C5FH, 29DAH, 408FH, 5293H
00B4 EAD6
00B6 1DE3
00B8 9EF4
00BA C906
00BC A613
00BE 5F1C
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE    5


LOC  OBJ                  LINE     SOURCE

00C0 DA29
00C2 8F40
00C4 9352
00C6 3466                  132                                        DW   6634H, 83C7H, 0A00BH, 0C7B2H, 0CAD7H
00C8 C783
00CA 0BA0
00CC B2C7
00CE D7CA
                           133                                
00D0 6812                  134             SOUND_SIZE         DW   1268H, 0EB7H, 0D87H, 0D29H, 0BB9H, 0CE0H, 1199H, 0F34
                                   H, 0703H, 10C9H
00D2 B70E
00D4 870D
00D6 290D
00D8 B90B
00DA E00C
00DC 9911
00DE 340F
00E0 0307
00E2 C910
00E4 BA0B                  135                                        DW   0BBAH, 1231H, 0F25H, 1068H, 10B4H, 122AH, 175
                                   3H, 18ADH, 14AEH, 179CH
00E6 3112
00E8 250F
00EA 6810
00EC B410
00EE 2A12
00F0 5317
00F2 AD18
00F4 AE14
00F6 9C17
00F8 240C                  136                                        DW   0C24H, 0A5BH, 0D65H, 0C4EH, 116EH, 1260H, 0C0
                                   7H, 0E72H, 0B20H, 0B6FH
00FA 5B0A
00FC 650D
00FE 4E0C
0100 6E11
0102 6012
0104 070C
0106 720E
0108 200B
010A 6F0B
010C 8207                  137                                        DW   0782H, 0C32H, 1180H, 122AH, 0CDCH, 08B8H, 0D7
                                   AH, 16B4H, 1203H, 13A0H
010E 320C
0110 8011
0112 2A12
0114 DC0C
0116 B808
0118 7A0D
011A B416
011C 0312
011E A013
0120 921D                  138                                        DW   1D92H, 1C43H, 27A6H, 0324H, 031FH       
                                                         
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE    6


LOC  OBJ                  LINE     SOURCE

0122 431C
0124 A627
0126 2403
0128 1F03
                           139     
012A 0040                  140             EEPROM_START   DW   4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4
                                   000H, 4000H
012C 0040
012E 0040
0130 0040
0132 0040
0134 0040
0136 0040
0138 0040
013A 0040
013C 0040
013E 0040                  141                                        DW   4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 450
                                   0H, 5000H, 5000H, 5000H
0140 0040
0142 0040
0144 0040
0146 0040
0148 0040
014A 0045
014C 0050
014E 0050
0150 0050
0152 0050                  142                                        DW   5000H, 5000H, 5000H, 5000H, 5000H, 5000H, 500
                                   0H, 5000H, 5000H, 5000H 
0154 0050
0156 0050
0158 0050
015A 0050
015C 0050
015E 0050
0160 0050
0162 0050
0164 0050
0166 0050                  143                                        DW   5000H, 5000H, 5000H, 5000H, 6000H, 6000H, 600
                                   0H, 6000H, 6000H, 6000H
0168 0050
016A 0050
016C 0050
016E 0060
0170 0060
0172 0060
0174 0060
0176 0060
0178 0060
017A 0060                  144                                        DW   6000H, 6000H, 6000H, 6000H, 6000H       
                                                         
017C 0060
017E 0060
0180 0060
0182 0060
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE    7


LOC  OBJ                  LINE     SOURCE

                           145                                        
0184 0000                  146             SOUND_ADDRESS        DW   0000H
0186 0000                  147             SOUND_COUNT          DW   0000H
0188 (32                   148             SOUND_QUEUE          DB   32 DUP(?)
     ??
     )
01A8 00                    149             SOUND_HEAD           DB   00H
01A9 00                    150             SOUND_TAIL           DB   00H
01AA 00                    151             SOUND_INDEX_INPUT    DB   00H
01AB 00                    152             SAY_SOUND_ONCE_FLAG  DB   00H
                           153             
                           154             ;7-Segment Variables
                           155             ; BCD Digit Mapping:    0        1        2        3    4    5    6    7    8
                                       9    L     E    A    P
01AC 5F                    156         BCD_NUMBERS        DB  5FH, 50H, 6DH, 79H, 72H, 3BH, 3EH, 51H, 7FH, 73H, 0EH, 02F
                                   H, 77H, 67H                                                
01AD 50
01AE 6D
01AF 79
01B0 72
01B1 3B
01B2 3E
01B3 51
01B4 7F
01B5 73
01B6 0E
01B7 2F
01B8 77
01B9 67
01BA 0E                    157             BCD_DISPLAY            DB  0EH, 0EH, 0EH, 0EH, 0EH, 0EH
01BB 0E
01BC 0E
01BD 0E
01BE 0E
01BF 0E
01C0 00                    158             CURRENT_BCD        DB  00H
01C1 00                    159             TRIGGER_L_FLAG     DB  00H 
01C2 00                    160             TRIGGER_E_FLAG     DB  00H 
01C3 00                    161             TRIGGER_A_FLAG     DB  00H 
01C4 00                    162             TRIGGER_P_FLAG     DB  00H 
01C5 00                    163             SHOW_BCD_ONCE_FLAG DB  00H
                           164             
                           165             ;Timer Variables
01C6 00                    166             TIMER_COUNTER_BCD   DB  00H
01C7 0000                  167         TIMER_COUNTER_KBD   DW  0000H
01C9 0000                  168             TIMEOUT_COUNTER         DW  0000H
01CB 00                    169             TIMEOUT_SEC_COUNT   DB  00H
                           170             
                           171             ;Serial Variables
01CC 00                    172             START_READ            DB  00H
01CD 00                    173             START_RECEIVE_PRICE   DB  00H
01CE 00                    174             SERIAL_INDEX          DB  00H
01CF (10                   175             ITEM_PRICE            DB  10 DUP('0')
     30
     )
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE    8


LOC  OBJ                  LINE     SOURCE

01D9 00                    176             PLACE_VALUE           DB  00H
01DA 00                    177             TMP_PLACE_VALUE       DB  00H
01DB (2                    178             TWO_DIGIT_SOUND       DB  2 DUP(?)
     ??
     )
01DD 00                    179             AND_FLAG              DB  00H
01DE 00                    180             CENTS_AND_FLAG        DB  00H
01DF 00                    181             THOUSAND_FLAG         DB  00H
01E0 (10                   182             TOTAL_PRICE           DB  10 DUP('0')
     30
     )
01EA 00                    183             TOTAL_PLACE_VALUE     DB  00H
01EB 00                    184             CASH_REGISTER_START   DB  00H
01EC 00                    185             CASH_REGISTER_FLAG    DB  00H
01ED 00                    186             NETWORK_STATE         DB  00H
01EE 00                    187             CASH_REGISTER_STATE   DB  WAITING_FOR_LOGIN
01EF 00                    188             PURCHASE_ITEM_COUNT   DB  00H
01F0 00                    189             CHANGE_DONE_FLAG      DB  00H
01F1 00                    190             SWAP_JUMP_FLAG            DB  00H
01F2 00                    191             MODIFY_ITEM_FLAG      DB  00H
01F3 00                    192             USERNAME_FLAG             DB  00H
01F4 00                    193             REFUND_FLAG                       DB  00H
01F5 00                    194             ANDROID_FLAG          DB  00H
----                       195     DATA_SEG        ENDS
                           196     
                           197             
----                       198     CODE_SEG        SEGMENT
                           199     
                           200             PUBLIC          START
                           201     
                           202     ASSUME  CS:CODE_SEG, SS:STACK_SEG, DS:DATA_SEG
                           203     
0000                       204     START:
                           205     ;initialize stack area
0000 B8----         R      206             MOV     AX,STACK_SEG            
0003 8ED0                  207             MOV     SS,AX
0005 368B260001            208             MOV     SP,TOS
                           209                     
000A B8----         R      210             MOV AX, DATA_SEG
000D 8ED8                  211             MOV DS, AX
                           212     
                           213     ; Initialize the on-chip peripherals
000F 9A0000----     E      214             CALL FAR PTR IODEFINE
                           215             
                           216     ; Initialize MPCS to MAP peripheral to IO address
                           217             
0014 BAA8FF                218             MOV  DX, MPCS  
0017 B88320                219             MOV  AX, 2083H 
001A EF                    220             OUT  DX, AX
                           221             
001B BAA6FF                222             MOV  DX, MMCS ; send MCS start address to 40000
001E B80340                223             MOV  AX, 4003H 
0021 EF                    224             OUT  DX, AX
                           225     
                           226     ; PCSBA initial, set the parallel port start from 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE    9


LOC  OBJ                  LINE     SOURCE

0022 BAA4FF                227             MOV DX, PCSBA
0025 B80300                228             MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
0028 EF                    229             OUT DX, AX
                           230     
                           231     ; Initialize LMCS 
0029 BAA2FF                232         MOV DX, LMCR
002C B8C401                233         MOV AX, 01C4H  ; Starting address 1FFFH, 8K, No waits, last should be 5H for 1 wa
                                   its      
002F EF                    234         OUT DX, AX
                           235             
0030 B089                  236             MOV AL, 89H ;mode 0, [A-out(for led)] [B - out, C-in (for reading keypad))]
0032 BA8300                237             MOV DX, CWR ; load CWR to DX
0035 EE                    238             OUT DX, AL      ;load CWR value from AL
                           239             
                           240     ; ######################### Start of User Main Routine ###########################
                           241       
0036 9A0000----     E      242         CALL FAR PTR set_timer2
003B FB                    243         STI
                           244                     
003C                       245             NEXT:
003C EBFE                  246                     JMP NEXT
                           247             
                           248     ; ######################### End of User Main Routine #############################
                                      
                           249     
                           250     
                           251     ;Procedure to change the state of the cash register according to user's input
003E                       252     CHANGE_CASHIER_STATE PROC FAR   
003E 50                    253             PUSH AX
003F 53                    254             PUSH BX
0040 51                    255             PUSH CX
                           256     
0041 803EEE0100            257             CMP CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0046 743B                  258             JE CASHIER_WAITING_FOR_LOGIN
                           259             
0048 803EEE0101            260             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
004D 7448                  261             JE CASHIER_ENTER_USERNAME       
                           262             
004F 803EEE0102            263             CMP CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0054 7469                  264             JE FIRST_JUMP_WAITING_FOR_BARCODE
                           265             
0056 803EEE0103            266             CMP CASH_REGISTER_STATE, ENTER_BARCODE
005B 7465                  267             JE FIRST_JUMP_ENTER_BARCODE
                           268             
005D 803EEE0104            269             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0062 7461                  270             JE FIRST_JUMP_ENTER_QUANTITY
                           271             
0064 803EEE0105            272             CMP CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0069 745D                  273             JE FIRST_JUMP_DISPLAY_ITEM_PRICE
                           274             
006B 803EEE0106            275             CMP CASH_REGISTER_STATE, CANCEL_ITEM
0070 7459                  276             JE FIRST_JUMP_CANCEL_ITEM
                           277             
0072 803EEE0108            278             CMP CASH_REGISTER_STATE, CHANGE_PAY
0077 7458                  279             JE FIRST_JUMP_CHANGE_PAY
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   10


LOC  OBJ                  LINE     SOURCE

                           280             
0079 803EEE0107            281             CMP CASH_REGISTER_STATE, END_TRANSACTION
007E 744E                  282             JE FIRST_JUMP_END_TRANSACTION
                           283     
0080 EB3A90                284             JMP FIRST_JUMP_STATE_END
                           285     
                           286     ;Waiting for user to press the login button     
0083                       287     CASHIER_WAITING_FOR_LOGIN:
0083 803E500041            288             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
0088 7532                  289             JNE FIRST_JUMP_STATE_END
008A C606EE0101            290             MOV CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
008F 9A2906----     R      291             CALL FAR PTR STATE_TRANSITION
0094 EB2690                292             JMP FIRST_JUMP_STATE_END
                           293             
                           294     ;User is now entering his/her login credentials
0097                       295     CASHIER_ENTER_USERNAME:
0097 803E500000            296             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
009C 7477                  297             JE USERNAME_CHECK_NUMBER
009E 803E500041            298             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
00A3 752F                  299             JNE USERNAME_CHECK_BACKSPACE
00A5 C606C10101            300             MOV TRIGGER_L_FLAG, 01H
00AA C606EE0100            301             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
00AF C606F30100            302             MOV USERNAME_FLAG, 00H
00B4 9A2906----     R      303             CALL FAR PTR STATE_TRANSITION
00B9 E99604                304             JMP CASHIER_STATE_END   
00BC                       305     FIRST_JUMP_STATE_END:
00BC E99304                306             JMP CASHIER_STATE_END
00BF                       307     FIRST_JUMP_WAITING_FOR_BARCODE:
00BF EB6390                308             JMP CASHIER_WAITING_FOR_BARCODE
00C2                       309     FIRST_JUMP_ENTER_BARCODE:
00C2 E9B500                310             JMP CASHIER_ENTER_BARCODE
00C5                       311     FIRST_JUMP_ENTER_QUANTITY:
00C5 E94A01                312             JMP CASHIER_ENTER_QUANTITY
00C8                       313     FIRST_JUMP_DISPLAY_ITEM_PRICE:
00C8 E9C501                314             JMP CASHIER_DISPLAY_ITEM_PRICE
00CB                       315     FIRST_JUMP_CANCEL_ITEM:
00CB E91503                316             JMP CASHIER_CANCEL_ITEM
00CE                       317     FIRST_JUMP_END_TRANSACTION:
00CE E97203                318             JMP CASHIER_END_TRANSACTION
00D1                       319     FIRST_JUMP_CHANGE_PAY:
00D1 E99703                320             JMP CASHIER_CHANGE_PAY
00D4                       321     USERNAME_CHECK_BACKSPACE:
00D4 803E50005F            322             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
00D9 7508                  323             JNE USERNAME_CHECK_ENTER
00DB 9A3E06----     R      324             CALL FAR PTR BACKSPACE_KEYPRESS
00E0 E96F04                325             JMP CASHIER_STATE_END
00E3                       326     USERNAME_CHECK_ENTER:
00E3 803E50007C            327             CMP KBD_CHAR_INPUT, KBD_ENTER
00E8 752B                  328             JNE USERNAME_CHECK_NUMBER
00EA 803E740006            329             CMP USER_INPUT_LENGTH, KBD_USERNAME_LENGTH
00EF 75CB                  330             JNE FIRST_JUMP_STATE_END
00F1 803EF30101            331             CMP USERNAME_FLAG, 01H
00F6 750C                  332             JNE CONTINUE_TO_PASSWORD
00F8 C606ED0101            333             MOV NETWORK_STATE, NETWORK_ENABLE
00FD 9A2906----     R      334             CALL FAR PTR STATE_TRANSITION
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   11


LOC  OBJ                  LINE     SOURCE

0102 EBB8                  335             JMP FIRST_JUMP_STATE_END
0104                       336     CONTINUE_TO_PASSWORD:
0104 C606F30101            337             MOV USERNAME_FLAG, 01H
0109 C606EE0101            338             MOV CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
010E 9A2906----     R      339             CALL FAR PTR STATE_TRANSITION
0113 EBA7                  340             JMP FIRST_JUMP_STATE_END
0115                       341     USERNAME_CHECK_NUMBER:  
0115 803E740006            342             CMP USER_INPUT_LENGTH, KBD_USERNAME_LENGTH
011A 74A0                  343             JE FIRST_JUMP_STATE_END
011C 9A6005----     R      344             CALL FAR PTR GET_USER_DIGIT
0121                       345     SECOND_JUMP_STATE_END:
0121 E92E04                346             JMP CASHIER_STATE_END   
                           347             
                           348     ;Waiting for the user to begin a new transaction
0124                       349     CASHIER_WAITING_FOR_BARCODE:
0124 803E500000            350             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0129 74F6                  351             JE SECOND_JUMP_STATE_END
012B 803E500041            352             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
0130 7517                  353             JNE BARCODE_CHECK_TRANSACTION
0132 C606C10101            354             MOV TRIGGER_L_FLAG, 01H
0137 C606EE0100            355             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
013C C606ED0103            356             MOV NETWORK_STATE, NETWORK_LOGOUT
0141 9A2906----     R      357             CALL FAR PTR STATE_TRANSITION
0146 E90904                358             JMP CASHIER_STATE_END   
0149                       359     BARCODE_CHECK_TRANSACTION:
0149 803E500042            360             CMP KBD_CHAR_INPUT, KBD_TRIGGER_TRANSACTION
014E 7512                  361             JNE BARCODE_REFUND
0150 C606EE0103            362             MOV CASH_REGISTER_STATE, ENTER_BARCODE
0155 9A2906----     R      363             CALL FAR PTR STATE_TRANSITION
015A 9AC705----     R      364             CALL FAR PTR CLEAR_ALL_VARIABLES
015F E9F003                365             JMP CASHIER_STATE_END
0162                       366     BARCODE_REFUND:
0162 803E50004A            367             CMP KBD_CHAR_INPUT, KBD_TRIGGER_REFUND
0167 75B8                  368             JNE SECOND_JUMP_STATE_END
0169 C606F40101            369             MOV REFUND_FLAG, 01H
016E C606EE0103            370             MOV CASH_REGISTER_STATE, ENTER_BARCODE
0173 9A2906----     R      371             CALL FAR PTR STATE_TRANSITION
0178 EBA7                  372             JMP SECOND_JUMP_STATE_END
                           373             
                           374     ;User is now entering the barcode
017A                       375     CASHIER_ENTER_BARCODE:
017A 803E500000            376             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
017F 7450                  377             JE FIRST_JMP_BARCODE_CHECK_NUMBER
0181 803E50005F            378             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
0186 7508                  379             JNE BARCODE_CANCEL_ITEM
0188 9A3E06----     R      380             CALL FAR PTR BACKSPACE_KEYPRESS
018D E9C203                381             JMP CASHIER_STATE_END
0190                       382     BARCODE_CANCEL_ITEM:
0190 803E500044            383             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
0195 753D                  384             JNE BARCODE_CHECK_ENTER
0197 803EF40101            385             CMP REFUND_FLAG, 01H
019C 7517                  386             JNE NORMAL_CANCEL_BARCODE
019E C606EE0102            387             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
01A3 C606F40100            388             MOV REFUND_FLAG, 00H
01A8 C606C40101            389             MOV TRIGGER_P_FLAG, 01H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   12


LOC  OBJ                  LINE     SOURCE

01AD 9A2906----     R      390             CALL FAR PTR STATE_TRANSITION
01B2 E99D03                391             JMP CASHIER_STATE_END
01B5                       392     NORMAL_CANCEL_BARCODE:
01B5 C606EE0105            393             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
01BA C606F20100            394             MOV MODIFY_ITEM_FLAG, 00H
01BF C606C50101            395             MOV SHOW_BCD_ONCE_FLAG, 01H
01C4 C606AB0101            396             MOV SAY_SOUND_ONCE_FLAG, 01H
01C9 9A2906----     R      397             CALL FAR PTR STATE_TRANSITION
01CE E98103                398             JMP CASHIER_STATE_END
01D1                       399     FIRST_JMP_BARCODE_CHECK_NUMBER:
01D1 EB3090                400             JMP BARCODE_CHECK_NUMBER
01D4                       401     BARCODE_CHECK_ENTER:
01D4 803E50007C            402             CMP KBD_CHAR_INPUT, KBD_ENTER
01D9 7528                  403             JNE BARCODE_CHECK_NUMBER
01DB 803E740008            404             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
01E0 752D                  405             JNE THIRD_JUMP_STATE_END
01E2 803EF40101            406             CMP REFUND_FLAG, 01H
01E7 750D                  407             JNE NORMAL_BARCODE_ENTER
01E9 C606ED0101            408             MOV NETWORK_STATE, NETWORK_ENABLE
01EE 9A2906----     R      409             CALL FAR PTR STATE_TRANSITION
01F3 E95C03                410             JMP CASHIER_STATE_END
01F6                       411     NORMAL_BARCODE_ENTER:
01F6 C606EE0104            412             MOV CASH_REGISTER_STATE, ENTER_QUANTITY
01FB 9A2906----     R      413             CALL FAR PTR STATE_TRANSITION
0200 E94F03                414             JMP CASHIER_STATE_END
0203                       415     BARCODE_CHECK_NUMBER:   
0203 803E740008            416             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
0208 7405                  417             JE THIRD_JUMP_STATE_END
020A 9A6005----     R      418             CALL FAR PTR GET_USER_DIGIT
020F                       419     THIRD_JUMP_STATE_END:
020F E94003                420             JMP CASHIER_STATE_END   
                           421     
                           422     ;User is now entering the quantity      
0212                       423     CASHIER_ENTER_QUANTITY:
0212 803E500000            424             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0217 7468                  425             JE QUANTITY_CHECK_NUMBER
0219 803E50005F            426             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
021E 7508                  427             JNE QUANTITY_CANCEL_ITEM
0220 9A3E06----     R      428             CALL FAR PTR BACKSPACE_KEYPRESS
0225 E92A03                429             JMP CASHIER_STATE_END
0228                       430     QUANTITY_CANCEL_ITEM:
0228 803E500044            431             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
022D 751C                  432             JNE QUANTITY_CHECK_ANDROID
022F C606EE0105            433             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0234 C606F20100            434             MOV MODIFY_ITEM_FLAG, 00H
0239 C606C50101            435             MOV SHOW_BCD_ONCE_FLAG, 01H
023E C606AB0101            436             MOV SAY_SOUND_ONCE_FLAG, 01H
0243 9A2906----     R      437             CALL FAR PTR STATE_TRANSITION
0248 E90703                438             JMP CASHIER_STATE_END
024B                       439     QUANTITY_CHECK_ANDROID:
024B 803E50004C            440             CMP KBD_CHAR_INPUT, KBD_TRIGGER_ANDROID
0250 750F                  441             JNE QUANTITY_CHECK_ENTER
0252 803E740000            442             CMP USER_INPUT_LENGTH, 00H
0257 74B6                  443             JE THIRD_JUMP_STATE_END
0259 C606F50101            444             MOV ANDROID_FLAG, 01H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   13


LOC  OBJ                  LINE     SOURCE

025E EB0F90                445             JMP BYPASS_ANDROID_END
0261                       446     QUANTITY_CHECK_ENTER:
0261 803E50007C            447             CMP KBD_CHAR_INPUT, KBD_ENTER
0266 7519                  448             JNE QUANTITY_CHECK_NUMBER
0268 803E740000            449             CMP USER_INPUT_LENGTH, 00H
026D 74A0                  450             JE THIRD_JUMP_STATE_END
026F                       451     BYPASS_ANDROID_END:
026F C606ED0101            452             MOV NETWORK_STATE, NETWORK_ENABLE
0274 C606500000            453             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
0279 9A9610----     R      454             CALL FAR PTR CLEAR_7SEGMENT
027E E9D102                455             JMP CASHIER_STATE_END
0281                       456     QUANTITY_CHECK_NUMBER:  
0281 803E740003            457             CMP USER_INPUT_LENGTH, KBD_QUANTITY_LENGTH
0286 7405                  458             JE FOURTH_JUMP_STATE_END
0288 9A6005----     R      459             CALL FAR PTR GET_USER_DIGIT
028D                       460     FOURTH_JUMP_STATE_END:
028D E9C202                461             JMP CASHIER_STATE_END
                           462     
                           463     ;Cash register is now displaying the item price after receiving it via serial
0290                       464     CASHIER_DISPLAY_ITEM_PRICE:
0290 803EC50101            465             CMP SHOW_BCD_ONCE_FLAG, 01H
0295 740A                  466             JE CONTINUE_WITH_SOUND_PRICE
0297 C606C50101            467             MOV SHOW_BCD_ONCE_FLAG, 01H
029C 9A7906----     R      468             CALL FAR PTR DISPLAY_PRICE_ON_BCD
02A1                       469     CONTINUE_WITH_SOUND_PRICE:
02A1 803EAB0101            470             CMP SAY_SOUND_ONCE_FLAG, 01H
02A6 7427                  471             JE PRICE_CHECK_NEW_ITEM
02A8 FE06EF01              472             INC PURCHASE_ITEM_COUNT
02AC C606AB0101            473             MOV SAY_SOUND_ONCE_FLAG, 01H
02B1 C606AA011F            474             MOV SOUND_INDEX_INPUT, SOUND_COST ;To say the word 'cost'
02B6 9AFA0B----     R      475             CALL FAR PTR ADD_SOUND_INDEX
02BB C606AA012C            476             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
02C0 9AFA0B----     R      477             CALL FAR PTR ADD_SOUND_INDEX
02C5 9A230C----     R      478             CALL FAR PTR POPULATE_SOUND_QUEUE
02CA 9AF50D----     R      479             CALL FAR PTR ADD_INCOMING_PRICE
02CF                       480     PRICE_CHECK_NEW_ITEM:
02CF 803E500043            481             CMP KBD_CHAR_INPUT, KBD_TRIGGER_NEW_ITEM
02D4 7517                  482             JNE PRICE_CANCEL_TRANSACTION
02D6 C606EE0103            483             MOV CASH_REGISTER_STATE, ENTER_BARCODE
02DB C606AB0100            484             MOV SAY_SOUND_ONCE_FLAG, 00H
02E0 C606C50100            485             MOV SHOW_BCD_ONCE_FLAG, 00H
02E5 9A2906----     R      486             CALL FAR PTR STATE_TRANSITION
02EA E96502                487             JMP CASHIER_STATE_END
02ED                       488     PRICE_CANCEL_TRANSACTION:       
02ED 803E500045            489             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
02F2 7523                  490             JNE PRICE_VIEW_CURRENT
02F4 803EEF0100            491             CMP PURCHASE_ITEM_COUNT, 00H
02F9 7405                  492             JE BYPASS_CANCEL_TRANSACTION
02FB C606ED0104            493             MOV NETWORK_STATE, NETWORK_CANCEL_TRANSACTION
0300                       494     BYPASS_CANCEL_TRANSACTION:
0300 C606EE0102            495             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0305 C606C40101            496             MOV TRIGGER_P_FLAG, 01H
030A 9A2906----     R      497             CALL FAR PTR STATE_TRANSITION
030F 9AC705----     R      498             CALL FAR PTR CLEAR_ALL_VARIABLES
0314 E93B02                499             JMP CASHIER_STATE_END
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   14


LOC  OBJ                  LINE     SOURCE

0317                       500     PRICE_VIEW_CURRENT:
0317 803E500048            501             CMP KBD_CHAR_INPUT, KBD_TRIGGER_DISPLAY_CURRENT
031C 7514                  502             JNE PRICE_CANCEL_ITEM
031E 803EEF0100            503             CMP PURCHASE_ITEM_COUNT, 00H
0323 7432                  504             JE FIFTH_JUMP_STATE_END
0325 C606AA0128            505             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
032A 9AFA0B----     R      506             CALL FAR PTR ADD_SOUND_INDEX
032F EB4B90                507             JMP BYPASS_VIEW_TOTAL
0332                       508     PRICE_CANCEL_ITEM:
0332 803E500044            509             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
0337 7521                  510             JNE PRICE_END_TRANSACTION
0339 803EEF0100            511             CMP PURCHASE_ITEM_COUNT, 00H
033E 740D                  512             JE DISPLAY_ERROR_CODE_PRICE
0340 C606EE0106            513             MOV CASH_REGISTER_STATE, CANCEL_ITEM
0345 9A2906----     R      514             CALL FAR PTR STATE_TRANSITION
034A E90502                515             JMP CASHIER_STATE_END
034D                       516     DISPLAY_ERROR_CODE_PRICE:
034D C606C20101            517             MOV TRIGGER_E_FLAG, 01H
0352 9A2906----     R      518             CALL FAR PTR STATE_TRANSITION
0357                       519     FIFTH_JUMP_STATE_END:
0357 E9F801                520             JMP CASHIER_STATE_END
035A                       521     PRICE_END_TRANSACTION:
035A 803E500046            522             CMP KBD_CHAR_INPUT, KBD_TRIGGER_END_TRANSACTION
035F 7555                  523             JNE PRICE_MODIFY_ITEM
0361 803EEF0100            524             CMP PURCHASE_ITEM_COUNT, 00H
0366 7498                  525             JE BYPASS_CANCEL_TRANSACTION
0368 C606EE0107            526             MOV CASH_REGISTER_STATE, END_TRANSACTION
036D C606ED0102            527             MOV NETWORK_STATE, NETWORK_END_TRANSACTION
0372 C606AA0128            528             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
0377 9AFA0B----     R      529             CALL FAR PTR ADD_SOUND_INDEX
037C                       530     BYPASS_VIEW_TOTAL:
037C 9A2906----     R      531             CALL FAR PTR STATE_TRANSITION
0381 33C9                  532             XOR CX, CX
0383 33DB                  533             XOR BX, BX
0385 B10A                  534             MOV CL, 10
0387                       535     TRANSFER_TO_ITEM_PRICE:
0387 8A87E001              536             MOV AL, TOTAL_PRICE[BX]
038B 8887CF01              537             MOV ITEM_PRICE[BX], AL
038F 43                    538             INC BX
0390 E2F5                  539             LOOP TRANSFER_TO_ITEM_PRICE
0392 A0EA01                540             MOV AL, TOTAL_PLACE_VALUE
0395 0430                  541             ADD AL, 48
0397 A2D901                542             MOV PLACE_VALUE, AL
039A A2DA01                543             MOV TMP_PLACE_VALUE, AL
039D 2C2B                  544             SUB AL, 43
039F A2CE01                545             MOV SERIAL_INDEX, AL
03A2 9A7906----     R      546             CALL FAR PTR DISPLAY_PRICE_ON_BCD
03A7 9A230C----     R      547             CALL FAR PTR POPULATE_SOUND_QUEUE
03AC 803EEE0108            548             CMP CASH_REGISTER_STATE, CHANGE_PAY
03B1 7464                  549             JE FIRST_JUMP_CHANGE_REMAINING
03B3 E99C01                550             JMP CASHIER_STATE_END
03B6                       551     PRICE_MODIFY_ITEM:
03B6 803E500047            552             CMP KBD_CHAR_INPUT, KBD_TRIGGER_MODIFY
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   15


LOC  OBJ                  LINE     SOURCE

03BB 759A                  553             JNE FIFTH_JUMP_STATE_END
03BD 803EEF0100            554             CMP PURCHASE_ITEM_COUNT, 00H
03C2 7412                  555             JE DISPLAY_ERROR_MODIFY_PRICE
03C4 C606EE0103            556             MOV CASH_REGISTER_STATE, ENTER_BARCODE
03C9 C606F20101            557             MOV MODIFY_ITEM_FLAG, 01H
03CE 9A2906----     R      558             CALL FAR PTR STATE_TRANSITION
03D3 E97C01                559             JMP CASHIER_STATE_END
03D6                       560     DISPLAY_ERROR_MODIFY_PRICE:
03D6 C606C20101            561             MOV TRIGGER_E_FLAG, 01H
03DB 9A2906----     R      562             CALL FAR PTR STATE_TRANSITION   
03E0 E96F01                563             JMP CASHIER_STATE_END
                           564             
                           565     ; Cashier is now cancelling a single item in the transaction
03E3                       566     CASHIER_CANCEL_ITEM:
03E3 803E500000            567             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
03E8 744B                  568             JE CANCEL_CHECK_NUMBER
03EA 803E50005F            569             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
03EF 7508                  570             JNE CANCEL_CHECK_AGAIN
03F1 9A3E06----     R      571             CALL FAR PTR BACKSPACE_KEYPRESS
03F6 E95901                572             JMP CASHIER_STATE_END
03F9                       573     CANCEL_CHECK_AGAIN:
03F9 803E500044            574             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
03FE 751A                  575             JNE CANCEL_CHECK_ENTER
0400 C606EE0105            576             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0405 C606C50101            577             MOV SHOW_BCD_ONCE_FLAG, 01H
040A C606AB0101            578             MOV SAY_SOUND_ONCE_FLAG, 01H
040F 9A2906----     R      579             CALL FAR PTR STATE_TRANSITION
0414 E93B01                580             JMP CASHIER_STATE_END
0417                       581     FIRST_JUMP_CHANGE_REMAINING:
0417 E91C01                582             JMP CHANGE_REMAINING
041A                       583     CANCEL_CHECK_ENTER:
041A 803E50007C            584             CMP KBD_CHAR_INPUT, KBD_ENTER
041F 7514                  585             JNE CANCEL_CHECK_NUMBER
0421 803E740008            586             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
0426 750A                  587             JNE SIXTH_JUMP_STATE_END
0428 C606ED0101            588             MOV NETWORK_STATE, NETWORK_ENABLE
042D 9A2906----     R      589             CALL FAR PTR STATE_TRANSITION
0432                       590     SIXTH_JUMP_STATE_END:
0432 E91D01                591             JMP CASHIER_STATE_END
0435                       592     CANCEL_CHECK_NUMBER:    
0435 803E740008            593             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
043A 74F6                  594             JE SIXTH_JUMP_STATE_END
043C 9A6005----     R      595             CALL FAR PTR GET_USER_DIGIT
0441 EBEF                  596             JMP SIXTH_JUMP_STATE_END
                           597             
                           598     ; Cashier is now ending the transaction 
0443                       599     CASHIER_END_TRANSACTION:
0443 803E500045            600             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
0448 7508                  601             JNE END_CHANGE_PAY
044A C606ED0104            602             MOV NETWORK_STATE, NETWORK_CANCEL_TRANSACTION
044F E9AEFE                603             JMP BYPASS_CANCEL_TRANSACTION
0452                       604     END_CHANGE_PAY:
0452 803E500049            605             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CHANGE_PAY
0457 75D9                  606             JNE SIXTH_JUMP_STATE_END
0459 C606EE0108            607             MOV CASH_REGISTER_STATE, CHANGE_PAY
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   16


LOC  OBJ                  LINE     SOURCE

045E 9A2906----     R      608             CALL FAR PTR STATE_TRANSITION
0463 C606520000            609             MOV CHANGE_PLACE_VALUE, 00H
0468 E9E700                610             JMP CASHIER_STATE_END
                           611             
                           612     ;Cashier is now calculating the change
046B                       613     CASHIER_CHANGE_PAY:
046B 803E500000            614             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0470 7443                  615             JE CHANGE_NUMBER
0472 803E50005F            616             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
0477 7508                  617             JNE CHANGE_CANCEL_TRANSACTION
0479 9A3E06----     R      618             CALL FAR PTR BACKSPACE_KEYPRESS
047E E9D100                619             JMP CASHIER_STATE_END
0481                       620     CHANGE_CANCEL_TRANSACTION:
0481 803E500045            621             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
0486 7508                  622             JNE CHANGE_END_TRANSACTION
0488 C606ED0104            623             MOV NETWORK_STATE, NETWORK_CANCEL_TRANSACTION
048D E970FE                624             JMP BYPASS_CANCEL_TRANSACTION
0490                       625     CHANGE_END_TRANSACTION:
0490 803E500046            626             CMP KBD_CHAR_INPUT, KBD_TRIGGER_END_TRANSACTION
0495 753F                  627             JNE CHANGE_CHECK_ENTER
0497 803EF00101            628             CMP CHANGE_DONE_FLAG, 01H
049C 7514                  629             JNE SEVENTH_JUMP_STATE_END
049E C606EE0102            630             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
04A3 C606C40101            631             MOV TRIGGER_P_FLAG, 01H
04A8 9A2906----     R      632             CALL FAR PTR STATE_TRANSITION
04AD 9AC705----     R      633             CALL FAR PTR CLEAR_ALL_VARIABLES
04B2                       634     SEVENTH_JUMP_STATE_END:
04B2 E99D00                635             JMP CASHIER_STATE_END
04B5                       636     CHANGE_NUMBER:  
04B5 803E510000            637             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
04BA 74F6                  638             JE SEVENTH_JUMP_STATE_END
04BC 803EF00101            639             CMP CHANGE_DONE_FLAG, 01H
04C1 74EF                  640             JE SEVENTH_JUMP_STATE_END
04C3 803E740008            641             CMP USER_INPUT_LENGTH, KBD_CHANGE_LENGTH
04C8 74E8                  642             JE SEVENTH_JUMP_STATE_END
04CA FE065200              643             INC CHANGE_PLACE_VALUE
04CE 9A6005----     R      644             CALL FAR PTR GET_USER_DIGIT
04D3 EB7D90                645             JMP CASHIER_STATE_END
04D6                       646     CHANGE_CHECK_ENTER:
04D6 803E50007C            647             CMP KBD_CHAR_INPUT, KBD_ENTER
04DB 7575                  648             JNE CASHIER_STATE_END
04DD 803EF00101            649             CMP CHANGE_DONE_FLAG, 01H
04E2 746E                  650             JE CASHIER_STATE_END
04E4 803E740002            651             CMP USER_INPUT_LENGTH, 02H
04E9 7C67                  652             JL CASHIER_STATE_END
04EB 33DB                  653             XOR BX, BX
04ED 8A1E5200              654             MOV BL, CHANGE_PLACE_VALUE
04F1 8A4752                655             MOV AL, CHANGE_PRICE[BX-1]
04F4 884753                656             MOV CHANGE_PRICE[BX], AL
04F7 8A4751                657             MOV AL, CHANGE_PRICE[BX-2]
04FA 884752                658             MOV CHANGE_PRICE[BX-1], AL
04FD C647512E              659             MOV CHANGE_PRICE[BX-2], '.'
0501 802E520002            660             SUB CHANGE_PLACE_VALUE, 2
0506 9A290F----     R      661             CALL FAR PTR CALCULATE_CHANGE
050B 803E750000            662             CMP CHANGE_SUCCESS_FLAG, 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   17


LOC  OBJ                  LINE     SOURCE

0510 7417                  663             JE FINISH_CHANGE
0512 C606EE0107            664             MOV CASH_REGISTER_STATE, END_TRANSACTION
0517 C606C20101            665             MOV TRIGGER_E_FLAG, 01H
051C 9A2906----     R      666             CALL FAR PTR STATE_TRANSITION
0521 C606750000            667             MOV CHANGE_SUCCESS_FLAG, 00H
0526 EB2A90                668             JMP CASHIER_STATE_END
0529                       669     FINISH_CHANGE:
0529 C606AA0129            670             MOV SOUND_INDEX_INPUT, SOUND_YOURCHANGEIS ;To say the phrase 'your change is'
052E 9AFA0B----     R      671             CALL FAR PTR ADD_SOUND_INDEX
0533 E946FE                672             JMP BYPASS_VIEW_TOTAL
0536                       673     CHANGE_REMAINING:
0536 C606AA012C            674             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
053B 9AFA0B----     R      675             CALL FAR PTR ADD_SOUND_INDEX
0540 C606AA012A            676             MOV SOUND_INDEX_INPUT, SOUND_THANKYOUANDGOODBYE ;To say the phrase 'thank you
                                    and goodbye'
0545 9AFA0B----     R      677             CALL FAR PTR ADD_SOUND_INDEX
054A C606F00101            678             MOV CHANGE_DONE_FLAG, 01H
054F EB0190                679             JMP CASHIER_STATE_END
                           680             
0552                       681     CASHIER_STATE_END:      
0552 C606500000            682             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
0557 C606510000            683             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
055C 59                    684             POP     CX
055D 5B                    685             POP     BX
055E 58                    686             POP AX
055F CB                    687             RET
                           688     CHANGE_CASHIER_STATE ENDP
                           689     
                           690     
                           691     ;Procedure to add user's numeric input to a corresponding array depending on the stat
                                   e
0560                       692     GET_USER_DIGIT PROC FAR
0560 50                    693             PUSH AX
0561 53                    694             PUSH BX
                           695             
0562 803E510000            696             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
0567 745B                  697             JE GET_USER_DIGIT_END
                           698             
0569 33DB                  699             XOR BX, BX
056B 8A1E7400              700             MOV BL, USER_INPUT_LENGTH
056F A04F00                701             MOV AL, KBD_NUM_INPUT
0572 9AB607----     R      702             CALL FAR PTR ADD_BCD_QUEUE
0577 A2AA01                703             MOV SOUND_INDEX_INPUT, AL
057A 9AFA0B----     R      704             CALL FAR PTR ADD_SOUND_INDEX
057F 0430                  705             ADD AL, 48
                           706             
0581 803EEE0104            707             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0586 741B                  708             JE MOV_AL_QUANTITY
                           709             
0588 803EF30101            710             CMP USERNAME_FLAG, 01H
058D 741A                  711             JE MOV_AL_PASSWORD
                           712             
058F 803EEE0101            713             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
0594 7419                  714             JE MOV_AL_USERNAME
                           715             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   18


LOC  OBJ                  LINE     SOURCE

0596 803EEE0108            716             CMP CASH_REGISTER_STATE, CHANGE_PAY
059B 7418                  717             JE MOV_AL_CHANGE
                           718             
059D 884769                719             MOV USER_BARCODE[BX], AL
05A0 EB1990                720             JMP CONTINUE_GET_DIGIT
                           721             
05A3                       722     MOV_AL_QUANTITY:
05A3 884771                723             MOV USER_QUANTITY[BX], AL
05A6 EB1390                724             JMP CONTINUE_GET_DIGIT
                           725             
05A9                       726     MOV_AL_PASSWORD:
05A9 884763                727             MOV USER_PASSWORD[BX], AL
05AC EB0D90                728             JMP CONTINUE_GET_DIGIT
                           729             
05AF                       730     MOV_AL_USERNAME:
05AF 88475D                731             MOV USER_USERNAME[BX], AL
05B2 EB0790                732             JMP CONTINUE_GET_DIGIT
                           733             
05B5                       734     MOV_AL_CHANGE:
05B5 884753                735             MOV CHANGE_PRICE[BX], AL
05B8 EB0190                736             JMP CONTINUE_GET_DIGIT  
                           737             
05BB                       738     CONTINUE_GET_DIGIT:
05BB FE067400              739             INC USER_INPUT_LENGTH
05BF C606510000            740             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
                           741     
05C4                       742     GET_USER_DIGIT_END:     
05C4 5B                    743             POP     BX
05C5 58                    744             POP AX
05C6 CB                    745             RET
                           746     GET_USER_DIGIT ENDP
                           747     
                           748     
                           749     ;Procedure to clear all variables before cancelling/ending a transaction
05C7                       750     CLEAR_ALL_VARIABLES PROC FAR
05C7 53                    751             PUSH BX
05C8 51                    752             PUSH CX
                           753             
05C9 C606520000            754             MOV CHANGE_PLACE_VALUE, 00H
05CE C606AB0100            755             MOV SAY_SOUND_ONCE_FLAG, 00H
05D3 C606C50100            756             MOV SHOW_BCD_ONCE_FLAG, 00H
05D8 C606CE0100            757             MOV SERIAL_INDEX, 00H
05DD C606EA0100            758             MOV TOTAL_PLACE_VALUE, 00H
05E2 C606EB0100            759             MOV CASH_REGISTER_START, 00H
05E7 C606EF0100            760             MOV PURCHASE_ITEM_COUNT, 00H
05EC C606F00100            761             MOV CHANGE_DONE_FLAG, 00H
05F1 C606F10100            762             MOV SWAP_JUMP_FLAG, 00H
05F6 C606F20100            763             MOV MODIFY_ITEM_FLAG, 00H
05FB C606F30100            764             MOV USERNAME_FLAG, 00H
0600 C606F40100            765             MOV REFUND_FLAG, 00H
0605 C606750000            766             MOV CHANGE_SUCCESS_FLAG, 00H
060A C606F50100            767             MOV ANDROID_FLAG, 00H
                           768             
060F 33DB                  769             XOR BX, BX
0611 33C9                  770             XOR CX, CX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   19


LOC  OBJ                  LINE     SOURCE

0613 B10A                  771             MOV CL, 10
0615                       772     CLEAR_PRICES:
0615 C6475330              773             MOV CHANGE_PRICE[BX], '0'
0619 C687CF0130            774             MOV ITEM_PRICE[BX], '0'
061E C687E00130            775             MOV TOTAL_PRICE[BX], '0'
0623 43                    776             INC BX
0624 E2EF                  777             LOOP CLEAR_PRICES
                           778     
0626                       779     CLEAR_VARIABLES_END:    
0626 59                    780             POP     CX
0627 5B                    781             POP     BX
0628 CB                    782             RET
                           783     CLEAR_ALL_VARIABLES ENDP
                           784     
                           785     
                           786     ;Procedure to clear variables when changing states
0629                       787     STATE_TRANSITION PROC FAR       
0629 C606500000            788             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
062E C606740000            789             MOV USER_INPUT_LENGTH, 00H
0633 C606510000            790             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
0638 9A9610----     R      791             CALL FAR PTR CLEAR_7SEGMENT
063D CB                    792             RET
                           793     STATE_TRANSITION ENDP
                           794     
                           795     
                           796     ;Procedure to remove user's most recent keyboard input and replace it with a zero on 
                                   the BCD
063E                       797     BACKSPACE_KEYPRESS PROC FAR     
063E 50                    798             PUSH AX
                           799     
063F 803E740000            800             CMP USER_INPUT_LENGTH, 00H
0644 7431                  801             JE BACKSPACE_KEYPRESS_END
0646 FE0E7400              802             DEC USER_INPUT_LENGTH
064A FE0E5200              803             DEC CHANGE_PLACE_VALUE
                           804             
064E A0BB01                805             MOV AL, BCD_DISPLAY[1]
0651 A2BA01                806             MOV BCD_DISPLAY[0], AL
0654 A0BC01                807             MOV AL, BCD_DISPLAY[2]
0657 A2BB01                808             MOV BCD_DISPLAY[1], AL
065A A0BD01                809             MOV AL, BCD_DISPLAY[3]
065D A2BC01                810             MOV BCD_DISPLAY[2], AL
0660 A0BE01                811             MOV AL, BCD_DISPLAY[4]
0663 A2BD01                812             MOV BCD_DISPLAY[3], AL
0666 A0BF01                813             MOV AL, BCD_DISPLAY[5]
0669 A2BE01                814             MOV BCD_DISPLAY[4], AL
066C A0AC01                815             MOV AL, BCD_NUMBERS[0]
066F A2BF01                816             MOV BCD_DISPLAY[5], AL
                           817             
0672 C606500000            818             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
                           819             
0677                       820     BACKSPACE_KEYPRESS_END: 
0677 58                    821             POP AX
0678 CB                    822             RET
                           823     BACKSPACE_KEYPRESS ENDP
                           824     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   20


LOC  OBJ                  LINE     SOURCE

                           825     
                           826     ;Procedure that will display the price received via serial on the 7-segment display
0679                       827     DISPLAY_PRICE_ON_BCD PROC FAR   
0679 50                    828             PUSH AX
067A 53                    829             PUSH BX
067B 51                    830             PUSH CX
                           831     
067C 33DB                  832             XOR BX, BX
067E 33C9                  833             XOR CX, CX
                           834             
0680 803ED90145            835             CMP PLACE_VALUE, 'E'
0685 7510                  836             JNE CONTINUE_NORMAL_DISPLAY
0687 A0B701                837             MOV AL, BCD_NUMBERS[11]
068A A2BA01                838             MOV BCD_DISPLAY[0], AL
068D 8A0ECE01              839             MOV CL, SERIAL_INDEX
0691 80E902                840             SUB CL, 2
0694 EB0F90                841             JMP PUT_DIGIT_IN_BCD
                           842             
0697                       843     CONTINUE_NORMAL_DISPLAY:
0697 8A0ED901              844             MOV CL, PLACE_VALUE
069B 80E92D                845             SUB CL, 45 ;Subtract 48 to convert to number and add 3 to take care of decima
                                   l digits
                           846             
069E 80F907                847             CMP CL, 7
06A1 7E02                  848             JLE PUT_DIGIT_IN_BCD
06A3 B107                  849             MOV CL, 7
                           850             
06A5                       851     PUT_DIGIT_IN_BCD:       
06A5 8A87CF01              852             MOV AL, ITEM_PRICE[BX]
06A9 3C2E                  853             CMP AL, '.'
06AB 740D                  854             JE DECIMAL_ADD
06AD 2C30                  855             SUB AL, 48
06AF A24F00                856             MOV KBD_NUM_INPUT, AL
06B2 9AB607----     R      857             CALL FAR PTR ADD_BCD_QUEUE
06B7 EB0990                858             JMP END_PUT_DIGIT_LOOP
                           859             
06BA                       860     DECIMAL_ADD:
06BA A0BA01                861             MOV AL, BCD_DISPLAY[0]
06BD 0C80                  862             OR AL, 80H
06BF A2BA01                863             MOV BCD_DISPLAY[0], AL
                           864             
06C2                       865     END_PUT_DIGIT_LOOP:
06C2 43                    866             INC BX
06C3 E2E0                  867             LOOP PUT_DIGIT_IN_BCD
                           868     
06C5                       869     DISPLAY_PRICE_ON_BCD_END:       
06C5 59                    870             POP     CX
06C6 5B                    871             POP     BX
06C7 58                    872             POP AX
06C8 CB                    873             RET
                           874     DISPLAY_PRICE_ON_BCD ENDP
                           875     
                           876     
                           877     ;Procedure to read both the keypads for user inputs
06C9                       878     KEYPAD_READ PROC FAR
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   21


LOC  OBJ                  LINE     SOURCE

06C9 52                    879             PUSH DX
06CA 51                    880             PUSH CX
06CB 53                    881             PUSH BX
06CC 50                    882             PUSH AX
06CD 56                    883             PUSH SI
                           884                                             
06CE B300                  885             MOV BL, 00H        ;initialize BL for key code
06D0 32C0                  886             XOR AL, AL        ;clear all flags
06D2 BA8100                887             MOV DX, PORTB  ;port B address to DX
06D5 EE                    888             OUT DX, AL        ;ground all rows
06D6 BA8200                889             MOV DX, PORTC        ;Port C address to DX
                           890                  
06D9 EC                    891             IN AL, DX        ;read all columns
06DA 2477                  892             AND AL,77H  ;D0-D2 and D4-D6 are the 6 input pins for two keypads 0111 0111(7
                                   7H)                          
06DC 3C77                  893             CMP AL,77H
06DE 7439                  894             JZ RESET_FLAG 
                           895     
06E0 803E4E0001            896             CMP DS:KEY_FLAG, 01H
06E5 7437                  897             JZ IGNORE_KEYPRESS        ;if flag is set don't send keypad input to hyperter
                                   minal
                           898     
06E7 B07F                  899             MOV AL, 07FH       ;load data byte to ground a row
06E9 B704                  900             MOV BH, 04H        ;set row counter
                           901     
06EB                       902     NXTROW:                
06EB D0C0                  903             ROL AL, 01H       ;rotate AL to ground next row
06ED 8AE8                  904             MOV CH, AL        ;save data byte to ground next row
06EF BA8100                905             MOV DX, PORTB        ;port B address to DX
06F2 EE                    906             OUT DX, AL        ;ground one of the rows
06F3 BA8200                907             MOV DX, PORTC        ;port C address to DX
06F6 EC                    908             IN AL, DX        ;read input port for key closure
                           909             
06F7 8AE0                  910             MOV AH,AL
06F9 D0CC                  911             ROR AH,01H
                           912             
06FB 80E438                913             AND AH,38H
06FE 2407                  914             AND AL,07H
0700 0AC4                  915             OR AL,AH
                           916     
0702 243F                  917             AND AL,3FH ;D0-D2 and D4-D6 are the 6 input pins for two keypads 0111 0111(77
                                   H)
0704 B106                  918             MOV CL, 06H        ;set column counter
                           919     
0706                       920     POLL_COLUMNS:        
0706 D0D8                  921             RCR AL, 01H       ;move D0 to CF        
0708 7365                  922             JNC SEND_KEY        ;key closure is found, if CF=0
070A FEC3                  923             INC BL                ;inc BL for next binary key code                       
                                     
                           924     
070C FEC9                  925             DEC CL                ;dec column counter if no key closure
070E 75F6                  926             JNZ POLL_COLUMNS        ;check for key closure in next column
0710 8AC5                  927             MOV AL, CH        ;Load data byte to ground next row
0712 FECF                  928             DEC BH                ;if no key closure found in all columns in this row, go
                                    to ground next row
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   22


LOC  OBJ                  LINE     SOURCE

0714 75D5                  929             JNZ NXTROW        ;go back to ground next row   
0716 E99700                930             JMP SKIP_SEND       
                           931     
0719                       932     RESET_FLAG:
0719 C6064E0000            933             MOV DS:KEY_FLAG, 00H  ;if no keypad input is found, reset flag so that next k
                                   eypad input is printed
                           934             
071E                       935     IGNORE_KEYPRESS:
071E 9A3E00----     R      936             CALL FAR PTR CHANGE_CASHIER_STATE ;Function call to check if there is a chang
                                   e in the cash register's state     
0723 803EEE0100            937             CMP CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0728 7442                  938             JE TEMP_JUMP_SKIP_SEND
072A 803EEE0101            939             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
072F 743B                  940             JE TEMP_JUMP_SKIP_SEND
0731 FF06C901              941             INC TIMEOUT_COUNTER
0735 813EC9010406          942             CMP TIMEOUT_COUNTER, TIMEOUT_COUNTER_LEN
073B 752F                  943             JNE TEMP_JUMP_SKIP_SEND
073D C706C9010000          944             MOV TIMEOUT_COUNTER, 0
0743 FE06CB01              945             INC TIMEOUT_SEC_COUNT
0747 803ECB0108            946             CMP TIMEOUT_SEC_COUNT, 08H
074C 7562                  947             JNE SKIP_SEND
074E C606C10101            948             MOV TRIGGER_L_FLAG, 01H
0753 C606EE0100            949             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0758 C606CB0100            950             MOV TIMEOUT_SEC_COUNT, 0
075D 9A2906----     R      951             CALL FAR PTR STATE_TRANSITION
0762 9AC705----     R      952             CALL FAR PTR CLEAR_ALL_VARIABLES        
0767 C606ED0103            953             MOV NETWORK_STATE, NETWORK_LOGOUT
076C                       954     TEMP_JUMP_SKIP_SEND:
076C EB4290                955             JMP SKIP_SEND ;if flag is set don't send keypad input to hyperterminal
                           956             
076F                       957     SEND_KEY:
076F 80FB0B                958             CMP BL,0BH
0772 7F07                  959             JG LOAD_KEYS_PART2
                           960             
0774                       961     LOAD_KEYS_PART1:        
0774 8D363600              962         LEA SI,KEYS_PART1 
0778 EB0890                963         JMP SEND_CHAR
                           964             
077B                       965     LOAD_KEYS_PART2:
077B 80EB0C                966         SUB BL,0CH
077E 8D364200              967         LEA SI,KEYS_PART2
                           968             
0782                       969     SEND_CHAR:
0782 33C0                  970         XOR AX, AX
0784 8AC3                  971         MOV AL,BL
0786 03F0                  972         ADD SI,AX
0788 8A04                  973         MOV AL,[SI]
                           974             
078A 2C30                  975         SUB AL, 48 ;Converting to number
078C 3C09                  976             CMP AL, 09H ;If number is > 9 then it is some other character and not a numer
                                   ic digit
078E 7E08                  977             JLE SEND_NUMBER
                           978             
0790 0430                  979             ADD AL, 48
0792 A25000                980             MOV KBD_CHAR_INPUT, AL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   23


LOC  OBJ                  LINE     SOURCE

0795 EB0990                981             JMP KEYPAD_END
                           982     
0798                       983     SEND_NUMBER:
                           984             ;manipulating the number
0798 A24F00                985             MOV KBD_NUM_INPUT, AL
079B C606510001            986             MOV KBD_INPUT_STATE, KBD_NEW_INPUT
                           987             
07A0                       988     KEYPAD_END:
07A0 C6064E0001            989         MOV DS:KEY_FLAG, 01H ;set flag to one so that next time same key input is not pri
                                   nted
07A5 C606CB0100            990             MOV TIMEOUT_SEC_COUNT, 0
07AA C706C9010000          991             MOV TIMEOUT_COUNTER, 0
                           992             
07B0                       993     SKIP_SEND:
07B0 5E                    994             POP SI
07B1 58                    995             POP AX
07B2 5B                    996             POP BX
07B3 59                    997             POP CX
07B4 5A                    998             POP DX
07B5 CB                    999             RET     
                          1000     KEYPAD_READ ENDP
                          1001     
                          1002     
                          1003     ;Procedure that will add user's numeric input to the BCD display
07B6                      1004     ADD_BCD_QUEUE PROC FAR
07B6 50                   1005             PUSH AX
07B7 53                   1006             PUSH BX
                          1007     
07B8 33DB                 1008             XOR BX, BX
                          1009     
07BA 8A1E4F00             1010             MOV BL, KBD_NUM_INPUT
07BE 8AA7AC01             1011             MOV AH, BCD_NUMBERS[BX]
                          1012             
07C2 A0BE01               1013             MOV AL, BCD_DISPLAY[4]
07C5 A2BF01               1014             MOV BCD_DISPLAY[5], AL
07C8 A0BD01               1015             MOV AL, BCD_DISPLAY[3]
07CB A2BE01               1016             MOV BCD_DISPLAY[4], AL
07CE A0BC01               1017             MOV AL, BCD_DISPLAY[2]
07D1 A2BD01               1018             MOV BCD_DISPLAY[3], AL
07D4 A0BB01               1019             MOV AL, BCD_DISPLAY[1]
07D7 A2BC01               1020             MOV BCD_DISPLAY[2], AL
07DA A0BA01               1021             MOV AL, BCD_DISPLAY[0]
07DD A2BB01               1022             MOV BCD_DISPLAY[1], AL          
07E0 8826BA01             1023             MOV BCD_DISPLAY[0], AH
                          1024             
07E4                      1025     BCD_ADD_END:    
07E4 5B                   1026             POP     BX
07E5 58                   1027             POP AX
07E6 CB                   1028             RET
                          1029     ADD_BCD_QUEUE ENDP
                          1030                     
                          1031     
                          1032     ;Procedure that is called whenever something is being sent via serial
07E7                      1033     SERIAL_REC_ACTION       PROC    FAR
07E7 50                   1034             PUSH AX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   24


LOC  OBJ                  LINE     SOURCE

07E8 53                   1035             PUSH BX
07E9 51                   1036             PUSH CX
07EA 52                   1037             PUSH DX
                          1038     
07EB 803EEB0101           1039             CMP CASH_REGISTER_START, 01H
07F0 745D                 1040             JE FIRST_JUMP_CASHIER_RECEIVER
                          1041             
07F2 803ECC0101           1042             CMP START_READ, 01H
07F7 7413                 1043             JE START_READING_ID_VALUES
                          1044             
07F9 3C5B                 1045             CMP AL, '['
07FB 7403                 1046             JE START_READING_ID
07FD E9D300               1047             JMP END_SERIAL_COMMUNICATION
                          1048             
0800                      1049     START_READING_ID:
0800 FE06EC01             1050             INC CASH_REGISTER_FLAG
0804 C606CC0101           1051             MOV START_READ, 01H
0809 E9C700               1052             JMP END_SERIAL_COMMUNICATION
                          1053             
080C                      1054     START_READING_ID_VALUES:
080C 33DB                 1055             XOR BX, BX
080E 8A1EEC01             1056             MOV BL, CASH_REGISTER_FLAG
0812 4B                   1057             DEC BX
                          1058             
0813 3A4730               1059             CMP AL, CASH_REGISTER_ID[BX]
0816 753A                 1060             JNE FIRST_JUMP_INITIALIZE_TERMINATE
0818 803EEC0106           1061             CMP CASH_REGISTER_FLAG, 06H
081D 7529                 1062             JNE NORMAL_ID_CHECK
081F 803EED0100           1063             CMP NETWORK_STATE, NETWORK_DISABLE
0824 742F                 1064             JE FIRST_JUMP_NEGATIVE_ACKNOWLEDGEMENT
0826 803EED0102           1065             CMP NETWORK_STATE, NETWORK_END_TRANSACTION
082B 7465                 1066             JE SEND_END_TRANSACTION_ACK
082D 803EED0103           1067             CMP NETWORK_STATE, NETWORK_LOGOUT
0832 7424                 1068             JE SEND_LOGOUT_ACK
0834 803EED0104           1069             CMP NETWORK_STATE, NETWORK_CANCEL_TRANSACTION
0839 743A                 1070             JE SEND_CANCEL_ACK
083B C606EB0101           1071             MOV CASH_REGISTER_START, 01H
0840 9A0A0B----     R     1072             CALL FAR PTR SEND_TO_PC
0845 E98B00               1073             JMP END_SERIAL_COMMUNICATION
0848                      1074     NORMAL_ID_CHECK:
0848 FE06EC01             1075             INC CASH_REGISTER_FLAG
084C E98400               1076             JMP END_SERIAL_COMMUNICATION
                          1077             
084F                      1078     FIRST_JUMP_CASHIER_RECEIVER:
084F E98400               1079             JMP CASH_REGISTER_RECEIVE_START
                          1080             
0852                      1081     FIRST_JUMP_INITIALIZE_TERMINATE:
0852 EB7090               1082             JMP INITIALIZE_TERMINATE_SERIAL
                          1083             
0855                      1084     FIRST_JUMP_NEGATIVE_ACKNOWLEDGEMENT:
0855 EB5890               1085             JMP SEND_NEGATIVE_ACK
                          1086             
0858                      1087     SEND_LOGOUT_ACK:
0858 B02A                 1088             MOV AL, '*'
085A 9A0000----     E     1089             CALL FAR PTR PRINT_CHAR
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   25


LOC  OBJ                  LINE     SOURCE

085F B032                 1090             MOV AL, '2'
0861 9A0000----     E     1091             CALL FAR PTR PRINT_CHAR
0866 B02A                 1092             MOV AL, '*'
0868 9A0000----     E     1093             CALL FAR PTR PRINT_CHAR
086D C606ED0100           1094             MOV NETWORK_STATE, NETWORK_DISABLE
0872 EB5090               1095             JMP INITIALIZE_TERMINATE_SERIAL
                          1096     
0875                      1097     SEND_CANCEL_ACK:
0875 B02A                 1098             MOV AL, '*'
0877 9A0000----     E     1099             CALL FAR PTR PRINT_CHAR
087C B033                 1100             MOV AL, '3'
087E 9A0000----     E     1101             CALL FAR PTR PRINT_CHAR
0883 B02A                 1102             MOV AL, '*'
0885 9A0000----     E     1103             CALL FAR PTR PRINT_CHAR
088A C606ED0100           1104             MOV NETWORK_STATE, NETWORK_DISABLE
088F EB3390               1105             JMP INITIALIZE_TERMINATE_SERIAL 
                          1106             
0892                      1107     SEND_END_TRANSACTION_ACK:
0892 B02A                 1108             MOV AL, '*'
0894 9A0000----     E     1109             CALL FAR PTR PRINT_CHAR
0899 B034                 1110             MOV AL, '4'
089B 9A0000----     E     1111             CALL FAR PTR PRINT_CHAR
08A0 B02A                 1112             MOV AL, '*'
08A2 9A0000----     E     1113             CALL FAR PTR PRINT_CHAR
08A7 C606ED0100           1114             MOV NETWORK_STATE, NETWORK_DISABLE
08AC EB1690               1115             JMP INITIALIZE_TERMINATE_SERIAL
                          1116             
08AF                      1117     SEND_NEGATIVE_ACK:
08AF B02A                 1118             MOV AL, '*'
08B1 9A0000----     E     1119             CALL FAR PTR PRINT_CHAR
08B6 B030                 1120             MOV AL, '0'
08B8 9A0000----     E     1121             CALL FAR PTR PRINT_CHAR
08BD B02A                 1122             MOV AL, '*'
08BF 9A0000----     E     1123             CALL FAR PTR PRINT_CHAR
                          1124             
08C4                      1125     INITIALIZE_TERMINATE_SERIAL:
08C4 C606EB0100           1126             MOV CASH_REGISTER_START, 00H
08C9 C606EC0100           1127             MOV CASH_REGISTER_FLAG, 00H
08CE C606CC0100           1128             MOV START_READ, 00H
                          1129             
08D3                      1130     END_SERIAL_COMMUNICATION:
08D3 E92F02               1131             JMP SERIAL_END
                          1132     
08D6                      1133     CASH_REGISTER_RECEIVE_START:            
08D6 803ECD0101           1134             CMP START_RECEIVE_PRICE, 01H
08DB 740F                 1135             JE START_READING_DIGITS
                          1136             
08DD 3C28                 1137             CMP AL, '('
08DF 7403                 1138             JE START_READING_PRICE
08E1 E92102               1139             JMP SERIAL_END
                          1140             
08E4                      1141     START_READING_PRICE:
08E4 C606CD0101           1142             mov START_RECEIVE_PRICE, 01H
08E9 E91902               1143             JMP SERIAL_END
                          1144             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   26


LOC  OBJ                  LINE     SOURCE

08EC                      1145     START_READING_DIGITS:
08EC 803ECE0100           1146             CMP SERIAL_INDEX, 00H
08F1 742A                 1147             JE GET_PLACE_VALUE
                          1148             
08F3 3C3B                 1149             CMP AL, ';'
08F5 740A                 1150             JE TEMP_INDEX_INCREMENT
                          1151             
08F7 803ECE0102           1152             CMP SERIAL_INDEX, 02H
08FC 7D0A                 1153             JGE GET_DIGITS
                          1154             
08FE E90402               1155             JMP SERIAL_END
                          1156             
0901                      1157     TEMP_INDEX_INCREMENT:
0901 FE06CE01             1158             INC SERIAL_INDEX
0905 E9FD01               1159             JMP SERIAL_END
                          1160             
0908                      1161     GET_DIGITS:
0908 3C29                 1162             CMP AL, ')'
090A 741E                 1163             JE TERMINATE_SERIAL
                          1164             
090C 33DB                 1165             XOR BX, BX
090E 8A1ECE01             1166             MOV BL, SERIAL_INDEX
0912 8887CD01             1167             MOV ITEM_PRICE[BX-2], AL
0916 FE06CE01             1168             INC SERIAL_INDEX        
091A E9E801               1169             JMP SERIAL_END
                          1170             
091D                      1171     GET_PLACE_VALUE:
091D FE06CE01             1172             INC SERIAL_INDEX
0921 A2DA01               1173             MOV TMP_PLACE_VALUE, AL
0924 A2D901               1174             MOV PLACE_VALUE, AL
0927 E9DB01               1175             JMP SERIAL_END
                          1176             
092A                      1177     TERMINATE_SERIAL:
092A C606EB0100           1178             MOV CASH_REGISTER_START, 00H
092F C606EC0100           1179             MOV CASH_REGISTER_FLAG, 00H
0934 C606CC0100           1180             MOV START_READ, 00H
0939 C606CD0100           1181             MOV START_RECEIVE_PRICE, 00H
093E C606ED0100           1182             MOV NETWORK_STATE, NETWORK_DISABLE
                          1183             
0943 803ED90141           1184             CMP PLACE_VALUE, 'A'
0948 7426                 1185             JE FIRST_JUMP_CHANGE_BARCODE_STATE
                          1186             
094A 803ED90142           1187             CMP PLACE_VALUE, 'B'
094F 7422                 1188             JE FIRST_JUMP_WRONG_LOGIN
                          1189             
0951 803ED90144           1190             CMP PLACE_VALUE, 'D'
0956 741E                 1191             JE FIRST_JUMP_WRONG_BARCODE
                          1192             
0958 803ED90145           1193             CMP PLACE_VALUE, 'E'
095D 741A                 1194             JE FIRST_JUMP_WRONG_QUANTITY
                          1195             
095F 803EEE0104           1196             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0964 7416                 1197             JE FIRST_JUMP_PRICE_PROCESSING
                          1198             
0966 803EEE0106           1199             CMP CASH_REGISTER_STATE, CANCEL_ITEM
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   27


LOC  OBJ                  LINE     SOURCE

096B 7412                 1200             JE CANCEL_ITEM_PROCESSING
                          1201             
096D E99501               1202             JMP SERIAL_END
                          1203             
0970                      1204     FIRST_JUMP_CHANGE_BARCODE_STATE:
0970 E9D300               1205             JMP CHANGE_STATE_TO_BARCODE
                          1206             
0973                      1207     FIRST_JUMP_WRONG_LOGIN:
0973 E90501               1208             JMP DISPLAY_WRONG_LOGIN
                          1209             
0976                      1210     FIRST_JUMP_WRONG_BARCODE:
0976 E91901               1211             JMP DISPLAY_WRONG_BARCODE
                          1212             
0979                      1213     FIRST_JUMP_WRONG_QUANTITY:
0979 E96301               1214             JMP DISPLAY_WRONG_QUANTITY
                          1215             
097C                      1216     FIRST_JUMP_PRICE_PROCESSING:
097C E9B500               1217             JMP PRICE_PROCESSING
                          1218             
097F                      1219     CANCEL_ITEM_PROCESSING: 
097F 8A16EA01             1220             MOV DL, TOTAL_PLACE_VALUE
0983 88165200             1221             MOV CHANGE_PLACE_VALUE, DL              
0987 8A26DA01             1222             MOV AH, TMP_PLACE_VALUE
098B 80EC30               1223             SUB AH, 48
098E 8826EA01             1224             MOV TOTAL_PLACE_VALUE, AH       
0992 33C9                 1225             XOR CX, CX
0994 33DB                 1226             XOR BX, BX
0996 B10A                 1227             MOV CL, 10
0998                      1228     CREATE_PRICE_ITEMS:
0998 8A97E001             1229             MOV DL, TOTAL_PRICE[BX]
099C 885753               1230             MOV CHANGE_PRICE[BX], DL
099F 8A97CF01             1231             MOV DL, ITEM_PRICE[BX]
09A3 8897E001             1232             MOV TOTAL_PRICE[BX], DL
09A7 43                   1233             INC BX
09A8 E2EE                 1234             LOOP CREATE_PRICE_ITEMS 
09AA 9A290F----     R     1235             CALL FAR PTR CALCULATE_CHANGE
09AF C606520000           1236             MOV CHANGE_PLACE_VALUE, 00H     
09B4 33DB                 1237             XOR BX, BX
09B6 B10A                 1238             MOV CL, 10
09B8                      1239     TOTAL_INPUT_PRICE_SWAP:
09B8 8A97E001             1240             MOV DL, TOTAL_PRICE[BX]
09BC 8897CF01             1241             MOV ITEM_PRICE[BX], DL
09C0 C6475330             1242             MOV CHANGE_PRICE[BX], '0'
09C4 43                   1243             INC BX
09C5 E2F1                 1244             LOOP TOTAL_INPUT_PRICE_SWAP     
09C7 8A26EA01             1245             MOV AH, TOTAL_PLACE_VALUE
09CB 80C405               1246             ADD AH, 5
09CE 8826CE01             1247             MOV SERIAL_INDEX, AH
09D2 80C42B               1248             ADD AH, 43
09D5 8826D901             1249             MOV PLACE_VALUE, AH
09D9 8826DA01             1250             MOV TMP_PLACE_VALUE, AH 
09DD FE0EEF01             1251             DEC PURCHASE_ITEM_COUNT
09E1 803EF20101           1252             CMP MODIFY_ITEM_FLAG, 01H
09E6 751C                 1253             JNE CONTINUE_CANCELLING 
09E8 C606CE0100           1254             MOV SERIAL_INDEX, 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   28


LOC  OBJ                  LINE     SOURCE

09ED C606EE0104           1255             MOV CASH_REGISTER_STATE, ENTER_QUANTITY
09F2 C606EB0101           1256             MOV CASH_REGISTER_START, 01H
09F7 C606C50100           1257             MOV SHOW_BCD_ONCE_FLAG, 00H
09FC C606AB0100           1258             MOV SAY_SOUND_ONCE_FLAG, 00H
0A01 E90101               1259             JMP SERIAL_END
0A04                      1260     CONTINUE_CANCELLING:
0A04 C606EE0105           1261             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0A09 C606C50101           1262             MOV SHOW_BCD_ONCE_FLAG, 01H
0A0E C606AB0101           1263             MOV SAY_SOUND_ONCE_FLAG, 01H
0A13 9A2906----     R     1264             CALL FAR PTR STATE_TRANSITION
0A18 C606AA0128           1265             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
0A1D 9AFA0B----     R     1266             CALL FAR PTR ADD_SOUND_INDEX
0A22 9A7906----     R     1267             CALL FAR PTR DISPLAY_PRICE_ON_BCD
0A27 9A230C----     R     1268             CALL FAR PTR POPULATE_SOUND_QUEUE       
0A2C C606CE0100           1269             MOV SERIAL_INDEX, 00H
0A31 E9D100               1270             JMP SERIAL_END
                          1271             
0A34                      1272     PRICE_PROCESSING:
0A34 C606EE0105           1273             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0A39 C606F20100           1274             MOV MODIFY_ITEM_FLAG, 00H
0A3E 9A2906----     R     1275             CALL FAR PTR STATE_TRANSITION
0A43 E9BF00               1276             JMP SERIAL_END
                          1277             
0A46                      1278     CHANGE_STATE_TO_BARCODE:
0A46 C606CE0100           1279             MOV SERIAL_INDEX, 00H
0A4B C606EE0102           1280             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0A50 C606C40101           1281             MOV TRIGGER_P_FLAG, 01H
0A55 9A2906----     R     1282             CALL FAR PTR STATE_TRANSITION
0A5A C606AA0123           1283             MOV SOUND_INDEX_INPUT, SOUND_GOOD ;To say the word 'good'
0A5F 9AFA0B----     R     1284             CALL FAR PTR ADD_SOUND_INDEX
0A64 C606AA012C           1285             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
0A69 9AFA0B----     R     1286             CALL FAR PTR ADD_SOUND_INDEX
0A6E C606AA0125           1287             MOV SOUND_INDEX_INPUT, SOUND_AFTERNOON ;To say the word 'afternoon'
0A73 9AFA0B----     R     1288             CALL FAR PTR ADD_SOUND_INDEX
0A78 E98A00               1289             JMP SERIAL_END
                          1290             
0A7B                      1291     DISPLAY_WRONG_LOGIN:
0A7B C606CE0100           1292             MOV SERIAL_INDEX, 00H
0A80 C606C30101           1293             MOV TRIGGER_A_FLAG, 01H
0A85 C606EE0100           1294             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0A8A 9A2906----     R     1295             CALL FAR PTR STATE_TRANSITION
0A8F EB7490               1296             JMP SERIAL_END
                          1297             
0A92                      1298     DISPLAY_WRONG_BARCODE:
0A92 803EF40101           1299             CMP REFUND_FLAG, 01H
0A97 7519                 1300             JNE NORMAL_WRONG_BARCODE
0A99 C606F40100           1301             MOV REFUND_FLAG, 00H
0A9E C606EE0102           1302             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0AA3 803ECF0131           1303             CMP ITEM_PRICE[0], '1'
0AA8 742E                 1304             JE SHOW_ALPHABET_P
0AAA C606C20101           1305             MOV TRIGGER_E_FLAG, 01H
0AAF EB0B90               1306             JMP CONTINUE_SEND_ERROR
0AB2                      1307     NORMAL_WRONG_BARCODE:
0AB2 C606EE0105           1308             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   29


LOC  OBJ                  LINE     SOURCE

0AB7 C606C20101           1309             MOV TRIGGER_E_FLAG, 01H
0ABC                      1310     CONTINUE_SEND_ERROR:
0ABC C606CE0100           1311             MOV SERIAL_INDEX, 00H
0AC1 C606F20100           1312             MOV MODIFY_ITEM_FLAG, 00H
0AC6 C606C50101           1313             MOV SHOW_BCD_ONCE_FLAG, 01H
0ACB C606AB0101           1314             MOV SAY_SOUND_ONCE_FLAG, 01H    
0AD0 9A2906----     R     1315             CALL FAR PTR STATE_TRANSITION
0AD5 EB2E90               1316             JMP SERIAL_END
0AD8                      1317     SHOW_ALPHABET_P:
0AD8 C606C40101           1318             MOV TRIGGER_P_FLAG, 01H
0ADD EBDD                 1319             JMP CONTINUE_SEND_ERROR
                          1320             
0ADF                      1321     DISPLAY_WRONG_QUANTITY:
0ADF C606EE0105           1322             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0AE4 C606F20100           1323             MOV MODIFY_ITEM_FLAG, 00H
0AE9 C606C50101           1324             MOV SHOW_BCD_ONCE_FLAG, 01H
0AEE C606AB0101           1325             MOV SAY_SOUND_ONCE_FLAG, 01H
0AF3 9A2906----     R     1326             CALL FAR PTR STATE_TRANSITION
0AF8 9A7906----     R     1327             CALL FAR PTR DISPLAY_PRICE_ON_BCD
0AFD C606CE0100           1328             MOV SERIAL_INDEX, 00H
0B02 EB0190               1329             JMP SERIAL_END
                          1330             
0B05                      1331     SERIAL_END:
0B05 5A                   1332             POP DX
0B06 59                   1333             POP     CX
0B07 5B                   1334             POP     BX
0B08 58                   1335             POP AX
0B09 CB                   1336             RET
                          1337     SERIAL_REC_ACTION       ENDP
                          1338     
                          1339     
                          1340     ;Procedure that will send the cash register input to the PC via serial
0B0A                      1341     SEND_TO_PC PROC FAR     
0B0A 50                   1342             PUSH AX
0B0B 53                   1343             PUSH BX
0B0C 51                   1344             PUSH CX
                          1345     
0B0D 803EF40101           1346             CMP REFUND_FLAG, 01H
0B12 7455                 1347             JE FIRST_JUMP_CANCEL_BARCODE
                          1348             
0B14 803EF30101           1349             CMP USERNAME_FLAG, 01H
0B19 740D                 1350             JE SEND_LOGIN_TO_PC
                          1351             
0B1B 803EEE0104           1352             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0B20 744A                 1353             JE SEND_TRANSACTION_TO_PC
                          1354             
0B22 EB4590               1355             JMP FIRST_JUMP_CANCEL_BARCODE
                          1356             
0B25 E9CE00               1357             JMP SEND_PC_END
                          1358     
0B28                      1359     SEND_LOGIN_TO_PC:       
0B28 B028                 1360             MOV AL, '('
0B2A 9A0000----     E     1361             CALL FAR PTR PRINT_CHAR
0B2F 33C9                 1362             XOR CX, CX
0B31 33DB                 1363             XOR BX, BX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   30


LOC  OBJ                  LINE     SOURCE

0B33 B106                 1364             MOV CL, KBD_USERNAME_LENGTH     
0B35                      1365     SEND_USERNAME:
0B35 8A475D               1366             MOV AL, USER_USERNAME[BX]
0B38 9A0000----     E     1367             CALL FAR PTR PRINT_CHAR
0B3D 43                   1368             INC BX
0B3E E2F5                 1369             LOOP SEND_USERNAME              
0B40 B03B                 1370             MOV AL, ';'
0B42 9A0000----     E     1371             CALL FAR PTR PRINT_CHAR
0B47 33DB                 1372             XOR BX, BX
0B49 B106                 1373             MOV CL, KBD_USERNAME_LENGTH     
0B4B                      1374     SEND_PASSWORD:
0B4B 8A4763               1375             MOV AL, USER_PASSWORD[BX]
0B4E 02C3                 1376             ADD AL, BL
0B50 040F                 1377             ADD AL, 15
0B52 9A0000----     E     1378             CALL FAR PTR PRINT_CHAR
0B57 43                   1379             INC BX
0B58 E2F1                 1380             LOOP SEND_PASSWORD      
0B5A B029                 1381             MOV AL, ')'
0B5C 9A0000----     E     1382             CALL FAR PTR PRINT_CHAR 
0B61 C606F30100           1383             MOV USERNAME_FLAG, 00H
0B66 E98D00               1384             JMP SEND_PC_END
                          1385             
0B69                      1386     FIRST_JUMP_CANCEL_BARCODE:
0B69 EB5D90               1387             JMP SEND_CANCEL_BARCODE_PC
                          1388             
0B6C                      1389     SEND_TRANSACTION_TO_PC:
0B6C 803EF20101           1390             CMP MODIFY_ITEM_FLAG, 01H
0B71 740C                 1391             JE SEND_HASH_CHARACTER
0B73 803EF50101           1392             CMP ANDROID_FLAG, 01H
0B78 740F                 1393             JE SEND_AT_CHARACTER
0B7A B05B                 1394             MOV AL, '['
0B7C EB1290               1395             JMP CONTINUE_SENDING_BARCODE
0B7F                      1396     SEND_HASH_CHARACTER:    
0B7F B023                 1397             MOV AL, '#'
0B81 C606EE0106           1398             MOV CASH_REGISTER_STATE, CANCEL_ITEM
0B86 EB0890               1399             JMP CONTINUE_SENDING_BARCODE
0B89                      1400     SEND_AT_CHARACTER:
0B89 C606F50100           1401             MOV ANDROID_FLAG, 00H
0B8E B040                 1402             MOV AL, '@'
0B90                      1403     CONTINUE_SENDING_BARCODE:
0B90 9A0000----     E     1404             CALL FAR PTR PRINT_CHAR
0B95 33C9                 1405             XOR CX, CX
0B97 33DB                 1406             XOR BX, BX
0B99 B108                 1407             MOV CL, KBD_BARCODE_LENGTH      
0B9B                      1408     SEND_BARCODE:
0B9B 8A4769               1409             MOV AL, USER_BARCODE[BX]
0B9E 9A0000----     E     1410             CALL FAR PTR PRINT_CHAR
0BA3 43                   1411             INC BX
0BA4 E2F5                 1412             LOOP SEND_BARCODE       
0BA6 B03B                 1413             MOV AL, ';'
0BA8 9A0000----     E     1414             CALL FAR PTR PRINT_CHAR
0BAD 33DB                 1415             XOR BX, BX
0BAF 8A0E7400             1416             MOV CL, USER_INPUT_LENGTH       
0BB3                      1417     SEND_QUANTITY:
0BB3 8A4771               1418             MOV AL, USER_QUANTITY[BX]
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   31


LOC  OBJ                  LINE     SOURCE

0BB6 9A0000----     E     1419             CALL FAR PTR PRINT_CHAR
0BBB 43                   1420             INC BX
0BBC E2F5                 1421             LOOP SEND_QUANTITY      
0BBE B05D                 1422             MOV AL, ']'
0BC0 9A0000----     E     1423             CALL FAR PTR PRINT_CHAR
0BC5 EB2F90               1424             JMP SEND_PC_END
                          1425             
0BC8                      1426     SEND_CANCEL_BARCODE_PC: 
0BC8 803EF40101           1427             CMP REFUND_FLAG, 01H
0BCD 7405                 1428             JE SEND_DOLLAR
0BCF B03C                 1429             MOV AL, '<'
0BD1 EB0390               1430             JMP CONTINUE_SEND_CANCEL
0BD4                      1431     SEND_DOLLAR:    
0BD4 B024                 1432             MOV AL, '$'
0BD6                      1433     CONTINUE_SEND_CANCEL:
0BD6 9A0000----     E     1434             CALL FAR PTR PRINT_CHAR
0BDB 33C9                 1435             XOR CX, CX
0BDD 33DB                 1436             XOR BX, BX
0BDF B108                 1437             MOV CL, KBD_BARCODE_LENGTH      
0BE1                      1438     SEND_ITEM_ID:
0BE1 8A4769               1439             MOV AL, USER_BARCODE[BX]
0BE4 9A0000----     E     1440             CALL FAR PTR PRINT_CHAR
0BE9 43                   1441             INC BX
0BEA E2F5                 1442             LOOP SEND_ITEM_ID               
0BEC B03E                 1443             MOV AL, '>'
0BEE 9A0000----     E     1444             CALL FAR PTR PRINT_CHAR
0BF3 EB0190               1445             JMP SEND_PC_END
                          1446     
0BF6                      1447     SEND_PC_END:    
0BF6 59                   1448             POP     CX
0BF7 5B                   1449             POP     BX
0BF8 58                   1450             POP AX
0BF9 CB                   1451             RET
                          1452     SEND_TO_PC ENDP
                          1453     
                          1454     
                          1455     ;Procedure that will take add the necessary sound indices to the sound queue for spea
                                   ker output based on a parameter
0BFA                      1456     ADD_SOUND_INDEX PROC FAR        
0BFA 50                   1457             PUSH AX
0BFB 53                   1458             PUSH BX
0BFC 51                   1459             PUSH CX
                          1460     
0BFD 33DB                 1461             XOR BX, BX
0BFF 8A1EA901             1462             MOV BL, SOUND_TAIL
0C03 8A0EAA01             1463             MOV CL, SOUND_INDEX_INPUT
0C07 B002                 1464             MOV AL, 2
0C09 F6E1                 1465             MUL CL
0C0B 88878801             1466             MOV SOUND_QUEUE[BX], AL
                          1467             
0C0F FE06A901             1468             INC SOUND_TAIL 
0C13 803EA90120           1469             CMP SOUND_TAIL, 32
0C18 7C05                 1470             JL SOUND_INDEX_END
0C1A C606A90100           1471             MOV SOUND_TAIL, 00H     
                          1472             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   32


LOC  OBJ                  LINE     SOURCE

0C1F                      1473     SOUND_INDEX_END:        
0C1F 59                   1474             POP     CX
0C20 5B                   1475             POP     BX
0C21 58                   1476             POP AX
0C22 CB                   1477             RET
                          1478     ADD_SOUND_INDEX ENDP
                          1479     
                          1480     
                          1481     ;Procedure that will convert a price received on the serial into a format which is sa
                                   y-able on the speaker
0C23                      1482     POPULATE_SOUND_QUEUE PROC FAR   
0C23 50                   1483             PUSH AX
0C24 53                   1484             PUSH BX
0C25 51                   1485             PUSH CX
                          1486     
0C26 33DB                 1487             XOR BX, BX
0C28 33C9                 1488             XOR CX, CX
                          1489             
0C2A 802ED90130           1490             SUB     PLACE_VALUE, 48
0C2F 8A0ECE01             1491             MOV CL, SERIAL_INDEX
0C33 80E902               1492             SUB CL, 2
0C36 880ECE01             1493             MOV SERIAL_INDEX, CL    
                          1494             
0C3A                      1495     LOAD_SOUND_QUEUE:
0C3A 8A87CF01             1496             MOV AL, ITEM_PRICE[BX]
0C3E 3C2E                 1497             CMP AL, '.'
0C40 7403                 1498             JE SAY_CENTS_VALUE
0C42 EB3490               1499             JMP SAY_OTHER_VALUES
                          1500             
0C45                      1501     SAY_CENTS_VALUE:
0C45 803EDE0100           1502             CMP CENTS_AND_FLAG, 00H
0C4A 740A                 1503             JE CONTINUE_SAYING_CENTS
0C4C C606AA011E           1504             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0C51 9AFA0B----     R     1505             CALL FAR PTR ADD_SOUND_INDEX
                          1506             
0C56                      1507     CONTINUE_SAYING_CENTS:
0C56 43                   1508             INC BX
0C57 8A87CF01             1509             MOV AL, ITEM_PRICE[BX]
0C5B A2DB01               1510             MOV TWO_DIGIT_SOUND[0], AL
0C5E 43                   1511             INC BX
0C5F 8A87CF01             1512             MOV AL, ITEM_PRICE[BX]
0C63 A2DC01               1513             MOV TWO_DIGIT_SOUND[1], AL
0C66 9AAF0D----     R     1514             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0C6B C606AA0122           1515             MOV SOUND_INDEX_INPUT, SOUND_CENTS ;To say the word 'cents'
0C70 9AFA0B----     R     1516             CALL FAR PTR ADD_SOUND_INDEX 
0C75 E92401               1517             JMP SOUND_POPULATE_END
                          1518             
0C78                      1519     SAY_OTHER_VALUES:       
0C78 3C30                 1520             CMP AL, '0'
0C7A 7520                 1521             JNE CHECK_OTHER_VALUES
0C7C 803EDF0101           1522             CMP THOUSAND_FLAG, 01H
0C81 7516                 1523             JNE EXIT_FROM_PROCEDURE
0C83 803ED90104           1524             CMP PLACE_VALUE, 4
0C88 750F                 1525             JNE EXIT_FROM_PROCEDURE
0C8A C606AA011D           1526             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   33


LOC  OBJ                  LINE     SOURCE

0C8F 9AFA0B----     R     1527             CALL FAR PTR ADD_SOUND_INDEX 
0C94 C606DF0100           1528             MOV THOUSAND_FLAG, 00H
                          1529             
0C99                      1530     EXIT_FROM_PROCEDURE:
0C99 E9DF00               1531             JMP CONTINUE_NEXT_ITERATION
                          1532             
0C9C                      1533     CHECK_OTHER_VALUES:     
0C9C 803ED90106           1534             CMP PLACE_VALUE, 6
0CA1 7423                 1535             JE PROCESS_6th_DIGIT
                          1536             
0CA3 803ED90105           1537             CMP PLACE_VALUE, 5
0CA8 7443                 1538             JE PROCESS_5th_DIGIT
                          1539             
0CAA 803ED90104           1540             CMP PLACE_VALUE, 4
0CAF 7439                 1541             JE TEMP_JUMP_4th_DIGIT
                          1542             
0CB1 803ED90103           1543             CMP PLACE_VALUE, 3
0CB6 740E                 1544             JE PROCESS_6th_DIGIT
                          1545             
0CB8 803ED90102           1546             CMP PLACE_VALUE, 2
0CBD 742E                 1547             JE PROCESS_5th_DIGIT
                          1548             
0CBF 803ED90101           1549             CMP PLACE_VALUE, 1
0CC4 7475                 1550             JE PROCESS_4th_DIGIT
                          1551             
0CC6                      1552     PROCESS_6th_DIGIT:
0CC6 C606DB0130           1553             MOV TWO_DIGIT_SOUND[0], '0'
0CCB A2DC01               1554             MOV TWO_DIGIT_SOUND[1], AL
0CCE 9AAF0D----     R     1555             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0CD3 C606AA011C           1556             MOV SOUND_INDEX_INPUT, SOUND_HUNDRED ;To say the word 'Hundred'
0CD8 9AFA0B----     R     1557             CALL FAR PTR ADD_SOUND_INDEX 
0CDD C606DD0101           1558             MOV AND_FLAG, 01H
0CE2 C606DF0101           1559             MOV THOUSAND_FLAG, 01H
0CE7 E99100               1560             JMP CONTINUE_NEXT_ITERATION
                          1561             
0CEA                      1562     TEMP_JUMP_4th_DIGIT:
0CEA EB4F90               1563             JMP PROCESS_4th_DIGIT
                          1564             
0CED                      1565     PROCESS_5th_DIGIT:
0CED C606DF0100           1566             MOV THOUSAND_FLAG, 00H
0CF2 803EDD0100           1567             CMP AND_FLAG, 00H
0CF7 740A                 1568             JE CONTINUE_WITH_5th_DIGIT
0CF9 C606AA011E           1569             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0CFE 9AFA0B----     R     1570             CALL FAR PTR ADD_SOUND_INDEX
                          1571     
0D03                      1572     CONTINUE_WITH_5th_DIGIT:
0D03 8A87CF01             1573             MOV AL, ITEM_PRICE[BX]
0D07 A2DB01               1574             MOV TWO_DIGIT_SOUND[0], AL
0D0A 43                   1575             INC BX
0D0B 8A87CF01             1576             MOV AL, ITEM_PRICE[BX]
0D0F A2DC01               1577             MOV TWO_DIGIT_SOUND[1], AL
0D12 9AAF0D----     R     1578             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0D17 803ED90103           1579             CMP PLACE_VALUE, 3
0D1C 7E0A                 1580             JLE CONTINUE_WITH_REST_OF_5th_DIGIT
0D1E C606AA011D           1581             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   34


LOC  OBJ                  LINE     SOURCE

0D23 9AFA0B----     R     1582             CALL FAR PTR ADD_SOUND_INDEX 
                          1583             
0D28                      1584     CONTINUE_WITH_REST_OF_5th_DIGIT:
0D28 FE0ED901             1585             DEC PLACE_VALUE
0D2C C606DD0100           1586             MOV AND_FLAG, 00H
0D31 49                   1587             DEC CX
0D32 EB0490               1588             JMP FIRST_JMP_ITERATION 
                          1589                     
0D35                      1590     FIRST_JMP_TO_LOAD:
0D35 E902FF               1591             JMP LOAD_SOUND_QUEUE
                          1592             
0D38                      1593     FIRST_JMP_ITERATION:
0D38 EB4190               1594             JMP CONTINUE_NEXT_ITERATION
                          1595             
0D3B                      1596     PROCESS_4th_DIGIT:
0D3B C606DF0100           1597             MOV THOUSAND_FLAG, 00H
0D40 803EDD0100           1598             CMP AND_FLAG, 00H
0D45 740A                 1599             JE CONTINUE_WITH_4th_DIGIT
0D47 C606AA011E           1600             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0D4C 9AFA0B----     R     1601             CALL FAR PTR ADD_SOUND_INDEX
                          1602             
0D51                      1603     CONTINUE_WITH_4th_DIGIT:
0D51 C606DB0130           1604             MOV TWO_DIGIT_SOUND[0], '0'
0D56 8A87CF01             1605             MOV AL, ITEM_PRICE[BX]
0D5A A2DC01               1606             MOV TWO_DIGIT_SOUND[1], AL
0D5D 9AAF0D----     R     1607             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0D62 803ED90103           1608             CMP PLACE_VALUE, 3
0D67 7E0A                 1609             JLE CONTINUE_WITH_REST_OF_4th_DIGIT
0D69 C606AA011D           1610             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0D6E 9AFA0B----     R     1611             CALL FAR PTR ADD_SOUND_INDEX 
0D73                      1612     CONTINUE_WITH_REST_OF_4th_DIGIT:
0D73 C606DD0100           1613             MOV AND_FLAG, 00H
0D78 EB0190               1614             JMP CONTINUE_NEXT_ITERATION     
                          1615             
0D7B                      1616     CONTINUE_NEXT_ITERATION:
0D7B 43                   1617             INC BX
0D7C FE0ED901             1618             DEC PLACE_VALUE
0D80 803ED90100           1619             CMP PLACE_VALUE, 0
0D85 7403                 1620             JE SAY_DOLLARS_AFTER_PRICE
0D87 EB1090               1621             JMP CONTINUE_AFTER_DOLLAR
                          1622             
0D8A                      1623     SAY_DOLLARS_AFTER_PRICE:
0D8A C606DE0101           1624             MOV CENTS_AND_FLAG, 01H
0D8F C606AA0121           1625             MOV SOUND_INDEX_INPUT, SOUND_DOLLARS ;To say the word 'Dollars'
0D94 9AFA0B----     R     1626             CALL FAR PTR ADD_SOUND_INDEX 
                          1627             
0D99                      1628     CONTINUE_AFTER_DOLLAR:          
0D99 49                   1629             DEC CX
0D9A 7599                 1630             JNZ FIRST_JMP_TO_LOAD
                          1631             
0D9C                      1632     SOUND_POPULATE_END:     
0D9C C606CE0100           1633             MOV SERIAL_INDEX, 00H
0DA1 C606DD0100           1634             MOV AND_FLAG, 00H
0DA6 C606DE0100           1635             MOV CENTS_AND_FLAG, 00H
0DAB 59                   1636             POP     CX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   35


LOC  OBJ                  LINE     SOURCE

0DAC 5B                   1637             POP     BX
0DAD 58                   1638             POP AX
0DAE CB                   1639             RET
                          1640     POPULATE_SOUND_QUEUE ENDP
                          1641     
                          1642     
                          1643     ;Procedure that will take in  a two digit value and add the corresponding sound indic
                                   es to the sound queue
0DAF                      1644     PROCESS_TWO_DIGIT_SOUND PROC FAR        
0DAF 50                   1645             PUSH AX
0DB0 52                   1646             PUSH DX
                          1647     
0DB1 8A16DB01             1648             MOV DL, TWO_DIGIT_SOUND[0]
0DB5 80EA30               1649             SUB DL, 48
0DB8 8AF2                 1650             MOV DH, DL
0DBA B00A                 1651             MOV AL, 10
0DBC F6E2                 1652             MUL DL
0DBE 8AD0                 1653             MOV DL, AL
                          1654             
0DC0 A0DC01               1655             MOV AL, TWO_DIGIT_SOUND[1]
0DC3 2C30                 1656             SUB AL, 48
0DC5 8AE0                 1657             MOV AH, AL
0DC7 02C2                 1658             ADD AL, DL
                          1659             
0DC9 3C14                 1660             CMP AL, 20
0DCB 7F0B                 1661             JG PLAY_GREATER_THAN_20
0DCD A2AA01               1662             MOV SOUND_INDEX_INPUT, AL
0DD0 9AFA0B----     R     1663             CALL FAR PTR ADD_SOUND_INDEX
                          1664             
0DD5 EB1B90               1665             JMP TWO_DIGIT_SOUND_END 
                          1666             
0DD8                      1667     PLAY_GREATER_THAN_20:
0DD8 8AC6                 1668             MOV AL, DH
0DDA 0412                 1669             ADD AL, 18
0DDC A2AA01               1670             MOV SOUND_INDEX_INPUT, AL
0DDF 9AFA0B----     R     1671             CALL FAR PTR ADD_SOUND_INDEX
                          1672             
0DE4 8AC4                 1673             MOV AL, AH
0DE6 3C00                 1674             CMP AL, 0
0DE8 7408                 1675             JE TWO_DIGIT_SOUND_END
0DEA A2AA01               1676             MOV SOUND_INDEX_INPUT, AL
0DED 9AFA0B----     R     1677             CALL FAR PTR ADD_SOUND_INDEX
                          1678             
0DF2                      1679     TWO_DIGIT_SOUND_END:    
0DF2 5A                   1680             POP DX
0DF3 58                   1681             POP AX
0DF4 CB                   1682             RET
                          1683     PROCESS_TWO_DIGIT_SOUND ENDP
                          1684     
                          1685     
                          1686     ;Procedure that will add the incoming price to the total price
0DF5                      1687     ADD_INCOMING_PRICE PROC FAR     
0DF5 50                   1688             PUSH AX
0DF6 53                   1689             PUSH BX
0DF7 51                   1690             PUSH CX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   36


LOC  OBJ                  LINE     SOURCE

0DF8 52                   1691             PUSH DX
                          1692     
0DF9 A0DA01               1693             MOV AL, TMP_PLACE_VALUE
0DFC 2C30                 1694             SUB AL, 48
0DFE A2D901               1695             MOV PLACE_VALUE, AL     
                          1696             
0E01 33C9                 1697             XOR CX, CX
                          1698             
0E03 A0EA01               1699             MOV AL, TOTAL_PLACE_VALUE
0E06 3A06D901             1700             CMP AL, PLACE_VALUE
0E0A 745F                 1701             JE FIRST_JMP_ADDITION
0E0C 7C03                 1702             JL ADD_ZERO_TOTAL
0E0E EB6490               1703             JMP ADD_ZERO_INCOMING
                          1704             
0E11                      1705     ADD_ZERO_TOTAL:
0E11 8A16D901             1706             MOV DL, PLACE_VALUE
0E15 2AD0                 1707             SUB DL, AL
0E17 0016EA01             1708             ADD TOTAL_PLACE_VALUE, DL
0E1B 8ACA                 1709             MOV CL, DL
0E1D                      1710     START_SHIFT_TOTAL:
0E1D A0E801               1711             MOV AL, TOTAL_PRICE[8]
0E20 A2E901               1712             MOV TOTAL_PRICE[9], AL
0E23 A0E701               1713             MOV AL, TOTAL_PRICE[7]
0E26 A2E801               1714             MOV TOTAL_PRICE[8], AL
0E29 A0E601               1715             MOV AL, TOTAL_PRICE[6]
0E2C A2E701               1716             MOV TOTAL_PRICE[7], AL
0E2F A0E501               1717             MOV AL, TOTAL_PRICE[5]
0E32 A2E601               1718             MOV TOTAL_PRICE[6], AL
0E35 A0E401               1719             MOV AL, TOTAL_PRICE[4]
0E38 A2E501               1720             MOV TOTAL_PRICE[5], AL
0E3B A0E301               1721             MOV AL, TOTAL_PRICE[3]
0E3E A2E401               1722             MOV TOTAL_PRICE[4], AL
0E41 A0E201               1723             MOV AL, TOTAL_PRICE[2]
0E44 A2E301               1724             MOV TOTAL_PRICE[3], AL
0E47 A0E101               1725             MOV AL, TOTAL_PRICE[1]
0E4A A2E201               1726             MOV TOTAL_PRICE[2], AL
0E4D A0E001               1727             MOV AL, TOTAL_PRICE[0]
0E50 A2E101               1728             MOV TOTAL_PRICE[1], AL
0E53 803EF10101           1729             CMP SWAP_JUMP_FLAG, 01H
0E58 7414                 1730             JE FIRST_CONTINUE_SWAP
0E5A 803EF10102           1731             CMP SWAP_JUMP_FLAG, 02H
0E5F 7410                 1732             JE SECOND_CONTINUE_SWAP
0E61 C606E00130           1733             MOV TOTAL_PRICE[0], '0'
0E66 E2B5                 1734             LOOP START_SHIFT_TOTAL
0E68 EB5390               1735             JMP START_ADDITION
                          1736             
0E6B                      1737     FIRST_JMP_ADDITION:
0E6B EB5090               1738             JMP START_ADDITION
                          1739             
0E6E                      1740     FIRST_CONTINUE_SWAP:
0E6E E9A500               1741             JMP CONTINUE_FIRST_SWAP
                          1742             
0E71                      1743     SECOND_CONTINUE_SWAP:
0E71 E90A01               1744             JMP CONTINUE_SECOND_SWAP
                          1745             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   37


LOC  OBJ                  LINE     SOURCE

0E74                      1746     ADD_ZERO_INCOMING:
0E74 8A16D901             1747             MOV DL, PLACE_VALUE
0E78 2AC2                 1748             SUB AL, DL
0E7A 0006D901             1749             ADD PLACE_VALUE, AL
0E7E 8AC8                 1750             MOV CL, AL
0E80                      1751     START_SHIFT_INCOMING:
0E80 A0D701               1752             MOV AL, ITEM_PRICE[8]
0E83 A2D801               1753             MOV ITEM_PRICE[9], AL
0E86 A0D601               1754             MOV AL, ITEM_PRICE[7]
0E89 A2D701               1755             MOV ITEM_PRICE[8], AL
0E8C A0D501               1756             MOV AL, ITEM_PRICE[6]
0E8F A2D601               1757             MOV ITEM_PRICE[7], AL
0E92 A0D401               1758             MOV AL, ITEM_PRICE[5]
0E95 A2D501               1759             MOV ITEM_PRICE[6], AL
0E98 A0D301               1760             MOV AL, ITEM_PRICE[4]
0E9B A2D401               1761             MOV ITEM_PRICE[5], AL
0E9E A0D201               1762             MOV AL, ITEM_PRICE[3]
0EA1 A2D301               1763             MOV ITEM_PRICE[4], AL
0EA4 A0D101               1764             MOV AL, ITEM_PRICE[2]
0EA7 A2D201               1765             MOV ITEM_PRICE[3], AL
0EAA A0D001               1766             MOV AL, ITEM_PRICE[1]
0EAD A2D101               1767             MOV ITEM_PRICE[2], AL
0EB0 A0CF01               1768             MOV AL, ITEM_PRICE[0]
0EB3 A2D001               1769             MOV ITEM_PRICE[1], AL
0EB6 C606CF0130           1770             MOV ITEM_PRICE[0], '0'
0EBB E2C3                 1771         LOOP START_SHIFT_INCOMING   
                          1772             
0EBD                      1773     START_ADDITION:
0EBD 8A0ED901             1774             MOV CL, PLACE_VALUE
0EC1 80C103               1775             ADD CL, 3
0EC4 8AD9                 1776             MOV BL, CL
0EC6 4B                   1777             DEC BX
0EC7 33D2                 1778             XOR DX, DX
0EC9                      1779     ADD_DIGITS:
0EC9 80BFCF012E           1780             CMP ITEM_PRICE[BX], '.'
0ECE 7431                 1781             JE ADD_DECIMAL_POINT
0ED0 8A87CF01             1782             MOV AL, ITEM_PRICE[BX]
0ED4 8AA7E001             1783             MOV AH, TOTAL_PRICE[BX]
0ED8 80EC30               1784             SUB AH, 48
0EDB 2C30                 1785             SUB AL, 48
0EDD 02E0                 1786             ADD AH, AL
0EDF 02E2                 1787             ADD AH, DL
0EE1 80FC0A               1788             CMP AH, 10
0EE4 7D0C                 1789             JGE ADD_CARRY_TO_DIGIT
0EE6 80C430               1790             ADD AH, 48
0EE9 88A7E001             1791             MOV TOTAL_PRICE[BX], AH
0EED B200                 1792             MOV DL, 00H     
0EEF EB1590               1793             JMP END_ADD_LOOP
                          1794             
0EF2                      1795     ADD_CARRY_TO_DIGIT:
0EF2 80EC0A               1796             SUB AH, 10
0EF5 80C430               1797             ADD AH, 48
0EF8 88A7E001             1798             MOV TOTAL_PRICE[BX], AH
0EFC B201                 1799             MOV DL, 01H
0EFE EB0690               1800             JMP END_ADD_LOOP
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   38


LOC  OBJ                  LINE     SOURCE

                          1801             
0F01                      1802     ADD_DECIMAL_POINT:
0F01 C687E0012E           1803             MOV TOTAL_PRICE[BX], '.'
                          1804                     
0F06                      1805     END_ADD_LOOP:
0F06 4B                   1806             DEC BX
0F07 E2C0                 1807             LOOP ADD_DIGITS
                          1808             
0F09 80FA00               1809             CMP DL, 00H
0F0C 7416                 1810             JE INCOMING_PRICE_END   
0F0E C606F10101           1811             MOV SWAP_JUMP_FLAG, 01H
0F13 E907FF               1812             JMP START_SHIFT_TOTAL
0F16                      1813     CONTINUE_FIRST_SWAP:
0F16 C606F10100           1814             MOV SWAP_JUMP_FLAG, 00H
0F1B C606E00131           1815             MOV TOTAL_PRICE[0], '1'
0F20 FE06EA01             1816             INC TOTAL_PLACE_VALUE
                          1817     
0F24                      1818     INCOMING_PRICE_END:     
0F24 5A                   1819             POP DX
0F25 59                   1820             POP     CX
0F26 5B                   1821             POP     BX
0F27 58                   1822             POP AX
0F28 CB                   1823             RET
                          1824     ADD_INCOMING_PRICE ENDP
                          1825     
                          1826     
                          1827     ;Procedure that will subtract the total price from the amount the user wants to pay a
                                   nd calculate the change
0F29                      1828     CALCULATE_CHANGE PROC FAR       
0F29 50                   1829             PUSH AX
0F2A 53                   1830             PUSH BX
0F2B 51                   1831             PUSH CX
0F2C 52                   1832             PUSH DX
                          1833     
0F2D A05200               1834             MOV AL, CHANGE_PLACE_VALUE
0F30 3A06EA01             1835             CMP AL, TOTAL_PLACE_VALUE
0F34 7F26                 1836             JG START_SUBTRACTION
0F36 7C1C                 1837             JL SAY_ERROR
                          1838             
0F38 33C9                 1839             XOR CX, CX
0F3A 33DB                 1840             XOR BX, BX
0F3C 8A0EEA01             1841             MOV CL, TOTAL_PLACE_VALUE
0F40 80C103               1842             ADD CL, 3
                          1843     
0F43                      1844     CHECK_FOR_LESSER:
0F43 8A87E001             1845             MOV AL, TOTAL_PRICE[BX]
0F47 384753               1846             CMP CHANGE_PRICE[BX], AL        
0F4A 7C08                 1847             JL SAY_ERROR
0F4C 7F0E                 1848             JG START_SUBTRACTION
0F4E 43                   1849             INC BX
0F4F E2F2                 1850             LOOP CHECK_FOR_LESSER
0F51 EB0990               1851             JMP START_SUBTRACTION   
                          1852             
0F54                      1853     SAY_ERROR:
0F54 C606750001           1854             MOV CHANGE_SUCCESS_FLAG, 01H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   39


LOC  OBJ                  LINE     SOURCE

0F59 E9EA00               1855             JMP CALCULATE_CHANGE_END        
                          1856     
0F5C                      1857     START_SUBTRACTION:      
0F5C 33C9                 1858             XOR CX, CX
                          1859             
0F5E A0EA01               1860             MOV AL, TOTAL_PLACE_VALUE
0F61 3A065200             1861             CMP AL, CHANGE_PLACE_VALUE
0F65 7C03                 1862             JL SUB_ZERO_TOTAL
0F67 EB2190               1863             JMP SUBTRACT_NUMBER
                          1864             
0F6A                      1865     SUB_ZERO_TOTAL:
0F6A 8A165200             1866             MOV DL, CHANGE_PLACE_VALUE
0F6E 2AD0                 1867             SUB DL, AL
0F70 0016EA01             1868             ADD TOTAL_PLACE_VALUE, DL
0F74 8ACA                 1869             MOV CL, DL
0F76                      1870     SUB_START_SHIFT_TOTAL:
0F76 C606F10102           1871             MOV SWAP_JUMP_FLAG, 02H
0F7B E99FFE               1872             JMP START_SHIFT_TOTAL
0F7E                      1873     CONTINUE_SECOND_SWAP:
0F7E C606F10100           1874             MOV SWAP_JUMP_FLAG, 00H
0F83 C606E00130           1875             MOV TOTAL_PRICE[0], '0'
0F88 E2EC                 1876             LOOP SUB_START_SHIFT_TOTAL
                          1877             
0F8A                      1878     SUBTRACT_NUMBER:
0F8A 8A0EEA01             1879             MOV CL, TOTAL_PLACE_VALUE
0F8E 80C103               1880             ADD CL, 3
0F91 8AD9                 1881             MOV BL, CL
0F93 4B                   1882             DEC BX
0F94 33D2                 1883             XOR DX, DX
0F96                      1884     SUBTRACT_DIGITS:
0F96 80BFE0012E           1885             CMP TOTAL_PRICE[BX], '.'
0F9B 7459                 1886             JE ADD_DECIMAL_POINT_SUB
0F9D 8A87E001             1887             MOV AL, TOTAL_PRICE[BX]
0FA1 8A6753               1888             MOV AH, CHANGE_PRICE[BX]
0FA4 80EC30               1889             SUB AH, 48
0FA7 2C30                 1890             SUB AL, 48
0FA9 3AE0                 1891             CMP AH, AL
0FAB 7C36                 1892             JL BORROW_SUBTRACT
0FAD 7F24                 1893             JG NORMAL_SUBTRACT
                          1894     
0FAF                      1895     EQUAL_SUBTRACT: 
0FAF 2AE0                 1896             SUB AH, AL
0FB1 2AE2                 1897             SUB AH, DL
0FB3 80FC00               1898             CMP AH, 0
0FB6 7C0C                 1899             JL LESSER_SUBTRACT
                          1900             
0FB8 B200                 1901             MOV DL, 0
0FBA 80C430               1902             ADD AH, 48
0FBD 88A7E001             1903             MOV TOTAL_PRICE[BX], AH
0FC1 EB3890               1904             JMP END_SUB_LOOP
                          1905             
0FC4                      1906     LESSER_SUBTRACT:
0FC4 80C40A               1907             ADD AH, 10
0FC7 B201                 1908             MOV DL, 1
0FC9 80C430               1909             ADD AH, 48
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   40


LOC  OBJ                  LINE     SOURCE

0FCC 88A7E001             1910             MOV TOTAL_PRICE[BX], AH
0FD0 EB2990               1911             JMP END_SUB_LOOP
                          1912             
0FD3                      1913     NORMAL_SUBTRACT:
0FD3 2AE0                 1914             SUB AH, AL
0FD5 2AE2                 1915             SUB AH, DL
0FD7 B200                 1916             MOV DL, 0
0FD9 80C430               1917             ADD AH, 48
0FDC 88A7E001             1918             MOV TOTAL_PRICE[BX], AH
0FE0 EB1990               1919             JMP END_SUB_LOOP
                          1920             
0FE3                      1921     BORROW_SUBTRACT:
0FE3 2AE0                 1922             SUB AH, AL
0FE5 2AE2                 1923             SUB AH, DL
0FE7 80C40A               1924             ADD AH, 10
0FEA B201                 1925             MOV DL, 1
0FEC 80C430               1926             ADD AH, 48
0FEF 88A7E001             1927             MOV TOTAL_PRICE[BX], AH
0FF3 EB0690               1928             JMP END_SUB_LOOP
                          1929             
0FF6                      1930     ADD_DECIMAL_POINT_SUB:
0FF6 C687E0012E           1931             MOV TOTAL_PRICE[BX], '.'
                          1932                     
0FFB                      1933     END_SUB_LOOP:
0FFB 4B                   1934             DEC BX
0FFC E298                 1935             LOOP SUBTRACT_DIGITS
                          1936             
0FFE                      1937     REMOVE_SUB_ZERO:
0FFE 803EE00130           1938             CMP TOTAL_PRICE[0], '0'
1003 7541                 1939             JNE CALCULATE_CHANGE_END
1005 A0E101               1940             MOV AL, TOTAL_PRICE[1]
1008 A2E001               1941             MOV TOTAL_PRICE[0], AL
100B A0E201               1942             MOV AL, TOTAL_PRICE[2]
100E A2E101               1943             MOV TOTAL_PRICE[1], AL
1011 A0E301               1944             MOV AL, TOTAL_PRICE[3]
1014 A2E201               1945             MOV TOTAL_PRICE[2], AL
1017 A0E401               1946             MOV AL, TOTAL_PRICE[4]
101A A2E301               1947             MOV TOTAL_PRICE[3], AL
101D A0E501               1948             MOV AL, TOTAL_PRICE[5]
1020 A2E401               1949             MOV TOTAL_PRICE[4], AL
1023 A0E601               1950             MOV AL, TOTAL_PRICE[6]
1026 A2E501               1951             MOV TOTAL_PRICE[5], AL
1029 A0E701               1952             MOV AL, TOTAL_PRICE[7]
102C A2E601               1953             MOV TOTAL_PRICE[6], AL
102F A0E801               1954             MOV AL, TOTAL_PRICE[8]
1032 A2E701               1955             MOV TOTAL_PRICE[7], AL
1035 A0E901               1956             MOV AL, TOTAL_PRICE[9]
1038 A2E801               1957             MOV TOTAL_PRICE[8], AL
103B C606E90130           1958             MOV TOTAL_PRICE[9], '0'
1040 FE0EEA01             1959             DEC TOTAL_PLACE_VALUE
1044 EBB8                 1960             JMP REMOVE_SUB_ZERO
                          1961             
1046                      1962     CALCULATE_CHANGE_END:   
1046 5A                   1963             POP DX
1047 59                   1964             POP     CX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   41


LOC  OBJ                  LINE     SOURCE

1048 5B                   1965             POP     BX
1049 58                   1966             POP AX
104A CB                   1967             RET
                          1968     CALCULATE_CHANGE ENDP
                          1969     
                          1970     
                          1971     ;Procedure that is called whenever a timer interrupt is received
104B                      1972     TIMER2_ACTION   PROC    FAR
104B FE06C601             1973             INC DS:TIMER_COUNTER_BCD
104F FF06C701             1974         INC DS:TIMER_COUNTER_KBD
                          1975     
1053 833EC70130           1976         CMP DS:TIMER_COUNTER_KBD, TIMER_COUNTER_KBD_LEN
1058 741C                 1977         JE EXECUTE_KBD
                          1978             
105A 803EC60118           1979         CMP DS:TIMER_COUNTER_BCD, TIMER_COUNTER_BCD_LEN
105F 7408                 1980         JE EXECUTE_BCD
                          1981             
1061                      1982     EXECUTE_SOUND:
1061 9A2D11----     R     1983             CALL FAR PTR PLAY_SOUND
1066 EB2D90               1984             JMP T2_END
                          1985     
1069                      1986     EXECUTE_BCD:
1069 C606C60100           1987             MOV DS:TIMER_COUNTER_BCD, 0
106E 9AF710----     R     1988             CALL FAR PTR DISPLAY_7SEGMENT
1073 EB2090               1989             JMP T2_END
                          1990             
1076                      1991     EXECUTE_KBD:
1076 9A2D11----     R     1992             CALL FAR PTR PLAY_SOUND
107B 9A2D11----     R     1993             CALL FAR PTR PLAY_SOUND
1080 C706C7010000         1994             MOV DS:TIMER_COUNTER_KBD, 0
1086 9AC906----     R     1995             CALL FAR PTR KEYPAD_READ
108B 9A2D11----     R     1996             CALL FAR PTR PLAY_SOUND
1090 9A2D11----     R     1997             CALL FAR PTR PLAY_SOUND
                          1998             
1095                      1999     T2_END:
1095 CB                   2000             RET
                          2001     TIMER2_ACTION   ENDP
                          2002     
                          2003     
                          2004     ;Procedure that will reset the 7-segment displays back to zeroes
1096                      2005     CLEAR_7SEGMENT PROC FAR
1096 50                   2006             PUSH AX
1097 53                   2007             PUSH BX
1098 51                   2008             PUSH CX
                          2009     
1099 33DB                 2010             XOR BX, BX
109B B90600               2011             MOV CX, 06
                          2012             
109E                      2013     CLEAR_SINGLE_BCD:
109E 803EC10101           2014             CMP TRIGGER_L_FLAG, 01H
10A3 741B                 2015             JE ASSIGN_BCD_VALUE_TO_L
                          2016             
10A5 803EC20101           2017             CMP TRIGGER_E_FLAG, 01H
10AA 741A                 2018             JE ASSIGN_BCD_VALUE_TO_E
                          2019             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   42


LOC  OBJ                  LINE     SOURCE

10AC 803EC30101           2020             CMP TRIGGER_A_FLAG, 01H
10B1 7419                 2021             JE ASSIGN_BCD_VALUE_TO_A
                          2022             
10B3 803EC40101           2023             CMP TRIGGER_P_FLAG, 01H
10B8 7418                 2024             JE ASSIGN_BCD_VALUE_TO_P
                          2025             
10BA A0AC01               2026             MOV AL, BCD_NUMBERS[0]
10BD EB1990               2027             JMP ASSIGN_TO_BCD
                          2028             
10C0                      2029     ASSIGN_BCD_VALUE_TO_L:
10C0 A0B601               2030             MOV AL, BCD_NUMBERS[10]
10C3 EB1390               2031             JMP ASSIGN_TO_BCD
                          2032             
10C6                      2033     ASSIGN_BCD_VALUE_TO_E:
10C6 A0B701               2034             MOV AL, BCD_NUMBERS[11]
10C9 EB0D90               2035             JMP ASSIGN_TO_BCD
                          2036             
10CC                      2037     ASSIGN_BCD_VALUE_TO_A:
10CC A0B801               2038             MOV AL, BCD_NUMBERS[12]
10CF EB0790               2039             JMP ASSIGN_TO_BCD
                          2040             
10D2                      2041     ASSIGN_BCD_VALUE_TO_P:
10D2 A0B901               2042             MOV AL, BCD_NUMBERS[13] 
10D5 EB0190               2043             JMP ASSIGN_TO_BCD
                          2044             
10D8                      2045     ASSIGN_TO_BCD:
10D8 8887BA01             2046             MOV DS:BCD_DISPLAY[BX], AL
10DC 43                   2047             INC BX
10DD E2BF                 2048             LOOP CLEAR_SINGLE_BCD
                          2049             
10DF C606C10100           2050             MOV TRIGGER_L_FLAG, 00H
10E4 C606C20100           2051             MOV TRIGGER_E_FLAG, 00H
10E9 C606C30100           2052             MOV TRIGGER_A_FLAG, 00H
10EE C606C40100           2053             MOV TRIGGER_P_FLAG, 00H
                          2054     
10F3 59                   2055             POP CX
10F4 5B                   2056             POP BX
10F5 58                   2057             POP AX
10F6 CB                   2058             RET
                          2059     CLEAR_7SEGMENT ENDP
                          2060     
                          2061     
                          2062     ;Procedure that will display digits on the BCD based on the BCD queue
10F7                      2063     DISPLAY_7SEGMENT PROC FAR       
10F7 50                   2064             PUSH AX
10F8 53                   2065             PUSH BX
10F9 51                   2066             PUSH CX
10FA 52                   2067             PUSH DX
                          2068     
10FB 33DB                 2069             XOR BX, BX
                          2070             
                          2071             ; BCD Select: [-] [-] [6] [5] [4] [3] [2] [1]
10FD BA0001               2072             MOV DX, PCS2_ADDR
1100 B0FE                 2073             MOV AL, 0FEH
1102 8A0EC001             2074             MOV CL, DS:CURRENT_BCD
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   43


LOC  OBJ                  LINE     SOURCE

1106 D2C0                 2075             ROL AL, CL
1108 EE                   2076             OUT DX, AL
                          2077             
1109 BA8001               2078             MOV DX, PCS3_ADDR
110C 8A1EC001             2079             MOV BL, CURRENT_BCD
1110 8A87BA01             2080             MOV AL, BCD_DISPLAY[BX]
1114 EE                   2081             OUT DX, AL
                          2082             
1115 FE06C001             2083             INC CURRENT_BCD
1119 803EC00106           2084             CMP CURRENT_BCD, 06H
111E 7403                 2085             JE RESET_CURRENT_BCD
1120 EB0690               2086             JMP DISP_END
                          2087             
1123                      2088     RESET_CURRENT_BCD:
1123 C606C00100           2089             MOV CURRENT_BCD, 00H
                          2090     
1128                      2091     DISP_END:       
1128 5A                   2092             POP DX
1129 59                   2093             POP     CX
112A 5B                   2094             POP     BX
112B 58                   2095             POP AX
112C CB                   2096             RET
                          2097     DISPLAY_7SEGMENT ENDP
                          2098     
                          2099     
                          2100     ;Procedure that will play sounds on the speaker based on the speaker queue
112D                      2101     PLAY_SOUND PROC FAR     
112D 50                   2102             PUSH AX
112E 53                   2103             PUSH BX
112F 56                   2104             PUSH SI
1130 52                   2105             PUSH DX
                          2106             
1131 B8----         R     2107             MOV AX, DATA_SEG
1134 8ED8                 2108         MOV DS, AX
                          2109             
1136 A0A801               2110             MOV AL, SOUND_HEAD
1139 3806A901             2111             CMP SOUND_TAIL, AL
113D 7470                 2112             JE SOUND_END
                          2113             
113F 33DB                 2114             XOR BX, BX
1141 8A1EA801             2115             MOV BL, SOUND_HEAD 
1145 8A9F8801             2116             MOV BL, SOUND_QUEUE[BX]
1149 8B87D000             2117             MOV AX, SOUND_SIZE[BX]
                          2118             
114D 833E860100           2119             CMP SOUND_COUNT, 0000H
1152 7438                 2120             JE ASSIGN_ADDRESS
1154 39068601             2121             CMP SOUND_COUNT, AX
1158 7E38                 2122             JLE SOUND_PLAY
                          2123             
115A FE06A801             2124             INC SOUND_HEAD
115E 803EA80120           2125             CMP SOUND_HEAD, 32
1163 7C05                 2126             JL SOUND_INITIALIZE_CONTINUE
1165 C606A80100           2127             MOV SOUND_HEAD, 00H
                          2128     
116A                      2129     SOUND_INITIALIZE_CONTINUE:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    16:34:10  12/05/;3  PAGE   44


LOC  OBJ                  LINE     SOURCE

116A C70686010000         2130             MOV SOUND_COUNT, 0000H
1170 A0A801               2131             MOV AL, SOUND_HEAD
1173 3806A901             2132             CMP SOUND_TAIL, AL
1177 7436                 2133             JE SOUND_END
                          2134             
1179 33DB                 2135             XOR BX, BX
117B 8A1EA801             2136             MOV BL, SOUND_HEAD
117F 8A9F8801             2137             MOV BL, SOUND_QUEUE[BX]
1183 8B4776               2138             MOV AX, SOUND_OFFSET[BX]
1186 A38401               2139             MOV SOUND_ADDRESS, AX
1189 EB0790               2140             JMP SOUND_PLAY
                          2141             
118C                      2142     ASSIGN_ADDRESS:
118C 8B4776               2143             MOV AX, SOUND_OFFSET[BX]
118F A38401               2144             MOV SOUND_ADDRESS, AX
                          2145             
1192                      2146     SOUND_PLAY:                             
1192 8B368401             2147             MOV SI, SOUND_ADDRESS
1196 8B872A01             2148             MOV AX, EEPROM_START[BX]
119A 8ED8                 2149             MOV DS, AX
                          2150             
119C 8A04                 2151             MOV AL, [SI]
119E BA0002               2152             MOV DX, PCS4_ADDR
11A1 EE                   2153             OUT DX, AL
                          2154                     
11A2 B8----         R     2155             MOV AX, DATA_SEG
11A5 8ED8                 2156         MOV DS, AX
                          2157             
11A7 FF068601             2158             INC SOUND_COUNT
11AB FF068401             2159             INC SOUND_ADDRESS
                          2160     
11AF                      2161     SOUND_END:      
11AF 5A                   2162             POP DX
11B0 5E                   2163             POP     SI
11B1 5B                   2164             POP     BX
11B2 58                   2165             POP AX
11B3 CB                   2166             RET
                          2167     PLAY_SOUND ENDP
                          2168     
                          2169     
----                      2170     CODE_SEG        ENDS
                          2171     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
