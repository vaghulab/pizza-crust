8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TIMER
OBJECT MODULE PLACED IN TIMER.OBJ
ASSEMBLER INVOKED BY:  F:\ASM86.EXE TIMER.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $MOD186
                             2 +1  $EP
                             3     NAME TIMER
                             4     
                             5     ; =========================================================================
                             6     ; Main Timer Driver Program
                             7     ; Author: Vaghul Aditya Balaji
                             8     
                             9     ; This file contains proprietary information and cannot be copied 
                            10     ; or distributed without prior permission from the author.
                            11     ; =========================================================================
                            12     
                            13     public  serial_rec_action, timer2_action
                            14     extrn   print_char:far, print_2hex:far, iodefine:far
                            15     extrn   set_timer2:far
                            16     
                            17     ;IO Setup for 80C188 
  FFA0                      18             UMCR    EQU    0FFA0H ; Upper Memory Control Register
  FFA2                      19             LMCR    EQU    0FFA2H ; Lower Memory control Register         
  FFA4                      20             PCSBA   EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA6                      21             MMCS    EQU    0FFA6H ; Used for controlling the MCS pins on the 8088
  FFA8                      22             MPCS    EQU    0FFA8H ; MMCS and PCS Alter Control Register
                            23             
  0080                      24             PORTA  EQU    0080H
  0081                      25             PORTB  EQU    0081H
  0082                      26             PORTC  EQU    0082H
  0083                      27             CWR    EQU    0083H
                            28             
  FF38                      29             INT0CON  EQU   0FF38H
  FF22                      30             EOI      EQU   0FF22H
  FF28                      31             IMASK    EQU   0FF28H
                            32             
  0100                      33             PCS2_ADDR EQU 100H ; Used for controlling which BCD displays the digit
  0180                      34             PCS3_ADDR EQU 180H ; Used for controlling the pattern that is displayed on th
                                   e BCDs
  0200                      35             PCS4_ADDR EQU 200H ; Used for controlling the DAC chip of the speaker system
                            36             
  0018                      37             TIMER_COUNTER_BCD_LEN   EQU 24
  0030                      38             TIMER_COUNTER_KBD_LEN   EQU 48
  0604                      39             TIMEOUT_COUNTER_LEN             EQU 1540
                            40             
                            41             ;Sound Mappings for playing on the speaker
  002C                      42             SOUND_SILENCE                    EQU  44
  001E                      43             SOUND_AND                        EQU  30
  0021                      44             SOUND_DOLLARS                    EQU  33
  0022                      45             SOUND_CENTS                      EQU  34
  001C                      46             SOUND_HUNDRED                    EQU  28
  001D                      47             SOUND_THOUSAND                   EQU  29
  0023                      48             SOUND_GOOD                       EQU  35
  0025                      49             SOUND_AFTERNOON                  EQU  37
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE    2


LOC  OBJ                  LINE     SOURCE

  0028                      50             SOUND_PURCHASED                  EQU  40
  001F                      51             SOUND_COST                               EQU  31
  0029                      52             SOUND_YOURCHANGEIS               EQU  41
  002A                      53             SOUND_THANKYOUANDGOODBYE EQU  42        
                            54             
                            55             ;Serial Communication Mappings
  0000                      56             NETWORK_DISABLE             EQU  00
  0001                      57             NETWORK_ENABLE              EQU  01     
  0002                      58             NETWORK_END_TRANSACTION     EQU  02
  0003                      59             NETWORK_LOGOUT                      EQU  03
  0004                      60             NETWORK_CANCEL_TRANSACTION  EQU  04
                            61             
                            62             ;Cash Register State Mappings
  0000                      63             WAITING_FOR_LOGIN     EQU  00
  0001                      64             ENTER_LOGIN_USERNAME  EQU  01
  0002                      65             WAITING_FOR_BARCODE   EQU  02
  0003                      66             ENTER_BARCODE         EQU  03
  0004                      67             ENTER_QUANTITY        EQU  04
  0005                      68             DISPLAY_ITEM_PRICE    EQU  05
  0006                      69             CANCEL_ITEM                   EQU  06
  0007                      70             END_TRANSACTION           EQU  07
  0008                      71             CHANGE_PAY                        EQU  08
                            72             
                            73             ;Keypad Character Mappings
  0000                      74             KBD_CHAR_RESET                 EQU  00
  005F                      75             KBD_BACKSPACE                  EQU  '_'
  007C                      76             KBD_ENTER                      EQU  '|'
  0041                      77             KBD_TRIGGER_LOGIN              EQU  'A'
  0042                      78             KBD_TRIGGER_TRANSACTION        EQU  'B'
  0043                      79             KBD_TRIGGER_NEW_ITEM               EQU  'C'
  0044                      80             KBD_TRIGGER_CANCEL_ITEM            EQU  'D'
  0045                      81             KBD_TRIGGER_CANCEL_TRANSACTION EQU  'E'
  0046                      82             KBD_TRIGGER_END_TRANSACTION    EQU  'F'
  0047                      83             KBD_TRIGGER_MODIFY                         EQU  'G'
  0048                      84             KBD_TRIGGER_DISPLAY_CURRENT    EQU  'H'
  0049                      85             KBD_TRIGGER_CHANGE_PAY         EQU  'I'
  004A                      86             KBD_TRIGGER_REFUND                         EQU  'J'
  004C                      87             KBD_TRIGGER_ANDROID                        EQU  'L'
                            88             
                            89             ;Keyboard Input Constants
  0006                      90             KBD_USERNAME_LENGTH  EQU  06
  0008                      91             KBD_BARCODE_LENGTH   EQU  08
  0003                      92             KBD_QUANTITY_LENGTH  EQU  03
  0008                      93             KBD_CHANGE_LENGTH    EQU  08
  0000                      94             KBD_OLD_INPUT        EQU  00
  0001                      95             KBD_NEW_INPUT        EQU  01
                            96     
                            97             
----                        98     STACK_SEG       SEGMENT
0000 (256                   99             DB      256 DUP(?)
     ??
     )
0100                       100             TOS     LABEL   WORD
----                       101     STACK_SEG       ENDS
                           102     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE    3


LOC  OBJ                  LINE     SOURCE

                           103     
----                       104     DATA_SEG        SEGMENT
0000 0A                    105             TIMER2_MESS           DB        10,13,'TIMER2 INTERRUPT    '
0001 0D
0002 54494D45523220
     494E5445525255
     505420202020
0016 2F                    106             T_COUNT               DB        2FH
0017 2F                    107             T_COUNT_SET           DB        2FH
0018 0A                    108             REC_MESS              DB        10,13,'Period of timer =     '
0019 0D
001A 506572696F6420
     6F662074696D65
     72203D20202020
     20
0030 43323237315D          109             CASH_REGISTER_ID  DB    'C2271]'
                           110             
                           111             ;Keypad Variables       
0036 7C                    112             KEYS_PART1           DB   '|','0','_','L','K','J','9','8','7','I','H','G' 
0037 30
0038 5F
0039 4C
003A 4B
003B 4A
003C 39
003D 38
003E 37
003F 49
0040 48
0041 47
0042 36                    113             KEYS_PART2           DB   '6','5','4','F','E','D','3','2','1','C','B','A'
0043 35
0044 34
0045 46
0046 45
0047 44
0048 33
0049 32
004A 31
004B 43
004C 42
004D 41
004E 00                    114             KEY_FLAG             DB   00H ;This variable is used for controlling multiple
                                    detections of the same key-press inside the keypad loop
004F 00                    115             KBD_NUM_INPUT        DB   00H ;This variable stores the numerical input from 
                                   the keyboard
0050 00                    116             KBD_CHAR_INPUT       DB   00H ;This variable stores the character input from 
                                   the keyboard
0051 00                    117             KBD_INPUT_STATE      DB   00H
0052 00                    118             CHANGE_PLACE_VALUE   DB   00H
0053 (10                   119             CHANGE_PRICE         DB   10 DUP('0')
     30
     )
005D (6                    120             USER_USERNAME        DB   6 DUP('0')
     30
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE    4


LOC  OBJ                  LINE     SOURCE

     )
0063 (6                    121             USER_PASSWORD        DB   6 DUP('0')
     30
     )
0069 (8                    122             USER_BARCODE         DB   8 DUP('0')
     30
     )
0071 (3                    123             USER_QUANTITY        DB   3 DUP('0')
     30
     )
0074 00                    124             USER_INPUT_LENGTH    DB   00H   
0075 00                    125             CHANGE_SUCCESS_FLAG  DB  00H
                           126             
                           127             ;Sound Variables
0076 0000                  128             SOUND_OFFSET   DW   0000H, 1269H, 2121H, 2EA9H, 3BD3H, 478DH, 546EH, 6608H, 7
                                   53DH, 7C41H
0078 6912
007A 2121
007C A92E
007E D33B
0080 8D47
0082 6E54
0084 0866
0086 3D75
0088 417C
008A 0B8D                  129                                        DW   8D0BH, 98C6H, 0AAF8H, 0BA1EH, 0CA87H, 0DB3CH,
                                    9D67H, 055BH, 1E09H, 32B8H
008C C698
008E F8AA
0090 1EBA
0092 87CA
0094 3CDB
0096 679D
0098 5B05
009A 091E
009C B832
009E 554A                  130                                        DW   4A55H, 567AH, 60D6H, 6E3CH, 7A8BH, 8BFAH, 9E5
                                   BH, 0AA63H, 0B8D6H, 0C3F7H
00A0 7A56
00A2 D660
00A4 3C6E
00A6 8B7A
00A8 FA8B
00AA 5B9E
00AC 63AA
00AE D6B8
00B0 F7C3
00B2 67CF                  131                                        DW   0CF67H, 0D6EAH, 0E31DH, 0F49EH, 06C9H, 13A6H,
                                    1C5FH, 29DAH, 408FH, 5293H
00B4 EAD6
00B6 1DE3
00B8 9EF4
00BA C906
00BC A613
00BE 5F1C
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE    5


LOC  OBJ                  LINE     SOURCE

00C0 DA29
00C2 8F40
00C4 9352
00C6 3466                  132                                        DW   6634H, 83C7H, 0A00BH, 0C7B2H, 0CAD7H
00C8 C783
00CA 0BA0
00CC B2C7
00CE D7CA
                           133                                
00D0 6812                  134             SOUND_SIZE         DW   1268H, 0EB7H, 0D87H, 0D29H, 0BB9H, 0CE0H, 1199H, 0F34
                                   H, 0703H, 10C9H
00D2 B70E
00D4 870D
00D6 290D
00D8 B90B
00DA E00C
00DC 9911
00DE 340F
00E0 0307
00E2 C910
00E4 BA0B                  135                                        DW   0BBAH, 1231H, 0F25H, 1068H, 10B4H, 122AH, 175
                                   3H, 18ADH, 14AEH, 179CH
00E6 3112
00E8 250F
00EA 6810
00EC B410
00EE 2A12
00F0 5317
00F2 AD18
00F4 AE14
00F6 9C17
00F8 240C                  136                                        DW   0C24H, 0A5BH, 0D65H, 0C4EH, 116EH, 1260H, 0C0
                                   7H, 0E72H, 0B20H, 0B6FH
00FA 5B0A
00FC 650D
00FE 4E0C
0100 6E11
0102 6012
0104 070C
0106 720E
0108 200B
010A 6F0B
010C 8207                  137                                        DW   0782H, 0C32H, 1180H, 122AH, 0CDCH, 08B8H, 0D7
                                   AH, 16B4H, 1203H, 13A0H
010E 320C
0110 8011
0112 2A12
0114 DC0C
0116 B808
0118 7A0D
011A B416
011C 0312
011E A013
0120 921D                  138                                        DW   1D92H, 1C43H, 27A6H, 0324H, 031FH       
                                                         
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE    6


LOC  OBJ                  LINE     SOURCE

0122 431C
0124 A627
0126 2403
0128 1F03
                           139     
012A 0040                  140             EEPROM_START   DW   4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4
                                   000H, 4000H
012C 0040
012E 0040
0130 0040
0132 0040
0134 0040
0136 0040
0138 0040
013A 0040
013C 0040
013E 0040                  141                                        DW   4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 450
                                   0H, 5000H, 5000H, 5000H
0140 0040
0142 0040
0144 0040
0146 0040
0148 0040
014A 0045
014C 0050
014E 0050
0150 0050
0152 0050                  142                                        DW   5000H, 5000H, 5000H, 5000H, 5000H, 5000H, 500
                                   0H, 5000H, 5000H, 5000H 
0154 0050
0156 0050
0158 0050
015A 0050
015C 0050
015E 0050
0160 0050
0162 0050
0164 0050
0166 0050                  143                                        DW   5000H, 5000H, 5000H, 5000H, 6000H, 6000H, 600
                                   0H, 6000H, 6000H, 6000H
0168 0050
016A 0050
016C 0050
016E 0060
0170 0060
0172 0060
0174 0060
0176 0060
0178 0060
017A 0060                  144                                        DW   6000H, 6000H, 6000H, 6000H, 6000H       
                                                         
017C 0060
017E 0060
0180 0060
0182 0060
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE    7


LOC  OBJ                  LINE     SOURCE

                           145                                        
0184 0000                  146             SOUND_ADDRESS        DW   0000H
0186 0000                  147             SOUND_COUNT          DW   0000H
0188 (32                   148             SOUND_QUEUE          DB   32 DUP(?)
     ??
     )
01A8 00                    149             SOUND_HEAD           DB   00H
01A9 00                    150             SOUND_TAIL           DB   00H
01AA 00                    151             SOUND_INDEX_INPUT    DB   00H
01AB 00                    152             SAY_SOUND_ONCE_FLAG  DB   00H
                           153             
                           154             ;7-Segment Variables
                           155             ; BCD Digit Mapping:    0        1        2        3    4    5    6    7    8
                                       9    L     E    A    P
01AC 5F                    156         BCD_NUMBERS        DB  5FH, 50H, 6DH, 79H, 72H, 3BH, 3EH, 51H, 7FH, 73H, 0EH, 02F
                                   H, 77H, 67H                                                
01AD 50
01AE 6D
01AF 79
01B0 72
01B1 3B
01B2 3E
01B3 51
01B4 7F
01B5 73
01B6 0E
01B7 2F
01B8 77
01B9 67
01BA 0E                    157             BCD_DISPLAY            DB  0EH, 0EH, 0EH, 0EH, 0EH, 0EH
01BB 0E
01BC 0E
01BD 0E
01BE 0E
01BF 0E
01C0 00                    158             CURRENT_BCD        DB  00H
01C1 00                    159             TRIGGER_L_FLAG     DB  00H 
01C2 00                    160             TRIGGER_E_FLAG     DB  00H 
01C3 00                    161             TRIGGER_A_FLAG     DB  00H 
01C4 00                    162             TRIGGER_P_FLAG     DB  00H 
01C5 00                    163             SHOW_BCD_ONCE_FLAG DB  00H
                           164             
                           165             ;Timer Variables
01C6 00                    166             TIMER_COUNTER_BCD   DB  00H
01C7 0000                  167         TIMER_COUNTER_KBD   DW  0000H
01C9 0000                  168             TIMEOUT_COUNTER         DW  0000H
01CB 00                    169             TIMEOUT_SEC_COUNT   DB  00H
                           170             
                           171             ;Serial Variables
01CC 00                    172             START_READ            DB  00H
01CD 00                    173             START_RECEIVE_PRICE   DB  00H
01CE 00                    174             SERIAL_INDEX          DB  00H
01CF (10                   175             ITEM_PRICE            DB  10 DUP('0')
     30
     )
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE    8


LOC  OBJ                  LINE     SOURCE

01D9 00                    176             PLACE_VALUE           DB  00H
01DA 00                    177             TMP_PLACE_VALUE       DB  00H
01DB (2                    178             TWO_DIGIT_SOUND       DB  2 DUP(?)
     ??
     )
01DD 00                    179             AND_FLAG              DB  00H
01DE 00                    180             CENTS_AND_FLAG        DB  00H
01DF 00                    181             THOUSAND_FLAG         DB  00H
01E0 (10                   182             TOTAL_PRICE           DB  10 DUP('0')
     30
     )
01EA 00                    183             TOTAL_PLACE_VALUE     DB  00H
01EB 00                    184             CASH_REGISTER_START   DB  00H
01EC 00                    185             CASH_REGISTER_FLAG    DB  00H
01ED 00                    186             NETWORK_STATE         DB  00H
01EE 00                    187             CASH_REGISTER_STATE   DB  WAITING_FOR_LOGIN
01EF 00                    188             PURCHASE_ITEM_COUNT   DB  00H
01F0 00                    189             CHANGE_DONE_FLAG      DB  00H
01F1 00                    190             SWAP_JUMP_FLAG            DB  00H
01F2 00                    191             MODIFY_ITEM_FLAG      DB  00H
01F3 00                    192             USERNAME_FLAG             DB  00H
01F4 00                    193             REFUND_FLAG                       DB  00H
01F5 00                    194             ANDROID_FLAG          DB  00H
----                       195     DATA_SEG        ENDS
                           196     
                           197             
----                       198     CODE_SEG        SEGMENT
                           199     
                           200             PUBLIC          START
                           201     
                           202     ASSUME  CS:CODE_SEG, SS:STACK_SEG, DS:DATA_SEG
                           203     
0000                       204     START:
                           205     ;initialize stack area
0000 B8----         R      206             MOV     AX,STACK_SEG            
0003 8ED0                  207             MOV     SS,AX
0005 368B260001            208             MOV     SP,TOS
                           209                     
000A B8----         R      210             MOV AX, DATA_SEG
000D 8ED8                  211             MOV DS, AX
                           212     
                           213     ; Initialize the on-chip peripherals
000F 9A0000----     E      214             CALL FAR PTR IODEFINE
                           215             
                           216     ; Initialize MPCS to MAP peripheral to IO address
                           217             
0014 BAA8FF                218             MOV  DX, MPCS  
0017 B88320                219             MOV  AX, 2083H 
001A EF                    220             OUT  DX, AX
                           221             
001B BAA6FF                222             MOV  DX, MMCS ; send MCS start address to 40000
001E B80340                223             MOV  AX, 4003H 
0021 EF                    224             OUT  DX, AX
                           225     
                           226     ; PCSBA initial, set the parallel port start from 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE    9


LOC  OBJ                  LINE     SOURCE

0022 BAA4FF                227             MOV DX, PCSBA
0025 B80300                228             MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
0028 EF                    229             OUT DX, AX
                           230     
                           231     ; Initialize LMCS 
0029 BAA2FF                232         MOV DX, LMCR
002C B8C401                233         MOV AX, 01C4H  ; Starting address 1FFFH, 8K, No waits, last should be 5H for 1 wa
                                   its      
002F EF                    234         OUT DX, AX
                           235             
0030 B089                  236             MOV AL, 89H ;mode 0, [A-out(for led)] [B - out, C-in (for reading keypad))]
0032 BA8300                237             MOV DX, CWR ; load CWR to DX
0035 EE                    238             OUT DX, AL      ;load CWR value from AL
                           239             
                           240     ; ######################### Start of User Main Routine ###########################
                           241       
0036 9A0000----     E      242         CALL FAR PTR set_timer2
003B FB                    243         STI
                           244                     
003C                       245             NEXT:
003C EBFE                  246                     JMP NEXT
                           247             
                           248     ; ######################### End of User Main Routine #############################
                                      
                           249     
                           250     
                           251     ;Procedure to change the state of the cash register according to user's input
003E                       252     CHANGE_CASHIER_STATE PROC FAR   
003E 50                    253             PUSH AX
003F 53                    254             PUSH BX
0040 51                    255             PUSH CX
                           256     
0041 803EEE0100            257             CMP CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0046 743B                  258             JE CASHIER_WAITING_FOR_LOGIN
                           259             
0048 803EEE0101            260             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
004D 7448                  261             JE CASHIER_ENTER_USERNAME       
                           262             
004F 803EEE0102            263             CMP CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0054 7469                  264             JE FIRST_JUMP_WAITING_FOR_BARCODE
                           265             
0056 803EEE0103            266             CMP CASH_REGISTER_STATE, ENTER_BARCODE
005B 7465                  267             JE FIRST_JUMP_ENTER_BARCODE
                           268             
005D 803EEE0104            269             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0062 7461                  270             JE FIRST_JUMP_ENTER_QUANTITY
                           271             
0064 803EEE0105            272             CMP CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0069 745D                  273             JE FIRST_JUMP_DISPLAY_ITEM_PRICE
                           274             
006B 803EEE0106            275             CMP CASH_REGISTER_STATE, CANCEL_ITEM
0070 7459                  276             JE FIRST_JUMP_CANCEL_ITEM
                           277             
0072 803EEE0108            278             CMP CASH_REGISTER_STATE, CHANGE_PAY
0077 7458                  279             JE FIRST_JUMP_CHANGE_PAY
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   10


LOC  OBJ                  LINE     SOURCE

                           280             
0079 803EEE0107            281             CMP CASH_REGISTER_STATE, END_TRANSACTION
007E 744E                  282             JE FIRST_JUMP_END_TRANSACTION
                           283     
0080 EB3A90                284             JMP FIRST_JUMP_STATE_END
                           285     
                           286     ;Waiting for user to press the login button     
0083                       287     CASHIER_WAITING_FOR_LOGIN:
0083 803E500041            288             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
0088 7532                  289             JNE FIRST_JUMP_STATE_END
008A C606EE0101            290             MOV CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
008F 9A1806----     R      291             CALL FAR PTR STATE_TRANSITION
0094 EB2690                292             JMP FIRST_JUMP_STATE_END
                           293             
                           294     ;User is now entering his/her login credentials
0097                       295     CASHIER_ENTER_USERNAME:
0097 803E500000            296             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
009C 7477                  297             JE USERNAME_CHECK_NUMBER
009E 803E500041            298             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
00A3 752F                  299             JNE USERNAME_CHECK_BACKSPACE
00A5 C606C10101            300             MOV TRIGGER_L_FLAG, 01H
00AA C606EE0100            301             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
00AF C606F30100            302             MOV USERNAME_FLAG, 00H
00B4 9A1806----     R      303             CALL FAR PTR STATE_TRANSITION
00B9 E98504                304             JMP CASHIER_STATE_END   
00BC                       305     FIRST_JUMP_STATE_END:
00BC E98204                306             JMP CASHIER_STATE_END
00BF                       307     FIRST_JUMP_WAITING_FOR_BARCODE:
00BF EB6390                308             JMP CASHIER_WAITING_FOR_BARCODE
00C2                       309     FIRST_JUMP_ENTER_BARCODE:
00C2 E9B500                310             JMP CASHIER_ENTER_BARCODE
00C5                       311     FIRST_JUMP_ENTER_QUANTITY:
00C5 E94A01                312             JMP CASHIER_ENTER_QUANTITY
00C8                       313     FIRST_JUMP_DISPLAY_ITEM_PRICE:
00C8 E9C501                314             JMP CASHIER_DISPLAY_ITEM_PRICE
00CB                       315     FIRST_JUMP_CANCEL_ITEM:
00CB E90E03                316             JMP CASHIER_CANCEL_ITEM
00CE                       317     FIRST_JUMP_END_TRANSACTION:
00CE E96B03                318             JMP CASHIER_END_TRANSACTION
00D1                       319     FIRST_JUMP_CHANGE_PAY:
00D1 E98B03                320             JMP CASHIER_CHANGE_PAY
00D4                       321     USERNAME_CHECK_BACKSPACE:
00D4 803E50005F            322             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
00D9 7508                  323             JNE USERNAME_CHECK_ENTER
00DB 9A2D06----     R      324             CALL FAR PTR BACKSPACE_KEYPRESS
00E0 E95E04                325             JMP CASHIER_STATE_END
00E3                       326     USERNAME_CHECK_ENTER:
00E3 803E50007C            327             CMP KBD_CHAR_INPUT, KBD_ENTER
00E8 752B                  328             JNE USERNAME_CHECK_NUMBER
00EA 803E740006            329             CMP USER_INPUT_LENGTH, KBD_USERNAME_LENGTH
00EF 75CB                  330             JNE FIRST_JUMP_STATE_END
00F1 803EF30101            331             CMP USERNAME_FLAG, 01H
00F6 750C                  332             JNE CONTINUE_TO_PASSWORD
00F8 C606ED0101            333             MOV NETWORK_STATE, NETWORK_ENABLE
00FD 9A1806----     R      334             CALL FAR PTR STATE_TRANSITION
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   11


LOC  OBJ                  LINE     SOURCE

0102 EBB8                  335             JMP FIRST_JUMP_STATE_END
0104                       336     CONTINUE_TO_PASSWORD:
0104 C606F30101            337             MOV USERNAME_FLAG, 01H
0109 C606EE0101            338             MOV CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
010E 9A1806----     R      339             CALL FAR PTR STATE_TRANSITION
0113 EBA7                  340             JMP FIRST_JUMP_STATE_END
0115                       341     USERNAME_CHECK_NUMBER:  
0115 803E740006            342             CMP USER_INPUT_LENGTH, KBD_USERNAME_LENGTH
011A 74A0                  343             JE FIRST_JUMP_STATE_END
011C 9A4F05----     R      344             CALL FAR PTR GET_USER_DIGIT
0121                       345     SECOND_JUMP_STATE_END:
0121 E91D04                346             JMP CASHIER_STATE_END   
                           347             
                           348     ;Waiting for the user to begin a new transaction
0124                       349     CASHIER_WAITING_FOR_BARCODE:
0124 803E500000            350             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0129 74F6                  351             JE SECOND_JUMP_STATE_END
012B 803E500041            352             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
0130 7517                  353             JNE BARCODE_CHECK_TRANSACTION
0132 C606C10101            354             MOV TRIGGER_L_FLAG, 01H
0137 C606EE0100            355             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
013C C606ED0103            356             MOV NETWORK_STATE, NETWORK_LOGOUT
0141 9A1806----     R      357             CALL FAR PTR STATE_TRANSITION
0146 E9F803                358             JMP CASHIER_STATE_END   
0149                       359     BARCODE_CHECK_TRANSACTION:
0149 803E500042            360             CMP KBD_CHAR_INPUT, KBD_TRIGGER_TRANSACTION
014E 7512                  361             JNE BARCODE_REFUND
0150 C606EE0103            362             MOV CASH_REGISTER_STATE, ENTER_BARCODE
0155 9A1806----     R      363             CALL FAR PTR STATE_TRANSITION
015A 9AB605----     R      364             CALL FAR PTR CLEAR_ALL_VARIABLES
015F E9DF03                365             JMP CASHIER_STATE_END
0162                       366     BARCODE_REFUND:
0162 803E50004A            367             CMP KBD_CHAR_INPUT, KBD_TRIGGER_REFUND
0167 75B8                  368             JNE SECOND_JUMP_STATE_END
0169 C606F40101            369             MOV REFUND_FLAG, 01H
016E C606EE0103            370             MOV CASH_REGISTER_STATE, ENTER_BARCODE
0173 9A1806----     R      371             CALL FAR PTR STATE_TRANSITION
0178 EBA7                  372             JMP SECOND_JUMP_STATE_END
                           373             
                           374     ;User is now entering the barcode
017A                       375     CASHIER_ENTER_BARCODE:
017A 803E500000            376             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
017F 7450                  377             JE FIRST_JMP_BARCODE_CHECK_NUMBER
0181 803E50005F            378             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
0186 7508                  379             JNE BARCODE_CANCEL_ITEM
0188 9A2D06----     R      380             CALL FAR PTR BACKSPACE_KEYPRESS
018D E9B103                381             JMP CASHIER_STATE_END
0190                       382     BARCODE_CANCEL_ITEM:
0190 803E500044            383             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
0195 753D                  384             JNE BARCODE_CHECK_ENTER
0197 803EF40101            385             CMP REFUND_FLAG, 01H
019C 7517                  386             JNE NORMAL_CANCEL_BARCODE
019E C606EE0102            387             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
01A3 C606F40100            388             MOV REFUND_FLAG, 00H
01A8 C606C40101            389             MOV TRIGGER_P_FLAG, 01H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   12


LOC  OBJ                  LINE     SOURCE

01AD 9A1806----     R      390             CALL FAR PTR STATE_TRANSITION
01B2 E98C03                391             JMP CASHIER_STATE_END
01B5                       392     NORMAL_CANCEL_BARCODE:
01B5 C606EE0105            393             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
01BA C606F20100            394             MOV MODIFY_ITEM_FLAG, 00H
01BF C606C50101            395             MOV SHOW_BCD_ONCE_FLAG, 01H
01C4 C606AB0101            396             MOV SAY_SOUND_ONCE_FLAG, 01H
01C9 9A1806----     R      397             CALL FAR PTR STATE_TRANSITION
01CE E97003                398             JMP CASHIER_STATE_END
01D1                       399     FIRST_JMP_BARCODE_CHECK_NUMBER:
01D1 EB3090                400             JMP BARCODE_CHECK_NUMBER
01D4                       401     BARCODE_CHECK_ENTER:
01D4 803E50007C            402             CMP KBD_CHAR_INPUT, KBD_ENTER
01D9 7528                  403             JNE BARCODE_CHECK_NUMBER
01DB 803E740008            404             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
01E0 752D                  405             JNE THIRD_JUMP_STATE_END
01E2 803EF40101            406             CMP REFUND_FLAG, 01H
01E7 750D                  407             JNE NORMAL_BARCODE_ENTER
01E9 C606ED0101            408             MOV NETWORK_STATE, NETWORK_ENABLE
01EE 9A1806----     R      409             CALL FAR PTR STATE_TRANSITION
01F3 E94B03                410             JMP CASHIER_STATE_END
01F6                       411     NORMAL_BARCODE_ENTER:
01F6 C606EE0104            412             MOV CASH_REGISTER_STATE, ENTER_QUANTITY
01FB 9A1806----     R      413             CALL FAR PTR STATE_TRANSITION
0200 E93E03                414             JMP CASHIER_STATE_END
0203                       415     BARCODE_CHECK_NUMBER:   
0203 803E740008            416             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
0208 7405                  417             JE THIRD_JUMP_STATE_END
020A 9A4F05----     R      418             CALL FAR PTR GET_USER_DIGIT
020F                       419     THIRD_JUMP_STATE_END:
020F E92F03                420             JMP CASHIER_STATE_END   
                           421     
                           422     ;User is now entering the quantity      
0212                       423     CASHIER_ENTER_QUANTITY:
0212 803E500000            424             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0217 7468                  425             JE QUANTITY_CHECK_NUMBER
0219 803E50005F            426             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
021E 7508                  427             JNE QUANTITY_CANCEL_ITEM
0220 9A2D06----     R      428             CALL FAR PTR BACKSPACE_KEYPRESS
0225 E91903                429             JMP CASHIER_STATE_END
0228                       430     QUANTITY_CANCEL_ITEM:
0228 803E500044            431             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
022D 751C                  432             JNE QUANTITY_CHECK_ANDROID
022F C606EE0105            433             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0234 C606F20100            434             MOV MODIFY_ITEM_FLAG, 00H
0239 C606C50101            435             MOV SHOW_BCD_ONCE_FLAG, 01H
023E C606AB0101            436             MOV SAY_SOUND_ONCE_FLAG, 01H
0243 9A1806----     R      437             CALL FAR PTR STATE_TRANSITION
0248 E9F602                438             JMP CASHIER_STATE_END
024B                       439     QUANTITY_CHECK_ANDROID:
024B 803E50004C            440             CMP KBD_CHAR_INPUT, KBD_TRIGGER_ANDROID
0250 750F                  441             JNE QUANTITY_CHECK_ENTER
0252 803E740000            442             CMP USER_INPUT_LENGTH, 00H
0257 74B6                  443             JE THIRD_JUMP_STATE_END
0259 C606F50101            444             MOV ANDROID_FLAG, 01H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   13


LOC  OBJ                  LINE     SOURCE

025E EB0F90                445             JMP BYPASS_ANDROID_END
0261                       446     QUANTITY_CHECK_ENTER:
0261 803E50007C            447             CMP KBD_CHAR_INPUT, KBD_ENTER
0266 7519                  448             JNE QUANTITY_CHECK_NUMBER
0268 803E740000            449             CMP USER_INPUT_LENGTH, 00H
026D 74A0                  450             JE THIRD_JUMP_STATE_END
026F                       451     BYPASS_ANDROID_END:
026F C606ED0101            452             MOV NETWORK_STATE, NETWORK_ENABLE
0274 C606500000            453             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
0279 9A8510----     R      454             CALL FAR PTR CLEAR_7SEGMENT
027E E9C002                455             JMP CASHIER_STATE_END
0281                       456     QUANTITY_CHECK_NUMBER:  
0281 803E740003            457             CMP USER_INPUT_LENGTH, KBD_QUANTITY_LENGTH
0286 7405                  458             JE FOURTH_JUMP_STATE_END
0288 9A4F05----     R      459             CALL FAR PTR GET_USER_DIGIT
028D                       460     FOURTH_JUMP_STATE_END:
028D E9B102                461             JMP CASHIER_STATE_END
                           462     
                           463     ;Cash register is now displaying the item price after receiving it via serial
0290                       464     CASHIER_DISPLAY_ITEM_PRICE:
0290 803EC50101            465             CMP SHOW_BCD_ONCE_FLAG, 01H
0295 740A                  466             JE CONTINUE_WITH_SOUND_PRICE
0297 C606C50101            467             MOV SHOW_BCD_ONCE_FLAG, 01H
029C 9A6806----     R      468             CALL FAR PTR DISPLAY_PRICE_ON_BCD
02A1                       469     CONTINUE_WITH_SOUND_PRICE:
02A1 803EAB0101            470             CMP SAY_SOUND_ONCE_FLAG, 01H
02A6 7427                  471             JE PRICE_CHECK_NEW_ITEM
02A8 FE06EF01              472             INC PURCHASE_ITEM_COUNT
02AC C606AB0101            473             MOV SAY_SOUND_ONCE_FLAG, 01H
02B1 C606AA011F            474             MOV SOUND_INDEX_INPUT, SOUND_COST ;To say the word 'cost'
02B6 9AE90B----     R      475             CALL FAR PTR ADD_SOUND_INDEX
02BB C606AA012C            476             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
02C0 9AE90B----     R      477             CALL FAR PTR ADD_SOUND_INDEX
02C5 9A120C----     R      478             CALL FAR PTR POPULATE_SOUND_QUEUE
02CA 9AE40D----     R      479             CALL FAR PTR ADD_INCOMING_PRICE
02CF                       480     PRICE_CHECK_NEW_ITEM:
02CF 803E500043            481             CMP KBD_CHAR_INPUT, KBD_TRIGGER_NEW_ITEM
02D4 7517                  482             JNE PRICE_CANCEL_TRANSACTION
02D6 C606EE0103            483             MOV CASH_REGISTER_STATE, ENTER_BARCODE
02DB C606AB0100            484             MOV SAY_SOUND_ONCE_FLAG, 00H
02E0 C606C50100            485             MOV SHOW_BCD_ONCE_FLAG, 00H
02E5 9A1806----     R      486             CALL FAR PTR STATE_TRANSITION
02EA E95402                487             JMP CASHIER_STATE_END
02ED                       488     PRICE_CANCEL_TRANSACTION:       
02ED 803E500045            489             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
02F2 751C                  490             JNE PRICE_VIEW_CURRENT
02F4                       491     BYPASS_CANCEL_TRANSACTION:
02F4 C606EE0102            492             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
02F9 C606C40101            493             MOV TRIGGER_P_FLAG, 01H
02FE 9A1806----     R      494             CALL FAR PTR STATE_TRANSITION
0303 9AB605----     R      495             CALL FAR PTR CLEAR_ALL_VARIABLES
0308 C606ED0104            496             MOV NETWORK_STATE, NETWORK_CANCEL_TRANSACTION
030D E93102                497             JMP CASHIER_STATE_END
0310                       498     PRICE_VIEW_CURRENT:
0310 803E500048            499             CMP KBD_CHAR_INPUT, KBD_TRIGGER_DISPLAY_CURRENT
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   14


LOC  OBJ                  LINE     SOURCE

0315 7514                  500             JNE PRICE_CANCEL_ITEM
0317 803EEF0100            501             CMP PURCHASE_ITEM_COUNT, 00H
031C 7432                  502             JE FIFTH_JUMP_STATE_END
031E C606AA0128            503             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
0323 9AE90B----     R      504             CALL FAR PTR ADD_SOUND_INDEX
0328 EB4B90                505             JMP BYPASS_VIEW_TOTAL
032B                       506     PRICE_CANCEL_ITEM:
032B 803E500044            507             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
0330 7521                  508             JNE PRICE_END_TRANSACTION
0332 803EEF0100            509             CMP PURCHASE_ITEM_COUNT, 00H
0337 740D                  510             JE DISPLAY_ERROR_CODE_PRICE
0339 C606EE0106            511             MOV CASH_REGISTER_STATE, CANCEL_ITEM
033E 9A1806----     R      512             CALL FAR PTR STATE_TRANSITION
0343 E9FB01                513             JMP CASHIER_STATE_END
0346                       514     DISPLAY_ERROR_CODE_PRICE:
0346 C606C20101            515             MOV TRIGGER_E_FLAG, 01H
034B 9A1806----     R      516             CALL FAR PTR STATE_TRANSITION
0350                       517     FIFTH_JUMP_STATE_END:
0350 E9EE01                518             JMP CASHIER_STATE_END
0353                       519     PRICE_END_TRANSACTION:
0353 803E500046            520             CMP KBD_CHAR_INPUT, KBD_TRIGGER_END_TRANSACTION
0358 7555                  521             JNE PRICE_MODIFY_ITEM
035A 803EEF0100            522             CMP PURCHASE_ITEM_COUNT, 00H
035F 7493                  523             JE BYPASS_CANCEL_TRANSACTION
0361 C606EE0107            524             MOV CASH_REGISTER_STATE, END_TRANSACTION
0366 C606ED0102            525             MOV NETWORK_STATE, NETWORK_END_TRANSACTION
036B C606AA0128            526             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
0370 9AE90B----     R      527             CALL FAR PTR ADD_SOUND_INDEX
0375                       528     BYPASS_VIEW_TOTAL:
0375 9A1806----     R      529             CALL FAR PTR STATE_TRANSITION
037A 33C9                  530             XOR CX, CX
037C 33DB                  531             XOR BX, BX
037E B10A                  532             MOV CL, 10
0380                       533     TRANSFER_TO_ITEM_PRICE:
0380 8A87E001              534             MOV AL, TOTAL_PRICE[BX]
0384 8887CF01              535             MOV ITEM_PRICE[BX], AL
0388 43                    536             INC BX
0389 E2F5                  537             LOOP TRANSFER_TO_ITEM_PRICE
038B A0EA01                538             MOV AL, TOTAL_PLACE_VALUE
038E 0430                  539             ADD AL, 48
0390 A2D901                540             MOV PLACE_VALUE, AL
0393 A2DA01                541             MOV TMP_PLACE_VALUE, AL
0396 2C2B                  542             SUB AL, 43
0398 A2CE01                543             MOV SERIAL_INDEX, AL
039B 9A6806----     R      544             CALL FAR PTR DISPLAY_PRICE_ON_BCD
03A0 9A120C----     R      545             CALL FAR PTR POPULATE_SOUND_QUEUE
03A5 803EEE0108            546             CMP CASH_REGISTER_STATE, CHANGE_PAY
03AA 7464                  547             JE FIRST_JUMP_CHANGE_REMAINING
03AC E99201                548             JMP CASHIER_STATE_END
03AF                       549     PRICE_MODIFY_ITEM:
03AF 803E500047            550             CMP KBD_CHAR_INPUT, KBD_TRIGGER_MODIFY
03B4 759A                  551             JNE FIFTH_JUMP_STATE_END
03B6 803EEF0100            552             CMP PURCHASE_ITEM_COUNT, 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   15


LOC  OBJ                  LINE     SOURCE

03BB 7412                  553             JE DISPLAY_ERROR_MODIFY_PRICE
03BD C606EE0103            554             MOV CASH_REGISTER_STATE, ENTER_BARCODE
03C2 C606F20101            555             MOV MODIFY_ITEM_FLAG, 01H
03C7 9A1806----     R      556             CALL FAR PTR STATE_TRANSITION
03CC E97201                557             JMP CASHIER_STATE_END
03CF                       558     DISPLAY_ERROR_MODIFY_PRICE:
03CF C606C20101            559             MOV TRIGGER_E_FLAG, 01H
03D4 9A1806----     R      560             CALL FAR PTR STATE_TRANSITION   
03D9 E96501                561             JMP CASHIER_STATE_END
                           562             
                           563     ; Cashier is now cancelling a single item in the transaction
03DC                       564     CASHIER_CANCEL_ITEM:
03DC 803E500000            565             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
03E1 744B                  566             JE CANCEL_CHECK_NUMBER
03E3 803E50005F            567             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
03E8 7508                  568             JNE CANCEL_CHECK_AGAIN
03EA 9A2D06----     R      569             CALL FAR PTR BACKSPACE_KEYPRESS
03EF E94F01                570             JMP CASHIER_STATE_END
03F2                       571     CANCEL_CHECK_AGAIN:
03F2 803E500044            572             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
03F7 751A                  573             JNE CANCEL_CHECK_ENTER
03F9 C606EE0105            574             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
03FE C606C50101            575             MOV SHOW_BCD_ONCE_FLAG, 01H
0403 C606AB0101            576             MOV SAY_SOUND_ONCE_FLAG, 01H
0408 9A1806----     R      577             CALL FAR PTR STATE_TRANSITION
040D E93101                578             JMP CASHIER_STATE_END
0410                       579     FIRST_JUMP_CHANGE_REMAINING:
0410 E91201                580             JMP CHANGE_REMAINING
0413                       581     CANCEL_CHECK_ENTER:
0413 803E50007C            582             CMP KBD_CHAR_INPUT, KBD_ENTER
0418 7514                  583             JNE CANCEL_CHECK_NUMBER
041A 803E740008            584             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
041F 750A                  585             JNE SIXTH_JUMP_STATE_END
0421 C606ED0101            586             MOV NETWORK_STATE, NETWORK_ENABLE
0426 9A1806----     R      587             CALL FAR PTR STATE_TRANSITION
042B                       588     SIXTH_JUMP_STATE_END:
042B E91301                589             JMP CASHIER_STATE_END
042E                       590     CANCEL_CHECK_NUMBER:    
042E 803E740008            591             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
0433 74F6                  592             JE SIXTH_JUMP_STATE_END
0435 9A4F05----     R      593             CALL FAR PTR GET_USER_DIGIT
043A EBEF                  594             JMP SIXTH_JUMP_STATE_END
                           595             
                           596     ; Cashier is now ending the transaction 
043C                       597     CASHIER_END_TRANSACTION:
043C 803E500045            598             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
0441 7503                  599             JNE END_CHANGE_PAY
0443 E9AEFE                600             JMP BYPASS_CANCEL_TRANSACTION
0446                       601     END_CHANGE_PAY:
0446 803E500049            602             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CHANGE_PAY
044B 75DE                  603             JNE SIXTH_JUMP_STATE_END
044D C606EE0108            604             MOV CASH_REGISTER_STATE, CHANGE_PAY
0452 9A1806----     R      605             CALL FAR PTR STATE_TRANSITION
0457 C606520000            606             MOV CHANGE_PLACE_VALUE, 00H
045C E9E200                607             JMP CASHIER_STATE_END
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   16


LOC  OBJ                  LINE     SOURCE

                           608             
                           609     ;Cashier is now calculating the change
045F                       610     CASHIER_CHANGE_PAY:
045F 803E500000            611             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0464 743E                  612             JE CHANGE_NUMBER
0466 803E50005F            613             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
046B 7508                  614             JNE CHANGE_CANCEL_TRANSACTION
046D 9A2D06----     R      615             CALL FAR PTR BACKSPACE_KEYPRESS
0472 E9CC00                616             JMP CASHIER_STATE_END
0475                       617     CHANGE_CANCEL_TRANSACTION:
0475 803E500045            618             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
047A 7503                  619             JNE CHANGE_END_TRANSACTION
047C E975FE                620             JMP BYPASS_CANCEL_TRANSACTION
047F                       621     CHANGE_END_TRANSACTION:
047F 803E500046            622             CMP KBD_CHAR_INPUT, KBD_TRIGGER_END_TRANSACTION
0484 753F                  623             JNE CHANGE_CHECK_ENTER
0486 803EF00101            624             CMP CHANGE_DONE_FLAG, 01H
048B 7514                  625             JNE SEVENTH_JUMP_STATE_END
048D C606EE0102            626             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0492 C606C40101            627             MOV TRIGGER_P_FLAG, 01H
0497 9A1806----     R      628             CALL FAR PTR STATE_TRANSITION
049C 9AB605----     R      629             CALL FAR PTR CLEAR_ALL_VARIABLES
04A1                       630     SEVENTH_JUMP_STATE_END:
04A1 E99D00                631             JMP CASHIER_STATE_END
04A4                       632     CHANGE_NUMBER:  
04A4 803E510000            633             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
04A9 74F6                  634             JE SEVENTH_JUMP_STATE_END
04AB 803EF00101            635             CMP CHANGE_DONE_FLAG, 01H
04B0 74EF                  636             JE SEVENTH_JUMP_STATE_END
04B2 803E740008            637             CMP USER_INPUT_LENGTH, KBD_CHANGE_LENGTH
04B7 74E8                  638             JE SEVENTH_JUMP_STATE_END
04B9 FE065200              639             INC CHANGE_PLACE_VALUE
04BD 9A4F05----     R      640             CALL FAR PTR GET_USER_DIGIT
04C2 EB7D90                641             JMP CASHIER_STATE_END
04C5                       642     CHANGE_CHECK_ENTER:
04C5 803E50007C            643             CMP KBD_CHAR_INPUT, KBD_ENTER
04CA 7575                  644             JNE CASHIER_STATE_END
04CC 803EF00101            645             CMP CHANGE_DONE_FLAG, 01H
04D1 746E                  646             JE CASHIER_STATE_END
04D3 803E740002            647             CMP USER_INPUT_LENGTH, 02H
04D8 7C67                  648             JL CASHIER_STATE_END
04DA 33DB                  649             XOR BX, BX
04DC 8A1E5200              650             MOV BL, CHANGE_PLACE_VALUE
04E0 8A4752                651             MOV AL, CHANGE_PRICE[BX-1]
04E3 884753                652             MOV CHANGE_PRICE[BX], AL
04E6 8A4751                653             MOV AL, CHANGE_PRICE[BX-2]
04E9 884752                654             MOV CHANGE_PRICE[BX-1], AL
04EC C647512E              655             MOV CHANGE_PRICE[BX-2], '.'
04F0 802E520002            656             SUB CHANGE_PLACE_VALUE, 2
04F5 9A180F----     R      657             CALL FAR PTR CALCULATE_CHANGE
04FA 803E750000            658             CMP CHANGE_SUCCESS_FLAG, 00H
04FF 7417                  659             JE FINISH_CHANGE
0501 C606EE0107            660             MOV CASH_REGISTER_STATE, END_TRANSACTION
0506 C606C20101            661             MOV TRIGGER_E_FLAG, 01H
050B 9A1806----     R      662             CALL FAR PTR STATE_TRANSITION
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   17


LOC  OBJ                  LINE     SOURCE

0510 C606750000            663             MOV CHANGE_SUCCESS_FLAG, 00H
0515 EB2A90                664             JMP CASHIER_STATE_END
0518                       665     FINISH_CHANGE:
0518 C606AA0129            666             MOV SOUND_INDEX_INPUT, SOUND_YOURCHANGEIS ;To say the phrase 'your change is'
051D 9AE90B----     R      667             CALL FAR PTR ADD_SOUND_INDEX
0522 E950FE                668             JMP BYPASS_VIEW_TOTAL
0525                       669     CHANGE_REMAINING:
0525 C606AA012C            670             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
052A 9AE90B----     R      671             CALL FAR PTR ADD_SOUND_INDEX
052F C606AA012A            672             MOV SOUND_INDEX_INPUT, SOUND_THANKYOUANDGOODBYE ;To say the phrase 'thank you
                                    and goodbye'
0534 9AE90B----     R      673             CALL FAR PTR ADD_SOUND_INDEX
0539 C606F00101            674             MOV CHANGE_DONE_FLAG, 01H
053E EB0190                675             JMP CASHIER_STATE_END
                           676             
0541                       677     CASHIER_STATE_END:      
0541 C606500000            678             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
0546 C606510000            679             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
054B 59                    680             POP     CX
054C 5B                    681             POP     BX
054D 58                    682             POP AX
054E CB                    683             RET
                           684     CHANGE_CASHIER_STATE ENDP
                           685     
                           686     
                           687     ;Procedure to add user's numeric input to a corresponding array depending on the stat
                                   e
054F                       688     GET_USER_DIGIT PROC FAR
054F 50                    689             PUSH AX
0550 53                    690             PUSH BX
                           691             
0551 803E510000            692             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
0556 745B                  693             JE GET_USER_DIGIT_END
                           694             
0558 33DB                  695             XOR BX, BX
055A 8A1E7400              696             MOV BL, USER_INPUT_LENGTH
055E A04F00                697             MOV AL, KBD_NUM_INPUT
0561 9AA507----     R      698             CALL FAR PTR ADD_BCD_QUEUE
0566 A2AA01                699             MOV SOUND_INDEX_INPUT, AL
0569 9AE90B----     R      700             CALL FAR PTR ADD_SOUND_INDEX
056E 0430                  701             ADD AL, 48
                           702             
0570 803EEE0104            703             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0575 741B                  704             JE MOV_AL_QUANTITY
                           705             
0577 803EF30101            706             CMP USERNAME_FLAG, 01H
057C 741A                  707             JE MOV_AL_PASSWORD
                           708             
057E 803EEE0101            709             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
0583 7419                  710             JE MOV_AL_USERNAME
                           711             
0585 803EEE0108            712             CMP CASH_REGISTER_STATE, CHANGE_PAY
058A 7418                  713             JE MOV_AL_CHANGE
                           714             
058C 884769                715             MOV USER_BARCODE[BX], AL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   18


LOC  OBJ                  LINE     SOURCE

058F EB1990                716             JMP CONTINUE_GET_DIGIT
                           717             
0592                       718     MOV_AL_QUANTITY:
0592 884771                719             MOV USER_QUANTITY[BX], AL
0595 EB1390                720             JMP CONTINUE_GET_DIGIT
                           721             
0598                       722     MOV_AL_PASSWORD:
0598 884763                723             MOV USER_PASSWORD[BX], AL
059B EB0D90                724             JMP CONTINUE_GET_DIGIT
                           725             
059E                       726     MOV_AL_USERNAME:
059E 88475D                727             MOV USER_USERNAME[BX], AL
05A1 EB0790                728             JMP CONTINUE_GET_DIGIT
                           729             
05A4                       730     MOV_AL_CHANGE:
05A4 884753                731             MOV CHANGE_PRICE[BX], AL
05A7 EB0190                732             JMP CONTINUE_GET_DIGIT  
                           733             
05AA                       734     CONTINUE_GET_DIGIT:
05AA FE067400              735             INC USER_INPUT_LENGTH
05AE C606510000            736             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
                           737     
05B3                       738     GET_USER_DIGIT_END:     
05B3 5B                    739             POP     BX
05B4 58                    740             POP AX
05B5 CB                    741             RET
                           742     GET_USER_DIGIT ENDP
                           743     
                           744     
                           745     ;Procedure to clear all variables before cancelling/ending a transaction
05B6                       746     CLEAR_ALL_VARIABLES PROC FAR
05B6 53                    747             PUSH BX
05B7 51                    748             PUSH CX
                           749             
05B8 C606520000            750             MOV CHANGE_PLACE_VALUE, 00H
05BD C606AB0100            751             MOV SAY_SOUND_ONCE_FLAG, 00H
05C2 C606C50100            752             MOV SHOW_BCD_ONCE_FLAG, 00H
05C7 C606CE0100            753             MOV SERIAL_INDEX, 00H
05CC C606EA0100            754             MOV TOTAL_PLACE_VALUE, 00H
05D1 C606EB0100            755             MOV CASH_REGISTER_START, 00H
05D6 C606EF0100            756             MOV PURCHASE_ITEM_COUNT, 00H
05DB C606F00100            757             MOV CHANGE_DONE_FLAG, 00H
05E0 C606F10100            758             MOV SWAP_JUMP_FLAG, 00H
05E5 C606F20100            759             MOV MODIFY_ITEM_FLAG, 00H
05EA C606F30100            760             MOV USERNAME_FLAG, 00H
05EF C606F40100            761             MOV REFUND_FLAG, 00H
05F4 C606750000            762             MOV CHANGE_SUCCESS_FLAG, 00H
05F9 C606F50100            763             MOV ANDROID_FLAG, 00H
                           764             
05FE 33DB                  765             XOR BX, BX
0600 33C9                  766             XOR CX, CX
0602 B10A                  767             MOV CL, 10
0604                       768     CLEAR_PRICES:
0604 C6475330              769             MOV CHANGE_PRICE[BX], '0'
0608 C687CF0130            770             MOV ITEM_PRICE[BX], '0'
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   19


LOC  OBJ                  LINE     SOURCE

060D C687E00130            771             MOV TOTAL_PRICE[BX], '0'
0612 43                    772             INC BX
0613 E2EF                  773             LOOP CLEAR_PRICES
                           774     
0615                       775     CLEAR_VARIABLES_END:    
0615 59                    776             POP     CX
0616 5B                    777             POP     BX
0617 CB                    778             RET
                           779     CLEAR_ALL_VARIABLES ENDP
                           780     
                           781     
                           782     ;Procedure to clear variables when changing states
0618                       783     STATE_TRANSITION PROC FAR       
0618 C606500000            784             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
061D C606740000            785             MOV USER_INPUT_LENGTH, 00H
0622 C606510000            786             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
0627 9A8510----     R      787             CALL FAR PTR CLEAR_7SEGMENT
062C CB                    788             RET
                           789     STATE_TRANSITION ENDP
                           790     
                           791     
                           792     ;Procedure to remove user's most recent keyboard input and replace it with a zero on 
                                   the BCD
062D                       793     BACKSPACE_KEYPRESS PROC FAR     
062D 50                    794             PUSH AX
                           795     
062E 803E740000            796             CMP USER_INPUT_LENGTH, 00H
0633 7431                  797             JE BACKSPACE_KEYPRESS_END
0635 FE0E7400              798             DEC USER_INPUT_LENGTH
0639 FE0E5200              799             DEC CHANGE_PLACE_VALUE
                           800             
063D A0BB01                801             MOV AL, BCD_DISPLAY[1]
0640 A2BA01                802             MOV BCD_DISPLAY[0], AL
0643 A0BC01                803             MOV AL, BCD_DISPLAY[2]
0646 A2BB01                804             MOV BCD_DISPLAY[1], AL
0649 A0BD01                805             MOV AL, BCD_DISPLAY[3]
064C A2BC01                806             MOV BCD_DISPLAY[2], AL
064F A0BE01                807             MOV AL, BCD_DISPLAY[4]
0652 A2BD01                808             MOV BCD_DISPLAY[3], AL
0655 A0BF01                809             MOV AL, BCD_DISPLAY[5]
0658 A2BE01                810             MOV BCD_DISPLAY[4], AL
065B A0AC01                811             MOV AL, BCD_NUMBERS[0]
065E A2BF01                812             MOV BCD_DISPLAY[5], AL
                           813             
0661 C606500000            814             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
                           815             
0666                       816     BACKSPACE_KEYPRESS_END: 
0666 58                    817             POP AX
0667 CB                    818             RET
                           819     BACKSPACE_KEYPRESS ENDP
                           820     
                           821     
                           822     ;Procedure that will display the price received via serial on the 7-segment display
0668                       823     DISPLAY_PRICE_ON_BCD PROC FAR   
0668 50                    824             PUSH AX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   20


LOC  OBJ                  LINE     SOURCE

0669 53                    825             PUSH BX
066A 51                    826             PUSH CX
                           827     
066B 33DB                  828             XOR BX, BX
066D 33C9                  829             XOR CX, CX
                           830             
066F 803ED90145            831             CMP PLACE_VALUE, 'E'
0674 7510                  832             JNE CONTINUE_NORMAL_DISPLAY
0676 A0B701                833             MOV AL, BCD_NUMBERS[11]
0679 A2BA01                834             MOV BCD_DISPLAY[0], AL
067C 8A0ECE01              835             MOV CL, SERIAL_INDEX
0680 80E902                836             SUB CL, 2
0683 EB0F90                837             JMP PUT_DIGIT_IN_BCD
                           838             
0686                       839     CONTINUE_NORMAL_DISPLAY:
0686 8A0ED901              840             MOV CL, PLACE_VALUE
068A 80E92D                841             SUB CL, 45 ;Subtract 48 to convert to number and add 3 to take care of decima
                                   l digits
                           842             
068D 80F907                843             CMP CL, 7
0690 7E02                  844             JLE PUT_DIGIT_IN_BCD
0692 B107                  845             MOV CL, 7
                           846             
0694                       847     PUT_DIGIT_IN_BCD:       
0694 8A87CF01              848             MOV AL, ITEM_PRICE[BX]
0698 3C2E                  849             CMP AL, '.'
069A 740D                  850             JE DECIMAL_ADD
069C 2C30                  851             SUB AL, 48
069E A24F00                852             MOV KBD_NUM_INPUT, AL
06A1 9AA507----     R      853             CALL FAR PTR ADD_BCD_QUEUE
06A6 EB0990                854             JMP END_PUT_DIGIT_LOOP
                           855             
06A9                       856     DECIMAL_ADD:
06A9 A0BA01                857             MOV AL, BCD_DISPLAY[0]
06AC 0C80                  858             OR AL, 80H
06AE A2BA01                859             MOV BCD_DISPLAY[0], AL
                           860             
06B1                       861     END_PUT_DIGIT_LOOP:
06B1 43                    862             INC BX
06B2 E2E0                  863             LOOP PUT_DIGIT_IN_BCD
                           864     
06B4                       865     DISPLAY_PRICE_ON_BCD_END:       
06B4 59                    866             POP     CX
06B5 5B                    867             POP     BX
06B6 58                    868             POP AX
06B7 CB                    869             RET
                           870     DISPLAY_PRICE_ON_BCD ENDP
                           871     
                           872     
                           873     ;Procedure to read both the keypads for user inputs
06B8                       874     KEYPAD_READ PROC FAR
06B8 52                    875             PUSH DX
06B9 51                    876             PUSH CX
06BA 53                    877             PUSH BX
06BB 50                    878             PUSH AX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   21


LOC  OBJ                  LINE     SOURCE

06BC 56                    879             PUSH SI
                           880                                             
06BD B300                  881             MOV BL, 00H        ;initialize BL for key code
06BF 32C0                  882             XOR AL, AL        ;clear all flags
06C1 BA8100                883             MOV DX, PORTB  ;port B address to DX
06C4 EE                    884             OUT DX, AL        ;ground all rows
06C5 BA8200                885             MOV DX, PORTC        ;Port C address to DX
                           886                  
06C8 EC                    887             IN AL, DX        ;read all columns
06C9 2477                  888             AND AL,77H  ;D0-D2 and D4-D6 are the 6 input pins for two keypads 0111 0111(7
                                   7H)                          
06CB 3C77                  889             CMP AL,77H
06CD 7439                  890             JZ RESET_FLAG 
                           891     
06CF 803E4E0001            892             CMP DS:KEY_FLAG, 01H
06D4 7437                  893             JZ IGNORE_KEYPRESS        ;if flag is set don't send keypad input to hyperter
                                   minal
                           894     
06D6 B07F                  895             MOV AL, 07FH       ;load data byte to ground a row
06D8 B704                  896             MOV BH, 04H        ;set row counter
                           897     
06DA                       898     NXTROW:                
06DA D0C0                  899             ROL AL, 01H       ;rotate AL to ground next row
06DC 8AE8                  900             MOV CH, AL        ;save data byte to ground next row
06DE BA8100                901             MOV DX, PORTB        ;port B address to DX
06E1 EE                    902             OUT DX, AL        ;ground one of the rows
06E2 BA8200                903             MOV DX, PORTC        ;port C address to DX
06E5 EC                    904             IN AL, DX        ;read input port for key closure
                           905             
06E6 8AE0                  906             MOV AH,AL
06E8 D0CC                  907             ROR AH,01H
                           908             
06EA 80E438                909             AND AH,38H
06ED 2407                  910             AND AL,07H
06EF 0AC4                  911             OR AL,AH
                           912     
06F1 243F                  913             AND AL,3FH ;D0-D2 and D4-D6 are the 6 input pins for two keypads 0111 0111(77
                                   H)
06F3 B106                  914             MOV CL, 06H        ;set column counter
                           915     
06F5                       916     POLL_COLUMNS:        
06F5 D0D8                  917             RCR AL, 01H       ;move D0 to CF        
06F7 7365                  918             JNC SEND_KEY        ;key closure is found, if CF=0
06F9 FEC3                  919             INC BL                ;inc BL for next binary key code                       
                                     
                           920     
06FB FEC9                  921             DEC CL                ;dec column counter if no key closure
06FD 75F6                  922             JNZ POLL_COLUMNS        ;check for key closure in next column
06FF 8AC5                  923             MOV AL, CH        ;Load data byte to ground next row
0701 FECF                  924             DEC BH                ;if no key closure found in all columns in this row, go
                                    to ground next row
0703 75D5                  925             JNZ NXTROW        ;go back to ground next row   
0705 E99700                926             JMP SKIP_SEND       
                           927     
0708                       928     RESET_FLAG:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   22


LOC  OBJ                  LINE     SOURCE

0708 C6064E0000            929             MOV DS:KEY_FLAG, 00H  ;if no keypad input is found, reset flag so that next k
                                   eypad input is printed
                           930             
070D                       931     IGNORE_KEYPRESS:
070D 9A3E00----     R      932             CALL FAR PTR CHANGE_CASHIER_STATE ;Function call to check if there is a chang
                                   e in the cash register's state     
0712 803EEE0100            933             CMP CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0717 7442                  934             JE TEMP_JUMP_SKIP_SEND
0719 803EEE0101            935             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
071E 743B                  936             JE TEMP_JUMP_SKIP_SEND
0720 FF06C901              937             INC TIMEOUT_COUNTER
0724 813EC9010406          938             CMP TIMEOUT_COUNTER, TIMEOUT_COUNTER_LEN
072A 752F                  939             JNE TEMP_JUMP_SKIP_SEND
072C C706C9010000          940             MOV TIMEOUT_COUNTER, 0
0732 FE06CB01              941             INC TIMEOUT_SEC_COUNT
0736 803ECB0108            942             CMP TIMEOUT_SEC_COUNT, 08H
073B 7562                  943             JNE SKIP_SEND
073D C606C10101            944             MOV TRIGGER_L_FLAG, 01H
0742 C606EE0100            945             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0747 C606CB0100            946             MOV TIMEOUT_SEC_COUNT, 0
074C 9A1806----     R      947             CALL FAR PTR STATE_TRANSITION
0751 9AB605----     R      948             CALL FAR PTR CLEAR_ALL_VARIABLES        
0756 C606ED0103            949             MOV NETWORK_STATE, NETWORK_LOGOUT
075B                       950     TEMP_JUMP_SKIP_SEND:
075B EB4290                951             JMP SKIP_SEND ;if flag is set don't send keypad input to hyperterminal
                           952             
075E                       953     SEND_KEY:
075E 80FB0B                954             CMP BL,0BH
0761 7F07                  955             JG LOAD_KEYS_PART2
                           956             
0763                       957     LOAD_KEYS_PART1:        
0763 8D363600              958         LEA SI,KEYS_PART1 
0767 EB0890                959         JMP SEND_CHAR
                           960             
076A                       961     LOAD_KEYS_PART2:
076A 80EB0C                962         SUB BL,0CH
076D 8D364200              963         LEA SI,KEYS_PART2
                           964             
0771                       965     SEND_CHAR:
0771 33C0                  966         XOR AX, AX
0773 8AC3                  967         MOV AL,BL
0775 03F0                  968         ADD SI,AX
0777 8A04                  969         MOV AL,[SI]
                           970             
0779 2C30                  971         SUB AL, 48 ;Converting to number
077B 3C09                  972             CMP AL, 09H ;If number is > 9 then it is some other character and not a numer
                                   ic digit
077D 7E08                  973             JLE SEND_NUMBER
                           974             
077F 0430                  975             ADD AL, 48
0781 A25000                976             MOV KBD_CHAR_INPUT, AL
0784 EB0990                977             JMP KEYPAD_END
                           978     
0787                       979     SEND_NUMBER:
                           980             ;manipulating the number
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   23


LOC  OBJ                  LINE     SOURCE

0787 A24F00                981             MOV KBD_NUM_INPUT, AL
078A C606510001            982             MOV KBD_INPUT_STATE, KBD_NEW_INPUT
                           983             
078F                       984     KEYPAD_END:
078F C6064E0001            985         MOV DS:KEY_FLAG, 01H ;set flag to one so that next time same key input is not pri
                                   nted
0794 C606CB0100            986             MOV TIMEOUT_SEC_COUNT, 0
0799 C706C9010000          987             MOV TIMEOUT_COUNTER, 0
                           988             
079F                       989     SKIP_SEND:
079F 5E                    990             POP SI
07A0 58                    991             POP AX
07A1 5B                    992             POP BX
07A2 59                    993             POP CX
07A3 5A                    994             POP DX
07A4 CB                    995             RET     
                           996     KEYPAD_READ ENDP
                           997     
                           998     
                           999     ;Procedure that will add user's numeric input to the BCD display
07A5                      1000     ADD_BCD_QUEUE PROC FAR
07A5 50                   1001             PUSH AX
07A6 53                   1002             PUSH BX
                          1003     
07A7 33DB                 1004             XOR BX, BX
                          1005     
07A9 8A1E4F00             1006             MOV BL, KBD_NUM_INPUT
07AD 8AA7AC01             1007             MOV AH, BCD_NUMBERS[BX]
                          1008             
07B1 A0BE01               1009             MOV AL, BCD_DISPLAY[4]
07B4 A2BF01               1010             MOV BCD_DISPLAY[5], AL
07B7 A0BD01               1011             MOV AL, BCD_DISPLAY[3]
07BA A2BE01               1012             MOV BCD_DISPLAY[4], AL
07BD A0BC01               1013             MOV AL, BCD_DISPLAY[2]
07C0 A2BD01               1014             MOV BCD_DISPLAY[3], AL
07C3 A0BB01               1015             MOV AL, BCD_DISPLAY[1]
07C6 A2BC01               1016             MOV BCD_DISPLAY[2], AL
07C9 A0BA01               1017             MOV AL, BCD_DISPLAY[0]
07CC A2BB01               1018             MOV BCD_DISPLAY[1], AL          
07CF 8826BA01             1019             MOV BCD_DISPLAY[0], AH
                          1020             
07D3                      1021     BCD_ADD_END:    
07D3 5B                   1022             POP     BX
07D4 58                   1023             POP AX
07D5 CB                   1024             RET
                          1025     ADD_BCD_QUEUE ENDP
                          1026                     
                          1027     
                          1028     ;Procedure that is called whenever something is being sent via serial
07D6                      1029     SERIAL_REC_ACTION       PROC    FAR
07D6 50                   1030             PUSH AX
07D7 53                   1031             PUSH BX
07D8 51                   1032             PUSH CX
07D9 52                   1033             PUSH DX
                          1034     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   24


LOC  OBJ                  LINE     SOURCE

07DA 803EEB0101           1035             CMP CASH_REGISTER_START, 01H
07DF 745D                 1036             JE FIRST_JUMP_CASHIER_RECEIVER
                          1037             
07E1 803ECC0101           1038             CMP START_READ, 01H
07E6 7413                 1039             JE START_READING_ID_VALUES
                          1040             
07E8 3C5B                 1041             CMP AL, '['
07EA 7403                 1042             JE START_READING_ID
07EC E9D300               1043             JMP END_SERIAL_COMMUNICATION
                          1044             
07EF                      1045     START_READING_ID:
07EF FE06EC01             1046             INC CASH_REGISTER_FLAG
07F3 C606CC0101           1047             MOV START_READ, 01H
07F8 E9C700               1048             JMP END_SERIAL_COMMUNICATION
                          1049             
07FB                      1050     START_READING_ID_VALUES:
07FB 33DB                 1051             XOR BX, BX
07FD 8A1EEC01             1052             MOV BL, CASH_REGISTER_FLAG
0801 4B                   1053             DEC BX
                          1054             
0802 3A4730               1055             CMP AL, CASH_REGISTER_ID[BX]
0805 753A                 1056             JNE FIRST_JUMP_INITIALIZE_TERMINATE
0807 803EEC0106           1057             CMP CASH_REGISTER_FLAG, 06H
080C 7529                 1058             JNE NORMAL_ID_CHECK
080E 803EED0100           1059             CMP NETWORK_STATE, NETWORK_DISABLE
0813 742F                 1060             JE FIRST_JUMP_NEGATIVE_ACKNOWLEDGEMENT
0815 803EED0102           1061             CMP NETWORK_STATE, NETWORK_END_TRANSACTION
081A 7465                 1062             JE SEND_END_TRANSACTION_ACK
081C 803EED0103           1063             CMP NETWORK_STATE, NETWORK_LOGOUT
0821 7424                 1064             JE SEND_LOGOUT_ACK
0823 803EED0104           1065             CMP NETWORK_STATE, NETWORK_CANCEL_TRANSACTION
0828 743A                 1066             JE SEND_CANCEL_ACK
082A C606EB0101           1067             MOV CASH_REGISTER_START, 01H
082F 9AF90A----     R     1068             CALL FAR PTR SEND_TO_PC
0834 E98B00               1069             JMP END_SERIAL_COMMUNICATION
0837                      1070     NORMAL_ID_CHECK:
0837 FE06EC01             1071             INC CASH_REGISTER_FLAG
083B E98400               1072             JMP END_SERIAL_COMMUNICATION
                          1073             
083E                      1074     FIRST_JUMP_CASHIER_RECEIVER:
083E E98400               1075             JMP CASH_REGISTER_RECEIVE_START
                          1076             
0841                      1077     FIRST_JUMP_INITIALIZE_TERMINATE:
0841 EB7090               1078             JMP INITIALIZE_TERMINATE_SERIAL
                          1079             
0844                      1080     FIRST_JUMP_NEGATIVE_ACKNOWLEDGEMENT:
0844 EB5890               1081             JMP SEND_NEGATIVE_ACK
                          1082             
0847                      1083     SEND_LOGOUT_ACK:
0847 B02A                 1084             MOV AL, '*'
0849 9A0000----     E     1085             CALL FAR PTR PRINT_CHAR
084E B032                 1086             MOV AL, '2'
0850 9A0000----     E     1087             CALL FAR PTR PRINT_CHAR
0855 B02A                 1088             MOV AL, '*'
0857 9A0000----     E     1089             CALL FAR PTR PRINT_CHAR
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   25


LOC  OBJ                  LINE     SOURCE

085C C606ED0100           1090             MOV NETWORK_STATE, NETWORK_DISABLE
0861 EB5090               1091             JMP INITIALIZE_TERMINATE_SERIAL
                          1092     
0864                      1093     SEND_CANCEL_ACK:
0864 B02A                 1094             MOV AL, '*'
0866 9A0000----     E     1095             CALL FAR PTR PRINT_CHAR
086B B033                 1096             MOV AL, '3'
086D 9A0000----     E     1097             CALL FAR PTR PRINT_CHAR
0872 B02A                 1098             MOV AL, '*'
0874 9A0000----     E     1099             CALL FAR PTR PRINT_CHAR
0879 C606ED0100           1100             MOV NETWORK_STATE, NETWORK_DISABLE
087E EB3390               1101             JMP INITIALIZE_TERMINATE_SERIAL 
                          1102             
0881                      1103     SEND_END_TRANSACTION_ACK:
0881 B02A                 1104             MOV AL, '*'
0883 9A0000----     E     1105             CALL FAR PTR PRINT_CHAR
0888 B034                 1106             MOV AL, '4'
088A 9A0000----     E     1107             CALL FAR PTR PRINT_CHAR
088F B02A                 1108             MOV AL, '*'
0891 9A0000----     E     1109             CALL FAR PTR PRINT_CHAR
0896 C606ED0100           1110             MOV NETWORK_STATE, NETWORK_DISABLE
089B EB1690               1111             JMP INITIALIZE_TERMINATE_SERIAL
                          1112             
089E                      1113     SEND_NEGATIVE_ACK:
089E B02A                 1114             MOV AL, '*'
08A0 9A0000----     E     1115             CALL FAR PTR PRINT_CHAR
08A5 B030                 1116             MOV AL, '0'
08A7 9A0000----     E     1117             CALL FAR PTR PRINT_CHAR
08AC B02A                 1118             MOV AL, '*'
08AE 9A0000----     E     1119             CALL FAR PTR PRINT_CHAR
                          1120             
08B3                      1121     INITIALIZE_TERMINATE_SERIAL:
08B3 C606EB0100           1122             MOV CASH_REGISTER_START, 00H
08B8 C606EC0100           1123             MOV CASH_REGISTER_FLAG, 00H
08BD C606CC0100           1124             MOV START_READ, 00H
                          1125             
08C2                      1126     END_SERIAL_COMMUNICATION:
08C2 E92F02               1127             JMP SERIAL_END
                          1128     
08C5                      1129     CASH_REGISTER_RECEIVE_START:            
08C5 803ECD0101           1130             CMP START_RECEIVE_PRICE, 01H
08CA 740F                 1131             JE START_READING_DIGITS
                          1132             
08CC 3C28                 1133             CMP AL, '('
08CE 7403                 1134             JE START_READING_PRICE
08D0 E92102               1135             JMP SERIAL_END
                          1136             
08D3                      1137     START_READING_PRICE:
08D3 C606CD0101           1138             mov START_RECEIVE_PRICE, 01H
08D8 E91902               1139             JMP SERIAL_END
                          1140             
08DB                      1141     START_READING_DIGITS:
08DB 803ECE0100           1142             CMP SERIAL_INDEX, 00H
08E0 742A                 1143             JE GET_PLACE_VALUE
                          1144             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   26


LOC  OBJ                  LINE     SOURCE

08E2 3C3B                 1145             CMP AL, ';'
08E4 740A                 1146             JE TEMP_INDEX_INCREMENT
                          1147             
08E6 803ECE0102           1148             CMP SERIAL_INDEX, 02H
08EB 7D0A                 1149             JGE GET_DIGITS
                          1150             
08ED E90402               1151             JMP SERIAL_END
                          1152             
08F0                      1153     TEMP_INDEX_INCREMENT:
08F0 FE06CE01             1154             INC SERIAL_INDEX
08F4 E9FD01               1155             JMP SERIAL_END
                          1156             
08F7                      1157     GET_DIGITS:
08F7 3C29                 1158             CMP AL, ')'
08F9 741E                 1159             JE TERMINATE_SERIAL
                          1160             
08FB 33DB                 1161             XOR BX, BX
08FD 8A1ECE01             1162             MOV BL, SERIAL_INDEX
0901 8887CD01             1163             MOV ITEM_PRICE[BX-2], AL
0905 FE06CE01             1164             INC SERIAL_INDEX        
0909 E9E801               1165             JMP SERIAL_END
                          1166             
090C                      1167     GET_PLACE_VALUE:
090C FE06CE01             1168             INC SERIAL_INDEX
0910 A2DA01               1169             MOV TMP_PLACE_VALUE, AL
0913 A2D901               1170             MOV PLACE_VALUE, AL
0916 E9DB01               1171             JMP SERIAL_END
                          1172             
0919                      1173     TERMINATE_SERIAL:
0919 C606EB0100           1174             MOV CASH_REGISTER_START, 00H
091E C606EC0100           1175             MOV CASH_REGISTER_FLAG, 00H
0923 C606CC0100           1176             MOV START_READ, 00H
0928 C606CD0100           1177             MOV START_RECEIVE_PRICE, 00H
092D C606ED0100           1178             MOV NETWORK_STATE, NETWORK_DISABLE
                          1179             
0932 803ED90141           1180             CMP PLACE_VALUE, 'A'
0937 7426                 1181             JE FIRST_JUMP_CHANGE_BARCODE_STATE
                          1182             
0939 803ED90142           1183             CMP PLACE_VALUE, 'B'
093E 7422                 1184             JE FIRST_JUMP_WRONG_LOGIN
                          1185             
0940 803ED90144           1186             CMP PLACE_VALUE, 'D'
0945 741E                 1187             JE FIRST_JUMP_WRONG_BARCODE
                          1188             
0947 803ED90145           1189             CMP PLACE_VALUE, 'E'
094C 741A                 1190             JE FIRST_JUMP_WRONG_QUANTITY
                          1191             
094E 803EEE0104           1192             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0953 7416                 1193             JE FIRST_JUMP_PRICE_PROCESSING
                          1194             
0955 803EEE0106           1195             CMP CASH_REGISTER_STATE, CANCEL_ITEM
095A 7412                 1196             JE CANCEL_ITEM_PROCESSING
                          1197             
095C E99501               1198             JMP SERIAL_END
                          1199             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   27


LOC  OBJ                  LINE     SOURCE

095F                      1200     FIRST_JUMP_CHANGE_BARCODE_STATE:
095F E9D300               1201             JMP CHANGE_STATE_TO_BARCODE
                          1202             
0962                      1203     FIRST_JUMP_WRONG_LOGIN:
0962 E90501               1204             JMP DISPLAY_WRONG_LOGIN
                          1205             
0965                      1206     FIRST_JUMP_WRONG_BARCODE:
0965 E91901               1207             JMP DISPLAY_WRONG_BARCODE
                          1208             
0968                      1209     FIRST_JUMP_WRONG_QUANTITY:
0968 E96301               1210             JMP DISPLAY_WRONG_QUANTITY
                          1211             
096B                      1212     FIRST_JUMP_PRICE_PROCESSING:
096B E9B500               1213             JMP PRICE_PROCESSING
                          1214             
096E                      1215     CANCEL_ITEM_PROCESSING: 
096E 8A16EA01             1216             MOV DL, TOTAL_PLACE_VALUE
0972 88165200             1217             MOV CHANGE_PLACE_VALUE, DL              
0976 8A26DA01             1218             MOV AH, TMP_PLACE_VALUE
097A 80EC30               1219             SUB AH, 48
097D 8826EA01             1220             MOV TOTAL_PLACE_VALUE, AH       
0981 33C9                 1221             XOR CX, CX
0983 33DB                 1222             XOR BX, BX
0985 B10A                 1223             MOV CL, 10
0987                      1224     CREATE_PRICE_ITEMS:
0987 8A97E001             1225             MOV DL, TOTAL_PRICE[BX]
098B 885753               1226             MOV CHANGE_PRICE[BX], DL
098E 8A97CF01             1227             MOV DL, ITEM_PRICE[BX]
0992 8897E001             1228             MOV TOTAL_PRICE[BX], DL
0996 43                   1229             INC BX
0997 E2EE                 1230             LOOP CREATE_PRICE_ITEMS 
0999 9A180F----     R     1231             CALL FAR PTR CALCULATE_CHANGE
099E C606520000           1232             MOV CHANGE_PLACE_VALUE, 00H     
09A3 33DB                 1233             XOR BX, BX
09A5 B10A                 1234             MOV CL, 10
09A7                      1235     TOTAL_INPUT_PRICE_SWAP:
09A7 8A97E001             1236             MOV DL, TOTAL_PRICE[BX]
09AB 8897CF01             1237             MOV ITEM_PRICE[BX], DL
09AF C6475330             1238             MOV CHANGE_PRICE[BX], '0'
09B3 43                   1239             INC BX
09B4 E2F1                 1240             LOOP TOTAL_INPUT_PRICE_SWAP     
09B6 8A26EA01             1241             MOV AH, TOTAL_PLACE_VALUE
09BA 80C405               1242             ADD AH, 5
09BD 8826CE01             1243             MOV SERIAL_INDEX, AH
09C1 80C42B               1244             ADD AH, 43
09C4 8826D901             1245             MOV PLACE_VALUE, AH
09C8 8826DA01             1246             MOV TMP_PLACE_VALUE, AH 
09CC FE0EEF01             1247             DEC PURCHASE_ITEM_COUNT
09D0 803EF20101           1248             CMP MODIFY_ITEM_FLAG, 01H
09D5 751C                 1249             JNE CONTINUE_CANCELLING 
09D7 C606CE0100           1250             MOV SERIAL_INDEX, 00H
09DC C606EE0104           1251             MOV CASH_REGISTER_STATE, ENTER_QUANTITY
09E1 C606EB0101           1252             MOV CASH_REGISTER_START, 01H
09E6 C606C50100           1253             MOV SHOW_BCD_ONCE_FLAG, 00H
09EB C606AB0100           1254             MOV SAY_SOUND_ONCE_FLAG, 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   28


LOC  OBJ                  LINE     SOURCE

09F0 E90101               1255             JMP SERIAL_END
09F3                      1256     CONTINUE_CANCELLING:
09F3 C606EE0105           1257             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
09F8 C606C50101           1258             MOV SHOW_BCD_ONCE_FLAG, 01H
09FD C606AB0101           1259             MOV SAY_SOUND_ONCE_FLAG, 01H
0A02 9A1806----     R     1260             CALL FAR PTR STATE_TRANSITION
0A07 C606AA0128           1261             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
0A0C 9AE90B----     R     1262             CALL FAR PTR ADD_SOUND_INDEX
0A11 9A6806----     R     1263             CALL FAR PTR DISPLAY_PRICE_ON_BCD
0A16 9A120C----     R     1264             CALL FAR PTR POPULATE_SOUND_QUEUE       
0A1B C606CE0100           1265             MOV SERIAL_INDEX, 00H
0A20 E9D100               1266             JMP SERIAL_END
                          1267             
0A23                      1268     PRICE_PROCESSING:
0A23 C606EE0105           1269             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0A28 C606F20100           1270             MOV MODIFY_ITEM_FLAG, 00H
0A2D 9A1806----     R     1271             CALL FAR PTR STATE_TRANSITION
0A32 E9BF00               1272             JMP SERIAL_END
                          1273             
0A35                      1274     CHANGE_STATE_TO_BARCODE:
0A35 C606CE0100           1275             MOV SERIAL_INDEX, 00H
0A3A C606EE0102           1276             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0A3F C606C40101           1277             MOV TRIGGER_P_FLAG, 01H
0A44 9A1806----     R     1278             CALL FAR PTR STATE_TRANSITION
0A49 C606AA0123           1279             MOV SOUND_INDEX_INPUT, SOUND_GOOD ;To say the word 'good'
0A4E 9AE90B----     R     1280             CALL FAR PTR ADD_SOUND_INDEX
0A53 C606AA012C           1281             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
0A58 9AE90B----     R     1282             CALL FAR PTR ADD_SOUND_INDEX
0A5D C606AA0125           1283             MOV SOUND_INDEX_INPUT, SOUND_AFTERNOON ;To say the word 'afternoon'
0A62 9AE90B----     R     1284             CALL FAR PTR ADD_SOUND_INDEX
0A67 E98A00               1285             JMP SERIAL_END
                          1286             
0A6A                      1287     DISPLAY_WRONG_LOGIN:
0A6A C606CE0100           1288             MOV SERIAL_INDEX, 00H
0A6F C606C30101           1289             MOV TRIGGER_A_FLAG, 01H
0A74 C606EE0100           1290             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0A79 9A1806----     R     1291             CALL FAR PTR STATE_TRANSITION
0A7E EB7490               1292             JMP SERIAL_END
                          1293             
0A81                      1294     DISPLAY_WRONG_BARCODE:
0A81 803EF40101           1295             CMP REFUND_FLAG, 01H
0A86 7519                 1296             JNE NORMAL_WRONG_BARCODE
0A88 C606F40100           1297             MOV REFUND_FLAG, 00H
0A8D C606EE0102           1298             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0A92 803ECF0131           1299             CMP ITEM_PRICE[0], '1'
0A97 742E                 1300             JE SHOW_ALPHABET_P
0A99 C606C20101           1301             MOV TRIGGER_E_FLAG, 01H
0A9E EB0B90               1302             JMP CONTINUE_SEND_ERROR
0AA1                      1303     NORMAL_WRONG_BARCODE:
0AA1 C606EE0105           1304             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0AA6 C606C20101           1305             MOV TRIGGER_E_FLAG, 01H
0AAB                      1306     CONTINUE_SEND_ERROR:
0AAB C606CE0100           1307             MOV SERIAL_INDEX, 00H
0AB0 C606F20100           1308             MOV MODIFY_ITEM_FLAG, 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   29


LOC  OBJ                  LINE     SOURCE

0AB5 C606C50101           1309             MOV SHOW_BCD_ONCE_FLAG, 01H
0ABA C606AB0101           1310             MOV SAY_SOUND_ONCE_FLAG, 01H    
0ABF 9A1806----     R     1311             CALL FAR PTR STATE_TRANSITION
0AC4 EB2E90               1312             JMP SERIAL_END
0AC7                      1313     SHOW_ALPHABET_P:
0AC7 C606C40101           1314             MOV TRIGGER_P_FLAG, 01H
0ACC EBDD                 1315             JMP CONTINUE_SEND_ERROR
                          1316             
0ACE                      1317     DISPLAY_WRONG_QUANTITY:
0ACE C606EE0105           1318             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0AD3 C606F20100           1319             MOV MODIFY_ITEM_FLAG, 00H
0AD8 C606C50101           1320             MOV SHOW_BCD_ONCE_FLAG, 01H
0ADD C606AB0101           1321             MOV SAY_SOUND_ONCE_FLAG, 01H
0AE2 9A1806----     R     1322             CALL FAR PTR STATE_TRANSITION
0AE7 9A6806----     R     1323             CALL FAR PTR DISPLAY_PRICE_ON_BCD
0AEC C606CE0100           1324             MOV SERIAL_INDEX, 00H
0AF1 EB0190               1325             JMP SERIAL_END
                          1326             
0AF4                      1327     SERIAL_END:
0AF4 5A                   1328             POP DX
0AF5 59                   1329             POP     CX
0AF6 5B                   1330             POP     BX
0AF7 58                   1331             POP AX
0AF8 CB                   1332             RET
                          1333     SERIAL_REC_ACTION       ENDP
                          1334     
                          1335     
                          1336     ;Procedure that will send the cash register input to the PC via serial
0AF9                      1337     SEND_TO_PC PROC FAR     
0AF9 50                   1338             PUSH AX
0AFA 53                   1339             PUSH BX
0AFB 51                   1340             PUSH CX
                          1341     
0AFC 803EF40101           1342             CMP REFUND_FLAG, 01H
0B01 7455                 1343             JE FIRST_JUMP_CANCEL_BARCODE
                          1344             
0B03 803EF30101           1345             CMP USERNAME_FLAG, 01H
0B08 740D                 1346             JE SEND_LOGIN_TO_PC
                          1347             
0B0A 803EEE0104           1348             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0B0F 744A                 1349             JE SEND_TRANSACTION_TO_PC
                          1350             
0B11 EB4590               1351             JMP FIRST_JUMP_CANCEL_BARCODE
                          1352             
0B14 E9CE00               1353             JMP SEND_PC_END
                          1354     
0B17                      1355     SEND_LOGIN_TO_PC:       
0B17 B028                 1356             MOV AL, '('
0B19 9A0000----     E     1357             CALL FAR PTR PRINT_CHAR
0B1E 33C9                 1358             XOR CX, CX
0B20 33DB                 1359             XOR BX, BX
0B22 B106                 1360             MOV CL, KBD_USERNAME_LENGTH     
0B24                      1361     SEND_USERNAME:
0B24 8A475D               1362             MOV AL, USER_USERNAME[BX]
0B27 9A0000----     E     1363             CALL FAR PTR PRINT_CHAR
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   30


LOC  OBJ                  LINE     SOURCE

0B2C 43                   1364             INC BX
0B2D E2F5                 1365             LOOP SEND_USERNAME              
0B2F B03B                 1366             MOV AL, ';'
0B31 9A0000----     E     1367             CALL FAR PTR PRINT_CHAR
0B36 33DB                 1368             XOR BX, BX
0B38 B106                 1369             MOV CL, KBD_USERNAME_LENGTH     
0B3A                      1370     SEND_PASSWORD:
0B3A 8A4763               1371             MOV AL, USER_PASSWORD[BX]
0B3D 02C3                 1372             ADD AL, BL
0B3F 040F                 1373             ADD AL, 15
0B41 9A0000----     E     1374             CALL FAR PTR PRINT_CHAR
0B46 43                   1375             INC BX
0B47 E2F1                 1376             LOOP SEND_PASSWORD      
0B49 B029                 1377             MOV AL, ')'
0B4B 9A0000----     E     1378             CALL FAR PTR PRINT_CHAR 
0B50 C606F30100           1379             MOV USERNAME_FLAG, 00H
0B55 E98D00               1380             JMP SEND_PC_END
                          1381             
0B58                      1382     FIRST_JUMP_CANCEL_BARCODE:
0B58 EB5D90               1383             JMP SEND_CANCEL_BARCODE_PC
                          1384             
0B5B                      1385     SEND_TRANSACTION_TO_PC:
0B5B 803EF20101           1386             CMP MODIFY_ITEM_FLAG, 01H
0B60 740C                 1387             JE SEND_HASH_CHARACTER
0B62 803EF50101           1388             CMP ANDROID_FLAG, 01H
0B67 740F                 1389             JE SEND_AT_CHARACTER
0B69 B05B                 1390             MOV AL, '['
0B6B EB1290               1391             JMP CONTINUE_SENDING_BARCODE
0B6E                      1392     SEND_HASH_CHARACTER:    
0B6E B023                 1393             MOV AL, '#'
0B70 C606EE0106           1394             MOV CASH_REGISTER_STATE, CANCEL_ITEM
0B75 EB0890               1395             JMP CONTINUE_SENDING_BARCODE
0B78                      1396     SEND_AT_CHARACTER:
0B78 C606F50100           1397             MOV ANDROID_FLAG, 00H
0B7D B040                 1398             MOV AL, '@'
0B7F                      1399     CONTINUE_SENDING_BARCODE:
0B7F 9A0000----     E     1400             CALL FAR PTR PRINT_CHAR
0B84 33C9                 1401             XOR CX, CX
0B86 33DB                 1402             XOR BX, BX
0B88 B108                 1403             MOV CL, KBD_BARCODE_LENGTH      
0B8A                      1404     SEND_BARCODE:
0B8A 8A4769               1405             MOV AL, USER_BARCODE[BX]
0B8D 9A0000----     E     1406             CALL FAR PTR PRINT_CHAR
0B92 43                   1407             INC BX
0B93 E2F5                 1408             LOOP SEND_BARCODE       
0B95 B03B                 1409             MOV AL, ';'
0B97 9A0000----     E     1410             CALL FAR PTR PRINT_CHAR
0B9C 33DB                 1411             XOR BX, BX
0B9E 8A0E7400             1412             MOV CL, USER_INPUT_LENGTH       
0BA2                      1413     SEND_QUANTITY:
0BA2 8A4771               1414             MOV AL, USER_QUANTITY[BX]
0BA5 9A0000----     E     1415             CALL FAR PTR PRINT_CHAR
0BAA 43                   1416             INC BX
0BAB E2F5                 1417             LOOP SEND_QUANTITY      
0BAD B05D                 1418             MOV AL, ']'
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   31


LOC  OBJ                  LINE     SOURCE

0BAF 9A0000----     E     1419             CALL FAR PTR PRINT_CHAR
0BB4 EB2F90               1420             JMP SEND_PC_END
                          1421             
0BB7                      1422     SEND_CANCEL_BARCODE_PC: 
0BB7 803EF40101           1423             CMP REFUND_FLAG, 01H
0BBC 7405                 1424             JE SEND_DOLLAR
0BBE B03C                 1425             MOV AL, '<'
0BC0 EB0390               1426             JMP CONTINUE_SEND_CANCEL
0BC3                      1427     SEND_DOLLAR:    
0BC3 B024                 1428             MOV AL, '$'
0BC5                      1429     CONTINUE_SEND_CANCEL:
0BC5 9A0000----     E     1430             CALL FAR PTR PRINT_CHAR
0BCA 33C9                 1431             XOR CX, CX
0BCC 33DB                 1432             XOR BX, BX
0BCE B108                 1433             MOV CL, KBD_BARCODE_LENGTH      
0BD0                      1434     SEND_ITEM_ID:
0BD0 8A4769               1435             MOV AL, USER_BARCODE[BX]
0BD3 9A0000----     E     1436             CALL FAR PTR PRINT_CHAR
0BD8 43                   1437             INC BX
0BD9 E2F5                 1438             LOOP SEND_ITEM_ID               
0BDB B03E                 1439             MOV AL, '>'
0BDD 9A0000----     E     1440             CALL FAR PTR PRINT_CHAR
0BE2 EB0190               1441             JMP SEND_PC_END
                          1442     
0BE5                      1443     SEND_PC_END:    
0BE5 59                   1444             POP     CX
0BE6 5B                   1445             POP     BX
0BE7 58                   1446             POP AX
0BE8 CB                   1447             RET
                          1448     SEND_TO_PC ENDP
                          1449     
                          1450     
                          1451     ;Procedure that will take add the necessary sound indices to the sound queue for spea
                                   ker output based on a parameter
0BE9                      1452     ADD_SOUND_INDEX PROC FAR        
0BE9 50                   1453             PUSH AX
0BEA 53                   1454             PUSH BX
0BEB 51                   1455             PUSH CX
                          1456     
0BEC 33DB                 1457             XOR BX, BX
0BEE 8A1EA901             1458             MOV BL, SOUND_TAIL
0BF2 8A0EAA01             1459             MOV CL, SOUND_INDEX_INPUT
0BF6 B002                 1460             MOV AL, 2
0BF8 F6E1                 1461             MUL CL
0BFA 88878801             1462             MOV SOUND_QUEUE[BX], AL
                          1463             
0BFE FE06A901             1464             INC SOUND_TAIL 
0C02 803EA90120           1465             CMP SOUND_TAIL, 32
0C07 7C05                 1466             JL SOUND_INDEX_END
0C09 C606A90100           1467             MOV SOUND_TAIL, 00H     
                          1468             
0C0E                      1469     SOUND_INDEX_END:        
0C0E 59                   1470             POP     CX
0C0F 5B                   1471             POP     BX
0C10 58                   1472             POP AX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   32


LOC  OBJ                  LINE     SOURCE

0C11 CB                   1473             RET
                          1474     ADD_SOUND_INDEX ENDP
                          1475     
                          1476     
                          1477     ;Procedure that will convert a price received on the serial into a format which is sa
                                   y-able on the speaker
0C12                      1478     POPULATE_SOUND_QUEUE PROC FAR   
0C12 50                   1479             PUSH AX
0C13 53                   1480             PUSH BX
0C14 51                   1481             PUSH CX
                          1482     
0C15 33DB                 1483             XOR BX, BX
0C17 33C9                 1484             XOR CX, CX
                          1485             
0C19 802ED90130           1486             SUB     PLACE_VALUE, 48
0C1E 8A0ECE01             1487             MOV CL, SERIAL_INDEX
0C22 80E902               1488             SUB CL, 2
0C25 880ECE01             1489             MOV SERIAL_INDEX, CL    
                          1490             
0C29                      1491     LOAD_SOUND_QUEUE:
0C29 8A87CF01             1492             MOV AL, ITEM_PRICE[BX]
0C2D 3C2E                 1493             CMP AL, '.'
0C2F 7403                 1494             JE SAY_CENTS_VALUE
0C31 EB3490               1495             JMP SAY_OTHER_VALUES
                          1496             
0C34                      1497     SAY_CENTS_VALUE:
0C34 803EDE0100           1498             CMP CENTS_AND_FLAG, 00H
0C39 740A                 1499             JE CONTINUE_SAYING_CENTS
0C3B C606AA011E           1500             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0C40 9AE90B----     R     1501             CALL FAR PTR ADD_SOUND_INDEX
                          1502             
0C45                      1503     CONTINUE_SAYING_CENTS:
0C45 43                   1504             INC BX
0C46 8A87CF01             1505             MOV AL, ITEM_PRICE[BX]
0C4A A2DB01               1506             MOV TWO_DIGIT_SOUND[0], AL
0C4D 43                   1507             INC BX
0C4E 8A87CF01             1508             MOV AL, ITEM_PRICE[BX]
0C52 A2DC01               1509             MOV TWO_DIGIT_SOUND[1], AL
0C55 9A9E0D----     R     1510             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0C5A C606AA0122           1511             MOV SOUND_INDEX_INPUT, SOUND_CENTS ;To say the word 'cents'
0C5F 9AE90B----     R     1512             CALL FAR PTR ADD_SOUND_INDEX 
0C64 E92401               1513             JMP SOUND_POPULATE_END
                          1514             
0C67                      1515     SAY_OTHER_VALUES:       
0C67 3C30                 1516             CMP AL, '0'
0C69 7520                 1517             JNE CHECK_OTHER_VALUES
0C6B 803EDF0101           1518             CMP THOUSAND_FLAG, 01H
0C70 7516                 1519             JNE EXIT_FROM_PROCEDURE
0C72 803ED90104           1520             CMP PLACE_VALUE, 4
0C77 750F                 1521             JNE EXIT_FROM_PROCEDURE
0C79 C606AA011D           1522             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0C7E 9AE90B----     R     1523             CALL FAR PTR ADD_SOUND_INDEX 
0C83 C606DF0100           1524             MOV THOUSAND_FLAG, 00H
                          1525             
0C88                      1526     EXIT_FROM_PROCEDURE:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   33


LOC  OBJ                  LINE     SOURCE

0C88 E9DF00               1527             JMP CONTINUE_NEXT_ITERATION
                          1528             
0C8B                      1529     CHECK_OTHER_VALUES:     
0C8B 803ED90106           1530             CMP PLACE_VALUE, 6
0C90 7423                 1531             JE PROCESS_6th_DIGIT
                          1532             
0C92 803ED90105           1533             CMP PLACE_VALUE, 5
0C97 7443                 1534             JE PROCESS_5th_DIGIT
                          1535             
0C99 803ED90104           1536             CMP PLACE_VALUE, 4
0C9E 7439                 1537             JE TEMP_JUMP_4th_DIGIT
                          1538             
0CA0 803ED90103           1539             CMP PLACE_VALUE, 3
0CA5 740E                 1540             JE PROCESS_6th_DIGIT
                          1541             
0CA7 803ED90102           1542             CMP PLACE_VALUE, 2
0CAC 742E                 1543             JE PROCESS_5th_DIGIT
                          1544             
0CAE 803ED90101           1545             CMP PLACE_VALUE, 1
0CB3 7475                 1546             JE PROCESS_4th_DIGIT
                          1547             
0CB5                      1548     PROCESS_6th_DIGIT:
0CB5 C606DB0130           1549             MOV TWO_DIGIT_SOUND[0], '0'
0CBA A2DC01               1550             MOV TWO_DIGIT_SOUND[1], AL
0CBD 9A9E0D----     R     1551             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0CC2 C606AA011C           1552             MOV SOUND_INDEX_INPUT, SOUND_HUNDRED ;To say the word 'Hundred'
0CC7 9AE90B----     R     1553             CALL FAR PTR ADD_SOUND_INDEX 
0CCC C606DD0101           1554             MOV AND_FLAG, 01H
0CD1 C606DF0101           1555             MOV THOUSAND_FLAG, 01H
0CD6 E99100               1556             JMP CONTINUE_NEXT_ITERATION
                          1557             
0CD9                      1558     TEMP_JUMP_4th_DIGIT:
0CD9 EB4F90               1559             JMP PROCESS_4th_DIGIT
                          1560             
0CDC                      1561     PROCESS_5th_DIGIT:
0CDC C606DF0100           1562             MOV THOUSAND_FLAG, 00H
0CE1 803EDD0100           1563             CMP AND_FLAG, 00H
0CE6 740A                 1564             JE CONTINUE_WITH_5th_DIGIT
0CE8 C606AA011E           1565             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0CED 9AE90B----     R     1566             CALL FAR PTR ADD_SOUND_INDEX
                          1567     
0CF2                      1568     CONTINUE_WITH_5th_DIGIT:
0CF2 8A87CF01             1569             MOV AL, ITEM_PRICE[BX]
0CF6 A2DB01               1570             MOV TWO_DIGIT_SOUND[0], AL
0CF9 43                   1571             INC BX
0CFA 8A87CF01             1572             MOV AL, ITEM_PRICE[BX]
0CFE A2DC01               1573             MOV TWO_DIGIT_SOUND[1], AL
0D01 9A9E0D----     R     1574             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0D06 803ED90103           1575             CMP PLACE_VALUE, 3
0D0B 7E0A                 1576             JLE CONTINUE_WITH_REST_OF_5th_DIGIT
0D0D C606AA011D           1577             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0D12 9AE90B----     R     1578             CALL FAR PTR ADD_SOUND_INDEX 
                          1579             
0D17                      1580     CONTINUE_WITH_REST_OF_5th_DIGIT:
0D17 FE0ED901             1581             DEC PLACE_VALUE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   34


LOC  OBJ                  LINE     SOURCE

0D1B C606DD0100           1582             MOV AND_FLAG, 00H
0D20 49                   1583             DEC CX
0D21 EB0490               1584             JMP FIRST_JMP_ITERATION 
                          1585                     
0D24                      1586     FIRST_JMP_TO_LOAD:
0D24 E902FF               1587             JMP LOAD_SOUND_QUEUE
                          1588             
0D27                      1589     FIRST_JMP_ITERATION:
0D27 EB4190               1590             JMP CONTINUE_NEXT_ITERATION
                          1591             
0D2A                      1592     PROCESS_4th_DIGIT:
0D2A C606DF0100           1593             MOV THOUSAND_FLAG, 00H
0D2F 803EDD0100           1594             CMP AND_FLAG, 00H
0D34 740A                 1595             JE CONTINUE_WITH_4th_DIGIT
0D36 C606AA011E           1596             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0D3B 9AE90B----     R     1597             CALL FAR PTR ADD_SOUND_INDEX
                          1598             
0D40                      1599     CONTINUE_WITH_4th_DIGIT:
0D40 C606DB0130           1600             MOV TWO_DIGIT_SOUND[0], '0'
0D45 8A87CF01             1601             MOV AL, ITEM_PRICE[BX]
0D49 A2DC01               1602             MOV TWO_DIGIT_SOUND[1], AL
0D4C 9A9E0D----     R     1603             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0D51 803ED90103           1604             CMP PLACE_VALUE, 3
0D56 7E0A                 1605             JLE CONTINUE_WITH_REST_OF_4th_DIGIT
0D58 C606AA011D           1606             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0D5D 9AE90B----     R     1607             CALL FAR PTR ADD_SOUND_INDEX 
0D62                      1608     CONTINUE_WITH_REST_OF_4th_DIGIT:
0D62 C606DD0100           1609             MOV AND_FLAG, 00H
0D67 EB0190               1610             JMP CONTINUE_NEXT_ITERATION     
                          1611             
0D6A                      1612     CONTINUE_NEXT_ITERATION:
0D6A 43                   1613             INC BX
0D6B FE0ED901             1614             DEC PLACE_VALUE
0D6F 803ED90100           1615             CMP PLACE_VALUE, 0
0D74 7403                 1616             JE SAY_DOLLARS_AFTER_PRICE
0D76 EB1090               1617             JMP CONTINUE_AFTER_DOLLAR
                          1618             
0D79                      1619     SAY_DOLLARS_AFTER_PRICE:
0D79 C606DE0101           1620             MOV CENTS_AND_FLAG, 01H
0D7E C606AA0121           1621             MOV SOUND_INDEX_INPUT, SOUND_DOLLARS ;To say the word 'Dollars'
0D83 9AE90B----     R     1622             CALL FAR PTR ADD_SOUND_INDEX 
                          1623             
0D88                      1624     CONTINUE_AFTER_DOLLAR:          
0D88 49                   1625             DEC CX
0D89 7599                 1626             JNZ FIRST_JMP_TO_LOAD
                          1627             
0D8B                      1628     SOUND_POPULATE_END:     
0D8B C606CE0100           1629             MOV SERIAL_INDEX, 00H
0D90 C606DD0100           1630             MOV AND_FLAG, 00H
0D95 C606DE0100           1631             MOV CENTS_AND_FLAG, 00H
0D9A 59                   1632             POP     CX
0D9B 5B                   1633             POP     BX
0D9C 58                   1634             POP AX
0D9D CB                   1635             RET
                          1636     POPULATE_SOUND_QUEUE ENDP
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   35


LOC  OBJ                  LINE     SOURCE

                          1637     
                          1638     
                          1639     ;Procedure that will take in  a two digit value and add the corresponding sound indic
                                   es to the sound queue
0D9E                      1640     PROCESS_TWO_DIGIT_SOUND PROC FAR        
0D9E 50                   1641             PUSH AX
0D9F 52                   1642             PUSH DX
                          1643     
0DA0 8A16DB01             1644             MOV DL, TWO_DIGIT_SOUND[0]
0DA4 80EA30               1645             SUB DL, 48
0DA7 8AF2                 1646             MOV DH, DL
0DA9 B00A                 1647             MOV AL, 10
0DAB F6E2                 1648             MUL DL
0DAD 8AD0                 1649             MOV DL, AL
                          1650             
0DAF A0DC01               1651             MOV AL, TWO_DIGIT_SOUND[1]
0DB2 2C30                 1652             SUB AL, 48
0DB4 8AE0                 1653             MOV AH, AL
0DB6 02C2                 1654             ADD AL, DL
                          1655             
0DB8 3C14                 1656             CMP AL, 20
0DBA 7F0B                 1657             JG PLAY_GREATER_THAN_20
0DBC A2AA01               1658             MOV SOUND_INDEX_INPUT, AL
0DBF 9AE90B----     R     1659             CALL FAR PTR ADD_SOUND_INDEX
                          1660             
0DC4 EB1B90               1661             JMP TWO_DIGIT_SOUND_END 
                          1662             
0DC7                      1663     PLAY_GREATER_THAN_20:
0DC7 8AC6                 1664             MOV AL, DH
0DC9 0412                 1665             ADD AL, 18
0DCB A2AA01               1666             MOV SOUND_INDEX_INPUT, AL
0DCE 9AE90B----     R     1667             CALL FAR PTR ADD_SOUND_INDEX
                          1668             
0DD3 8AC4                 1669             MOV AL, AH
0DD5 3C00                 1670             CMP AL, 0
0DD7 7408                 1671             JE TWO_DIGIT_SOUND_END
0DD9 A2AA01               1672             MOV SOUND_INDEX_INPUT, AL
0DDC 9AE90B----     R     1673             CALL FAR PTR ADD_SOUND_INDEX
                          1674             
0DE1                      1675     TWO_DIGIT_SOUND_END:    
0DE1 5A                   1676             POP DX
0DE2 58                   1677             POP AX
0DE3 CB                   1678             RET
                          1679     PROCESS_TWO_DIGIT_SOUND ENDP
                          1680     
                          1681     
                          1682     ;Procedure that will add the incoming price to the total price
0DE4                      1683     ADD_INCOMING_PRICE PROC FAR     
0DE4 50                   1684             PUSH AX
0DE5 53                   1685             PUSH BX
0DE6 51                   1686             PUSH CX
0DE7 52                   1687             PUSH DX
                          1688     
0DE8 A0DA01               1689             MOV AL, TMP_PLACE_VALUE
0DEB 2C30                 1690             SUB AL, 48
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   36


LOC  OBJ                  LINE     SOURCE

0DED A2D901               1691             MOV PLACE_VALUE, AL     
                          1692             
0DF0 33C9                 1693             XOR CX, CX
                          1694             
0DF2 A0EA01               1695             MOV AL, TOTAL_PLACE_VALUE
0DF5 3A06D901             1696             CMP AL, PLACE_VALUE
0DF9 745F                 1697             JE FIRST_JMP_ADDITION
0DFB 7C03                 1698             JL ADD_ZERO_TOTAL
0DFD EB6490               1699             JMP ADD_ZERO_INCOMING
                          1700             
0E00                      1701     ADD_ZERO_TOTAL:
0E00 8A16D901             1702             MOV DL, PLACE_VALUE
0E04 2AD0                 1703             SUB DL, AL
0E06 0016EA01             1704             ADD TOTAL_PLACE_VALUE, DL
0E0A 8ACA                 1705             MOV CL, DL
0E0C                      1706     START_SHIFT_TOTAL:
0E0C A0E801               1707             MOV AL, TOTAL_PRICE[8]
0E0F A2E901               1708             MOV TOTAL_PRICE[9], AL
0E12 A0E701               1709             MOV AL, TOTAL_PRICE[7]
0E15 A2E801               1710             MOV TOTAL_PRICE[8], AL
0E18 A0E601               1711             MOV AL, TOTAL_PRICE[6]
0E1B A2E701               1712             MOV TOTAL_PRICE[7], AL
0E1E A0E501               1713             MOV AL, TOTAL_PRICE[5]
0E21 A2E601               1714             MOV TOTAL_PRICE[6], AL
0E24 A0E401               1715             MOV AL, TOTAL_PRICE[4]
0E27 A2E501               1716             MOV TOTAL_PRICE[5], AL
0E2A A0E301               1717             MOV AL, TOTAL_PRICE[3]
0E2D A2E401               1718             MOV TOTAL_PRICE[4], AL
0E30 A0E201               1719             MOV AL, TOTAL_PRICE[2]
0E33 A2E301               1720             MOV TOTAL_PRICE[3], AL
0E36 A0E101               1721             MOV AL, TOTAL_PRICE[1]
0E39 A2E201               1722             MOV TOTAL_PRICE[2], AL
0E3C A0E001               1723             MOV AL, TOTAL_PRICE[0]
0E3F A2E101               1724             MOV TOTAL_PRICE[1], AL
0E42 803EF10101           1725             CMP SWAP_JUMP_FLAG, 01H
0E47 7414                 1726             JE FIRST_CONTINUE_SWAP
0E49 803EF10102           1727             CMP SWAP_JUMP_FLAG, 02H
0E4E 7410                 1728             JE SECOND_CONTINUE_SWAP
0E50 C606E00130           1729             MOV TOTAL_PRICE[0], '0'
0E55 E2B5                 1730             LOOP START_SHIFT_TOTAL
0E57 EB5390               1731             JMP START_ADDITION
                          1732             
0E5A                      1733     FIRST_JMP_ADDITION:
0E5A EB5090               1734             JMP START_ADDITION
                          1735             
0E5D                      1736     FIRST_CONTINUE_SWAP:
0E5D E9A500               1737             JMP CONTINUE_FIRST_SWAP
                          1738             
0E60                      1739     SECOND_CONTINUE_SWAP:
0E60 E90A01               1740             JMP CONTINUE_SECOND_SWAP
                          1741             
0E63                      1742     ADD_ZERO_INCOMING:
0E63 8A16D901             1743             MOV DL, PLACE_VALUE
0E67 2AC2                 1744             SUB AL, DL
0E69 0006D901             1745             ADD PLACE_VALUE, AL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   37


LOC  OBJ                  LINE     SOURCE

0E6D 8AC8                 1746             MOV CL, AL
0E6F                      1747     START_SHIFT_INCOMING:
0E6F A0D701               1748             MOV AL, ITEM_PRICE[8]
0E72 A2D801               1749             MOV ITEM_PRICE[9], AL
0E75 A0D601               1750             MOV AL, ITEM_PRICE[7]
0E78 A2D701               1751             MOV ITEM_PRICE[8], AL
0E7B A0D501               1752             MOV AL, ITEM_PRICE[6]
0E7E A2D601               1753             MOV ITEM_PRICE[7], AL
0E81 A0D401               1754             MOV AL, ITEM_PRICE[5]
0E84 A2D501               1755             MOV ITEM_PRICE[6], AL
0E87 A0D301               1756             MOV AL, ITEM_PRICE[4]
0E8A A2D401               1757             MOV ITEM_PRICE[5], AL
0E8D A0D201               1758             MOV AL, ITEM_PRICE[3]
0E90 A2D301               1759             MOV ITEM_PRICE[4], AL
0E93 A0D101               1760             MOV AL, ITEM_PRICE[2]
0E96 A2D201               1761             MOV ITEM_PRICE[3], AL
0E99 A0D001               1762             MOV AL, ITEM_PRICE[1]
0E9C A2D101               1763             MOV ITEM_PRICE[2], AL
0E9F A0CF01               1764             MOV AL, ITEM_PRICE[0]
0EA2 A2D001               1765             MOV ITEM_PRICE[1], AL
0EA5 C606CF0130           1766             MOV ITEM_PRICE[0], '0'
0EAA E2C3                 1767         LOOP START_SHIFT_INCOMING   
                          1768             
0EAC                      1769     START_ADDITION:
0EAC 8A0ED901             1770             MOV CL, PLACE_VALUE
0EB0 80C103               1771             ADD CL, 3
0EB3 8AD9                 1772             MOV BL, CL
0EB5 4B                   1773             DEC BX
0EB6 33D2                 1774             XOR DX, DX
0EB8                      1775     ADD_DIGITS:
0EB8 80BFCF012E           1776             CMP ITEM_PRICE[BX], '.'
0EBD 7431                 1777             JE ADD_DECIMAL_POINT
0EBF 8A87CF01             1778             MOV AL, ITEM_PRICE[BX]
0EC3 8AA7E001             1779             MOV AH, TOTAL_PRICE[BX]
0EC7 80EC30               1780             SUB AH, 48
0ECA 2C30                 1781             SUB AL, 48
0ECC 02E0                 1782             ADD AH, AL
0ECE 02E2                 1783             ADD AH, DL
0ED0 80FC0A               1784             CMP AH, 10
0ED3 7D0C                 1785             JGE ADD_CARRY_TO_DIGIT
0ED5 80C430               1786             ADD AH, 48
0ED8 88A7E001             1787             MOV TOTAL_PRICE[BX], AH
0EDC B200                 1788             MOV DL, 00H     
0EDE EB1590               1789             JMP END_ADD_LOOP
                          1790             
0EE1                      1791     ADD_CARRY_TO_DIGIT:
0EE1 80EC0A               1792             SUB AH, 10
0EE4 80C430               1793             ADD AH, 48
0EE7 88A7E001             1794             MOV TOTAL_PRICE[BX], AH
0EEB B201                 1795             MOV DL, 01H
0EED EB0690               1796             JMP END_ADD_LOOP
                          1797             
0EF0                      1798     ADD_DECIMAL_POINT:
0EF0 C687E0012E           1799             MOV TOTAL_PRICE[BX], '.'
                          1800                     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   38


LOC  OBJ                  LINE     SOURCE

0EF5                      1801     END_ADD_LOOP:
0EF5 4B                   1802             DEC BX
0EF6 E2C0                 1803             LOOP ADD_DIGITS
                          1804             
0EF8 80FA00               1805             CMP DL, 00H
0EFB 7416                 1806             JE INCOMING_PRICE_END   
0EFD C606F10101           1807             MOV SWAP_JUMP_FLAG, 01H
0F02 E907FF               1808             JMP START_SHIFT_TOTAL
0F05                      1809     CONTINUE_FIRST_SWAP:
0F05 C606F10100           1810             MOV SWAP_JUMP_FLAG, 00H
0F0A C606E00131           1811             MOV TOTAL_PRICE[0], '1'
0F0F FE06EA01             1812             INC TOTAL_PLACE_VALUE
                          1813     
0F13                      1814     INCOMING_PRICE_END:     
0F13 5A                   1815             POP DX
0F14 59                   1816             POP     CX
0F15 5B                   1817             POP     BX
0F16 58                   1818             POP AX
0F17 CB                   1819             RET
                          1820     ADD_INCOMING_PRICE ENDP
                          1821     
                          1822     
                          1823     ;Procedure that will subtract the total price from the amount the user wants to pay a
                                   nd calculate the change
0F18                      1824     CALCULATE_CHANGE PROC FAR       
0F18 50                   1825             PUSH AX
0F19 53                   1826             PUSH BX
0F1A 51                   1827             PUSH CX
0F1B 52                   1828             PUSH DX
                          1829     
0F1C A05200               1830             MOV AL, CHANGE_PLACE_VALUE
0F1F 3A06EA01             1831             CMP AL, TOTAL_PLACE_VALUE
0F23 7F26                 1832             JG START_SUBTRACTION
0F25 7C1C                 1833             JL SAY_ERROR
                          1834             
0F27 33C9                 1835             XOR CX, CX
0F29 33DB                 1836             XOR BX, BX
0F2B 8A0EEA01             1837             MOV CL, TOTAL_PLACE_VALUE
0F2F 80C103               1838             ADD CL, 3
                          1839     
0F32                      1840     CHECK_FOR_LESSER:
0F32 8A87E001             1841             MOV AL, TOTAL_PRICE[BX]
0F36 384753               1842             CMP CHANGE_PRICE[BX], AL        
0F39 7C08                 1843             JL SAY_ERROR
0F3B 7F0E                 1844             JG START_SUBTRACTION
0F3D 43                   1845             INC BX
0F3E E2F2                 1846             LOOP CHECK_FOR_LESSER
0F40 EB0990               1847             JMP START_SUBTRACTION   
                          1848             
0F43                      1849     SAY_ERROR:
0F43 C606750001           1850             MOV CHANGE_SUCCESS_FLAG, 01H
0F48 E9EA00               1851             JMP CALCULATE_CHANGE_END        
                          1852     
0F4B                      1853     START_SUBTRACTION:      
0F4B 33C9                 1854             XOR CX, CX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   39


LOC  OBJ                  LINE     SOURCE

                          1855             
0F4D A0EA01               1856             MOV AL, TOTAL_PLACE_VALUE
0F50 3A065200             1857             CMP AL, CHANGE_PLACE_VALUE
0F54 7C03                 1858             JL SUB_ZERO_TOTAL
0F56 EB2190               1859             JMP SUBTRACT_NUMBER
                          1860             
0F59                      1861     SUB_ZERO_TOTAL:
0F59 8A165200             1862             MOV DL, CHANGE_PLACE_VALUE
0F5D 2AD0                 1863             SUB DL, AL
0F5F 0016EA01             1864             ADD TOTAL_PLACE_VALUE, DL
0F63 8ACA                 1865             MOV CL, DL
0F65                      1866     SUB_START_SHIFT_TOTAL:
0F65 C606F10102           1867             MOV SWAP_JUMP_FLAG, 02H
0F6A E99FFE               1868             JMP START_SHIFT_TOTAL
0F6D                      1869     CONTINUE_SECOND_SWAP:
0F6D C606F10100           1870             MOV SWAP_JUMP_FLAG, 00H
0F72 C606E00130           1871             MOV TOTAL_PRICE[0], '0'
0F77 E2EC                 1872             LOOP SUB_START_SHIFT_TOTAL
                          1873             
0F79                      1874     SUBTRACT_NUMBER:
0F79 8A0EEA01             1875             MOV CL, TOTAL_PLACE_VALUE
0F7D 80C103               1876             ADD CL, 3
0F80 8AD9                 1877             MOV BL, CL
0F82 4B                   1878             DEC BX
0F83 33D2                 1879             XOR DX, DX
0F85                      1880     SUBTRACT_DIGITS:
0F85 80BFE0012E           1881             CMP TOTAL_PRICE[BX], '.'
0F8A 7459                 1882             JE ADD_DECIMAL_POINT_SUB
0F8C 8A87E001             1883             MOV AL, TOTAL_PRICE[BX]
0F90 8A6753               1884             MOV AH, CHANGE_PRICE[BX]
0F93 80EC30               1885             SUB AH, 48
0F96 2C30                 1886             SUB AL, 48
0F98 3AE0                 1887             CMP AH, AL
0F9A 7C36                 1888             JL BORROW_SUBTRACT
0F9C 7F24                 1889             JG NORMAL_SUBTRACT
                          1890     
0F9E                      1891     EQUAL_SUBTRACT: 
0F9E 2AE0                 1892             SUB AH, AL
0FA0 2AE2                 1893             SUB AH, DL
0FA2 80FC00               1894             CMP AH, 0
0FA5 7C0C                 1895             JL LESSER_SUBTRACT
                          1896             
0FA7 B200                 1897             MOV DL, 0
0FA9 80C430               1898             ADD AH, 48
0FAC 88A7E001             1899             MOV TOTAL_PRICE[BX], AH
0FB0 EB3890               1900             JMP END_SUB_LOOP
                          1901             
0FB3                      1902     LESSER_SUBTRACT:
0FB3 80C40A               1903             ADD AH, 10
0FB6 B201                 1904             MOV DL, 1
0FB8 80C430               1905             ADD AH, 48
0FBB 88A7E001             1906             MOV TOTAL_PRICE[BX], AH
0FBF EB2990               1907             JMP END_SUB_LOOP
                          1908             
0FC2                      1909     NORMAL_SUBTRACT:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   40


LOC  OBJ                  LINE     SOURCE

0FC2 2AE0                 1910             SUB AH, AL
0FC4 2AE2                 1911             SUB AH, DL
0FC6 B200                 1912             MOV DL, 0
0FC8 80C430               1913             ADD AH, 48
0FCB 88A7E001             1914             MOV TOTAL_PRICE[BX], AH
0FCF EB1990               1915             JMP END_SUB_LOOP
                          1916             
0FD2                      1917     BORROW_SUBTRACT:
0FD2 2AE0                 1918             SUB AH, AL
0FD4 2AE2                 1919             SUB AH, DL
0FD6 80C40A               1920             ADD AH, 10
0FD9 B201                 1921             MOV DL, 1
0FDB 80C430               1922             ADD AH, 48
0FDE 88A7E001             1923             MOV TOTAL_PRICE[BX], AH
0FE2 EB0690               1924             JMP END_SUB_LOOP
                          1925             
0FE5                      1926     ADD_DECIMAL_POINT_SUB:
0FE5 C687E0012E           1927             MOV TOTAL_PRICE[BX], '.'
                          1928                     
0FEA                      1929     END_SUB_LOOP:
0FEA 4B                   1930             DEC BX
0FEB E298                 1931             LOOP SUBTRACT_DIGITS
                          1932             
0FED                      1933     REMOVE_SUB_ZERO:
0FED 803EE00130           1934             CMP TOTAL_PRICE[0], '0'
0FF2 7541                 1935             JNE CALCULATE_CHANGE_END
0FF4 A0E101               1936             MOV AL, TOTAL_PRICE[1]
0FF7 A2E001               1937             MOV TOTAL_PRICE[0], AL
0FFA A0E201               1938             MOV AL, TOTAL_PRICE[2]
0FFD A2E101               1939             MOV TOTAL_PRICE[1], AL
1000 A0E301               1940             MOV AL, TOTAL_PRICE[3]
1003 A2E201               1941             MOV TOTAL_PRICE[2], AL
1006 A0E401               1942             MOV AL, TOTAL_PRICE[4]
1009 A2E301               1943             MOV TOTAL_PRICE[3], AL
100C A0E501               1944             MOV AL, TOTAL_PRICE[5]
100F A2E401               1945             MOV TOTAL_PRICE[4], AL
1012 A0E601               1946             MOV AL, TOTAL_PRICE[6]
1015 A2E501               1947             MOV TOTAL_PRICE[5], AL
1018 A0E701               1948             MOV AL, TOTAL_PRICE[7]
101B A2E601               1949             MOV TOTAL_PRICE[6], AL
101E A0E801               1950             MOV AL, TOTAL_PRICE[8]
1021 A2E701               1951             MOV TOTAL_PRICE[7], AL
1024 A0E901               1952             MOV AL, TOTAL_PRICE[9]
1027 A2E801               1953             MOV TOTAL_PRICE[8], AL
102A C606E90130           1954             MOV TOTAL_PRICE[9], '0'
102F FE0EEA01             1955             DEC TOTAL_PLACE_VALUE
1033 EBB8                 1956             JMP REMOVE_SUB_ZERO
                          1957             
1035                      1958     CALCULATE_CHANGE_END:   
1035 5A                   1959             POP DX
1036 59                   1960             POP     CX
1037 5B                   1961             POP     BX
1038 58                   1962             POP AX
1039 CB                   1963             RET
                          1964     CALCULATE_CHANGE ENDP
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   41


LOC  OBJ                  LINE     SOURCE

                          1965     
                          1966     
                          1967     ;Procedure that is called whenever a timer interrupt is received
103A                      1968     TIMER2_ACTION   PROC    FAR
103A FE06C601             1969             INC DS:TIMER_COUNTER_BCD
103E FF06C701             1970         INC DS:TIMER_COUNTER_KBD
                          1971     
1042 833EC70130           1972         CMP DS:TIMER_COUNTER_KBD, TIMER_COUNTER_KBD_LEN
1047 741C                 1973         JE EXECUTE_KBD
                          1974             
1049 803EC60118           1975         CMP DS:TIMER_COUNTER_BCD, TIMER_COUNTER_BCD_LEN
104E 7408                 1976         JE EXECUTE_BCD
                          1977             
1050                      1978     EXECUTE_SOUND:
1050 9A1C11----     R     1979             CALL FAR PTR PLAY_SOUND
1055 EB2D90               1980             JMP T2_END
                          1981     
1058                      1982     EXECUTE_BCD:
1058 C606C60100           1983             MOV DS:TIMER_COUNTER_BCD, 0
105D 9AE610----     R     1984             CALL FAR PTR DISPLAY_7SEGMENT
1062 EB2090               1985             JMP T2_END
                          1986             
1065                      1987     EXECUTE_KBD:
1065 9A1C11----     R     1988             CALL FAR PTR PLAY_SOUND
106A 9A1C11----     R     1989             CALL FAR PTR PLAY_SOUND
106F C706C7010000         1990             MOV DS:TIMER_COUNTER_KBD, 0
1075 9AB806----     R     1991             CALL FAR PTR KEYPAD_READ
107A 9A1C11----     R     1992             CALL FAR PTR PLAY_SOUND
107F 9A1C11----     R     1993             CALL FAR PTR PLAY_SOUND
                          1994             
1084                      1995     T2_END:
1084 CB                   1996             RET
                          1997     TIMER2_ACTION   ENDP
                          1998     
                          1999     
                          2000     ;Procedure that will reset the 7-segment displays back to zeroes
1085                      2001     CLEAR_7SEGMENT PROC FAR
1085 50                   2002             PUSH AX
1086 53                   2003             PUSH BX
1087 51                   2004             PUSH CX
                          2005     
1088 33DB                 2006             XOR BX, BX
108A B90600               2007             MOV CX, 06
                          2008             
108D                      2009     CLEAR_SINGLE_BCD:
108D 803EC10101           2010             CMP TRIGGER_L_FLAG, 01H
1092 741B                 2011             JE ASSIGN_BCD_VALUE_TO_L
                          2012             
1094 803EC20101           2013             CMP TRIGGER_E_FLAG, 01H
1099 741A                 2014             JE ASSIGN_BCD_VALUE_TO_E
                          2015             
109B 803EC30101           2016             CMP TRIGGER_A_FLAG, 01H
10A0 7419                 2017             JE ASSIGN_BCD_VALUE_TO_A
                          2018             
10A2 803EC40101           2019             CMP TRIGGER_P_FLAG, 01H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   42


LOC  OBJ                  LINE     SOURCE

10A7 7418                 2020             JE ASSIGN_BCD_VALUE_TO_P
                          2021             
10A9 A0AC01               2022             MOV AL, BCD_NUMBERS[0]
10AC EB1990               2023             JMP ASSIGN_TO_BCD
                          2024             
10AF                      2025     ASSIGN_BCD_VALUE_TO_L:
10AF A0B601               2026             MOV AL, BCD_NUMBERS[10]
10B2 EB1390               2027             JMP ASSIGN_TO_BCD
                          2028             
10B5                      2029     ASSIGN_BCD_VALUE_TO_E:
10B5 A0B701               2030             MOV AL, BCD_NUMBERS[11]
10B8 EB0D90               2031             JMP ASSIGN_TO_BCD
                          2032             
10BB                      2033     ASSIGN_BCD_VALUE_TO_A:
10BB A0B801               2034             MOV AL, BCD_NUMBERS[12]
10BE EB0790               2035             JMP ASSIGN_TO_BCD
                          2036             
10C1                      2037     ASSIGN_BCD_VALUE_TO_P:
10C1 A0B901               2038             MOV AL, BCD_NUMBERS[13] 
10C4 EB0190               2039             JMP ASSIGN_TO_BCD
                          2040             
10C7                      2041     ASSIGN_TO_BCD:
10C7 8887BA01             2042             MOV DS:BCD_DISPLAY[BX], AL
10CB 43                   2043             INC BX
10CC E2BF                 2044             LOOP CLEAR_SINGLE_BCD
                          2045             
10CE C606C10100           2046             MOV TRIGGER_L_FLAG, 00H
10D3 C606C20100           2047             MOV TRIGGER_E_FLAG, 00H
10D8 C606C30100           2048             MOV TRIGGER_A_FLAG, 00H
10DD C606C40100           2049             MOV TRIGGER_P_FLAG, 00H
                          2050     
10E2 59                   2051             POP CX
10E3 5B                   2052             POP BX
10E4 58                   2053             POP AX
10E5 CB                   2054             RET
                          2055     CLEAR_7SEGMENT ENDP
                          2056     
                          2057     
                          2058     ;Procedure that will display digits on the BCD based on the BCD queue
10E6                      2059     DISPLAY_7SEGMENT PROC FAR       
10E6 50                   2060             PUSH AX
10E7 53                   2061             PUSH BX
10E8 51                   2062             PUSH CX
10E9 52                   2063             PUSH DX
                          2064     
10EA 33DB                 2065             XOR BX, BX
                          2066             
                          2067             ; BCD Select: [-] [-] [6] [5] [4] [3] [2] [1]
10EC BA0001               2068             MOV DX, PCS2_ADDR
10EF B0FE                 2069             MOV AL, 0FEH
10F1 8A0EC001             2070             MOV CL, DS:CURRENT_BCD
10F5 D2C0                 2071             ROL AL, CL
10F7 EE                   2072             OUT DX, AL
                          2073             
10F8 BA8001               2074             MOV DX, PCS3_ADDR
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   43


LOC  OBJ                  LINE     SOURCE

10FB 8A1EC001             2075             MOV BL, CURRENT_BCD
10FF 8A87BA01             2076             MOV AL, BCD_DISPLAY[BX]
1103 EE                   2077             OUT DX, AL
                          2078             
1104 FE06C001             2079             INC CURRENT_BCD
1108 803EC00106           2080             CMP CURRENT_BCD, 06H
110D 7403                 2081             JE RESET_CURRENT_BCD
110F EB0690               2082             JMP DISP_END
                          2083             
1112                      2084     RESET_CURRENT_BCD:
1112 C606C00100           2085             MOV CURRENT_BCD, 00H
                          2086     
1117                      2087     DISP_END:       
1117 5A                   2088             POP DX
1118 59                   2089             POP     CX
1119 5B                   2090             POP     BX
111A 58                   2091             POP AX
111B CB                   2092             RET
                          2093     DISPLAY_7SEGMENT ENDP
                          2094     
                          2095     
                          2096     ;Procedure that will play sounds on the speaker based on the speaker queue
111C                      2097     PLAY_SOUND PROC FAR     
111C 50                   2098             PUSH AX
111D 53                   2099             PUSH BX
111E 56                   2100             PUSH SI
111F 52                   2101             PUSH DX
                          2102             
1120 B8----         R     2103             MOV AX, DATA_SEG
1123 8ED8                 2104         MOV DS, AX
                          2105             
1125 A0A801               2106             MOV AL, SOUND_HEAD
1128 3806A901             2107             CMP SOUND_TAIL, AL
112C 7470                 2108             JE SOUND_END
                          2109             
112E 33DB                 2110             XOR BX, BX
1130 8A1EA801             2111             MOV BL, SOUND_HEAD 
1134 8A9F8801             2112             MOV BL, SOUND_QUEUE[BX]
1138 8B87D000             2113             MOV AX, SOUND_SIZE[BX]
                          2114             
113C 833E860100           2115             CMP SOUND_COUNT, 0000H
1141 7438                 2116             JE ASSIGN_ADDRESS
1143 39068601             2117             CMP SOUND_COUNT, AX
1147 7E38                 2118             JLE SOUND_PLAY
                          2119             
1149 FE06A801             2120             INC SOUND_HEAD
114D 803EA80120           2121             CMP SOUND_HEAD, 32
1152 7C05                 2122             JL SOUND_INITIALIZE_CONTINUE
1154 C606A80100           2123             MOV SOUND_HEAD, 00H
                          2124     
1159                      2125     SOUND_INITIALIZE_CONTINUE:
1159 C70686010000         2126             MOV SOUND_COUNT, 0000H
115F A0A801               2127             MOV AL, SOUND_HEAD
1162 3806A901             2128             CMP SOUND_TAIL, AL
1166 7436                 2129             JE SOUND_END
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    08:10:23  12/04/;3  PAGE   44


LOC  OBJ                  LINE     SOURCE

                          2130             
1168 33DB                 2131             XOR BX, BX
116A 8A1EA801             2132             MOV BL, SOUND_HEAD
116E 8A9F8801             2133             MOV BL, SOUND_QUEUE[BX]
1172 8B4776               2134             MOV AX, SOUND_OFFSET[BX]
1175 A38401               2135             MOV SOUND_ADDRESS, AX
1178 EB0790               2136             JMP SOUND_PLAY
                          2137             
117B                      2138     ASSIGN_ADDRESS:
117B 8B4776               2139             MOV AX, SOUND_OFFSET[BX]
117E A38401               2140             MOV SOUND_ADDRESS, AX
                          2141             
1181                      2142     SOUND_PLAY:                             
1181 8B368401             2143             MOV SI, SOUND_ADDRESS
1185 8B872A01             2144             MOV AX, EEPROM_START[BX]
1189 8ED8                 2145             MOV DS, AX
                          2146             
118B 8A04                 2147             MOV AL, [SI]
118D BA0002               2148             MOV DX, PCS4_ADDR
1190 EE                   2149             OUT DX, AL
                          2150                     
1191 B8----         R     2151             MOV AX, DATA_SEG
1194 8ED8                 2152         MOV DS, AX
                          2153             
1196 FF068601             2154             INC SOUND_COUNT
119A FF068401             2155             INC SOUND_ADDRESS
                          2156     
119E                      2157     SOUND_END:      
119E 5A                   2158             POP DX
119F 5E                   2159             POP     SI
11A0 5B                   2160             POP     BX
11A1 58                   2161             POP AX
11A2 CB                   2162             RET
                          2163     PLAY_SOUND ENDP
                          2164     
                          2165     
----                      2166     CODE_SEG        ENDS
                          2167     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
