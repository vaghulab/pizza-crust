8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TIMER
OBJECT MODULE PLACED IN TIMER.OBJ
ASSEMBLER INVOKED BY:  F:\ASM86.EXE TIMER.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $MOD186
                             2 +1  $EP
                             3     NAME TIMER
                             4     
                             5     ; =========================================================================
                             6     ; Main Timer Driver Program
                             7     ; Author: Vaghul Aditya Balaji
                             8     
                             9     ; This file contains proprietary information and cannot be copied 
                            10     ; or distributed without prior permission from the author.
                            11     ; =========================================================================
                            12     
                            13     public  serial_rec_action, timer2_action
                            14     extrn   print_char:far, print_2hex:far, iodefine:far
                            15     extrn   set_timer2:far
                            16     
                            17     ;IO Setup for 80C188 
  FFA0                      18             UMCR    EQU    0FFA0H ; Upper Memory Control Register
  FFA2                      19             LMCR    EQU    0FFA2H ; Lower Memory control Register         
  FFA4                      20             PCSBA   EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA6                      21             MMCS    EQU    0FFA6H ; Used for controlling the MCS pins on the 8088
  FFA8                      22             MPCS    EQU    0FFA8H ; MMCS and PCS Alter Control Register
                            23             
  0080                      24             PORTA  EQU    0080H
  0081                      25             PORTB  EQU    0081H
  0082                      26             PORTC  EQU    0082H
  0083                      27             CWR    EQU    0083H
                            28             
  FF38                      29             INT0CON  EQU   0FF38H
  FF22                      30             EOI      EQU   0FF22H
  FF28                      31             IMASK    EQU   0FF28H
                            32             
  0100                      33             PCS2_ADDR EQU 100H ; Used for controlling which BCD displays the digit
  0180                      34             PCS3_ADDR EQU 180H ; Used for controlling the pattern that is displayed on th
                                   e BCDs
  0200                      35             PCS4_ADDR EQU 200H ; Used for controlling the DAC chip of the speaker system
                            36             
  0018                      37             TIMER_COUNTER_BCD_LEN   EQU 24
  0030                      38             TIMER_COUNTER_KBD_LEN   EQU 48
  0604                      39             TIMEOUT_COUNTER_LEN             EQU 1540
                            40             
                            41             ;Sound Mappings for playing on the speaker
  002C                      42             SOUND_SILENCE                    EQU  44
  001E                      43             SOUND_AND                        EQU  30
  0021                      44             SOUND_DOLLARS                    EQU  33
  0022                      45             SOUND_CENTS                      EQU  34
  001C                      46             SOUND_HUNDRED                    EQU  28
  001D                      47             SOUND_THOUSAND                   EQU  29
  0023                      48             SOUND_GOOD                       EQU  35
  0025                      49             SOUND_AFTERNOON                  EQU  37
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE    2


LOC  OBJ                  LINE     SOURCE

  0028                      50             SOUND_PURCHASED                  EQU  40
  001F                      51             SOUND_COST                               EQU  31
  0029                      52             SOUND_YOURCHANGEIS               EQU  41
  002A                      53             SOUND_THANKYOUANDGOODBYE EQU  42        
                            54             
                            55             ;Serial Communication Mappings
  0000                      56             NETWORK_DISABLE             EQU  00
  0001                      57             NETWORK_ENABLE              EQU  01     
  0002                      58             NETWORK_END_TRANSACTION     EQU  02
  0003                      59             NETWORK_LOGOUT                      EQU  03
  0004                      60             NETWORK_CANCEL_TRANSACTION  EQU  04
                            61             
                            62             ;Cash Register State Mappings
  0000                      63             WAITING_FOR_LOGIN     EQU  00
  0001                      64             ENTER_LOGIN_USERNAME  EQU  01
  0002                      65             WAITING_FOR_BARCODE   EQU  02
  0003                      66             ENTER_BARCODE         EQU  03
  0004                      67             ENTER_QUANTITY        EQU  04
  0005                      68             DISPLAY_ITEM_PRICE    EQU  05
  0006                      69             CANCEL_ITEM                   EQU  06
  0007                      70             END_TRANSACTION           EQU  07
  0008                      71             CHANGE_PAY                        EQU  08
                            72             
                            73             ;Keypad Character Mappings
  0000                      74             KBD_CHAR_RESET                 EQU  00
  005F                      75             KBD_BACKSPACE                  EQU  '_'
  007C                      76             KBD_ENTER                      EQU  '|'
  0041                      77             KBD_TRIGGER_LOGIN              EQU  'A'
  0042                      78             KBD_TRIGGER_TRANSACTION        EQU  'B'
  0043                      79             KBD_TRIGGER_NEW_ITEM               EQU  'C'
  0044                      80             KBD_TRIGGER_CANCEL_ITEM            EQU  'D'
  0045                      81             KBD_TRIGGER_CANCEL_TRANSACTION EQU  'E'
  0046                      82             KBD_TRIGGER_END_TRANSACTION    EQU  'F'
  0047                      83             KBD_TRIGGER_MODIFY                         EQU  'G'
  0048                      84             KBD_TRIGGER_DISPLAY_CURRENT    EQU  'H'
  0049                      85             KBD_TRIGGER_CHANGE_PAY         EQU  'I'
  004A                      86             KBD_TRIGGER_REFUND                         EQU  'J'
  004C                      87             KBD_TRIGGER_ANDROID                        EQU  'L'
                            88             
                            89             ;Keyboard Input Constants
  0006                      90             KBD_USERNAME_LENGTH  EQU  06
  0008                      91             KBD_BARCODE_LENGTH   EQU  08
  0003                      92             KBD_QUANTITY_LENGTH  EQU  03
  0008                      93             KBD_CHANGE_LENGTH    EQU  08
  0000                      94             KBD_OLD_INPUT        EQU  00
  0001                      95             KBD_NEW_INPUT        EQU  01
                            96     
                            97             
----                        98     STACK_SEG       SEGMENT
0000 (256                   99             DB      256 DUP(?)
     ??
     )
0100                       100             TOS     LABEL   WORD
----                       101     STACK_SEG       ENDS
                           102     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE    3


LOC  OBJ                  LINE     SOURCE

                           103     
----                       104     DATA_SEG        SEGMENT
0000 0A                    105             TIMER2_MESS           DB        10,13,'TIMER2 INTERRUPT    '
0001 0D
0002 54494D45523220
     494E5445525255
     505420202020
0016 2F                    106             T_COUNT               DB        2FH
0017 2F                    107             T_COUNT_SET           DB        2FH
0018 0A                    108             REC_MESS              DB        10,13,'Period of timer =     '
0019 0D
001A 506572696F6420
     6F662074696D65
     72203D20202020
     20
0030 43323237315D          109             CASH_REGISTER_ID  DB    'C2271]'
                           110             
                           111             ;Keypad Variables       
0036 7C                    112             KEYS_PART1           DB   '|','0','_','L','K','J','9','8','7','I','H','G' 
0037 30
0038 5F
0039 4C
003A 4B
003B 4A
003C 39
003D 38
003E 37
003F 49
0040 48
0041 47
0042 36                    113             KEYS_PART2           DB   '6','5','4','F','E','D','3','2','1','C','B','A'
0043 35
0044 34
0045 46
0046 45
0047 44
0048 33
0049 32
004A 31
004B 43
004C 42
004D 41
004E 00                    114             KEY_FLAG             DB   00H ;This variable is used for controlling multiple
                                    detections of the same key-press inside the keypad loop
004F 00                    115             KBD_NUM_INPUT        DB   00H ;This variable stores the numerical input from 
                                   the keyboard
0050 00                    116             KBD_CHAR_INPUT       DB   00H ;This variable stores the character input from 
                                   the keyboard
0051 00                    117             KBD_INPUT_STATE      DB   00H
0052 00                    118             CHANGE_PLACE_VALUE   DB   00H
0053 (10                   119             CHANGE_PRICE         DB   10 DUP('0')
     30
     )
005D (6                    120             USER_USERNAME        DB   6 DUP('0')
     30
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE    4


LOC  OBJ                  LINE     SOURCE

     )
0063 (6                    121             USER_PASSWORD        DB   6 DUP('0')
     30
     )
0069 (8                    122             USER_BARCODE         DB   8 DUP('0')
     30
     )
0071 (3                    123             USER_QUANTITY        DB   3 DUP('0')
     30
     )
0074 00                    124             USER_INPUT_LENGTH    DB   00H   
0075 00                    125             CHANGE_SUCCESS_FLAG  DB  00H
                           126             
                           127             ;Sound Variables
0076 0000                  128             SOUND_OFFSET   DW   0000H, 1269H, 2121H, 2EA9H, 3BD3H, 478DH, 546EH, 6608H, 7
                                   53DH, 7C41H
0078 6912
007A 2121
007C A92E
007E D33B
0080 8D47
0082 6E54
0084 0866
0086 3D75
0088 417C
008A 0B8D                  129                                        DW   8D0BH, 98C6H, 0AAF8H, 0BA1EH, 0CA87H, 0DB3CH,
                                    9D67H, 055BH, 1E09H, 32B8H
008C C698
008E F8AA
0090 1EBA
0092 87CA
0094 3CDB
0096 679D
0098 5B05
009A 091E
009C B832
009E 554A                  130                                        DW   4A55H, 567AH, 60D6H, 6E3CH, 7A8BH, 8BFAH, 9E5
                                   BH, 0AA63H, 0B8D6H, 0C3F7H
00A0 7A56
00A2 D660
00A4 3C6E
00A6 8B7A
00A8 FA8B
00AA 5B9E
00AC 63AA
00AE D6B8
00B0 F7C3
00B2 67CF                  131                                        DW   0CF67H, 0D6EAH, 0E31DH, 0F49EH, 06C9H, 13A6H,
                                    1C5FH, 29DAH, 408FH, 5293H
00B4 EAD6
00B6 1DE3
00B8 9EF4
00BA C906
00BC A613
00BE 5F1C
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE    5


LOC  OBJ                  LINE     SOURCE

00C0 DA29
00C2 8F40
00C4 9352
00C6 3466                  132                                        DW   6634H, 83C7H, 0A00BH, 0C7B2H, 0CAD7H
00C8 C783
00CA 0BA0
00CC B2C7
00CE D7CA
                           133                                
00D0 6812                  134             SOUND_SIZE         DW   1268H, 0EB7H, 0D87H, 0D29H, 0BB9H, 0CE0H, 1199H, 0F34
                                   H, 0703H, 10C9H
00D2 B70E
00D4 870D
00D6 290D
00D8 B90B
00DA E00C
00DC 9911
00DE 340F
00E0 0307
00E2 C910
00E4 BA0B                  135                                        DW   0BBAH, 1231H, 0F25H, 1068H, 10B4H, 122AH, 175
                                   3H, 18ADH, 14AEH, 179CH
00E6 3112
00E8 250F
00EA 6810
00EC B410
00EE 2A12
00F0 5317
00F2 AD18
00F4 AE14
00F6 9C17
00F8 240C                  136                                        DW   0C24H, 0A5BH, 0D65H, 0C4EH, 116EH, 1260H, 0C0
                                   7H, 0E72H, 0B20H, 0B6FH
00FA 5B0A
00FC 650D
00FE 4E0C
0100 6E11
0102 6012
0104 070C
0106 720E
0108 200B
010A 6F0B
010C 8207                  137                                        DW   0782H, 0C32H, 1180H, 122AH, 0CDCH, 08B8H, 0D7
                                   AH, 16B4H, 1203H, 13A0H
010E 320C
0110 8011
0112 2A12
0114 DC0C
0116 B808
0118 7A0D
011A B416
011C 0312
011E A013
0120 921D                  138                                        DW   1D92H, 1C43H, 27A6H, 0324H, 031FH       
                                                         
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE    6


LOC  OBJ                  LINE     SOURCE

0122 431C
0124 A627
0126 2403
0128 1F03
                           139     
012A 0040                  140             EEPROM_START   DW   4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4
                                   000H, 4000H
012C 0040
012E 0040
0130 0040
0132 0040
0134 0040
0136 0040
0138 0040
013A 0040
013C 0040
013E 0040                  141                                        DW   4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 450
                                   0H, 5000H, 5000H, 5000H
0140 0040
0142 0040
0144 0040
0146 0040
0148 0040
014A 0045
014C 0050
014E 0050
0150 0050
0152 0050                  142                                        DW   5000H, 5000H, 5000H, 5000H, 5000H, 5000H, 500
                                   0H, 5000H, 5000H, 5000H 
0154 0050
0156 0050
0158 0050
015A 0050
015C 0050
015E 0050
0160 0050
0162 0050
0164 0050
0166 0050                  143                                        DW   5000H, 5000H, 5000H, 5000H, 6000H, 6000H, 600
                                   0H, 6000H, 6000H, 6000H
0168 0050
016A 0050
016C 0050
016E 0060
0170 0060
0172 0060
0174 0060
0176 0060
0178 0060
017A 0060                  144                                        DW   6000H, 6000H, 6000H, 6000H, 6000H       
                                                         
017C 0060
017E 0060
0180 0060
0182 0060
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE    7


LOC  OBJ                  LINE     SOURCE

                           145                                        
0184 0000                  146             SOUND_ADDRESS        DW   0000H
0186 0000                  147             SOUND_COUNT          DW   0000H
0188 (32                   148             SOUND_QUEUE          DB   32 DUP(?)
     ??
     )
01A8 00                    149             SOUND_HEAD           DB   00H
01A9 00                    150             SOUND_TAIL           DB   00H
01AA 00                    151             SOUND_INDEX_INPUT    DB   00H
01AB 00                    152             SAY_SOUND_ONCE_FLAG  DB   00H
                           153             
                           154             ;7-Segment Variables
                           155             ; BCD Digit Mapping:    0        1        2        3    4    5    6    7    8
                                       9    L     E    A    P
01AC 5F                    156         BCD_NUMBERS        DB  5FH, 50H, 6DH, 79H, 72H, 3BH, 3EH, 51H, 7FH, 73H, 0EH, 02F
                                   H, 77H, 67H                                                
01AD 50
01AE 6D
01AF 79
01B0 72
01B1 3B
01B2 3E
01B3 51
01B4 7F
01B5 73
01B6 0E
01B7 2F
01B8 77
01B9 67
01BA 0E                    157             BCD_DISPLAY            DB  0EH, 0EH, 0EH, 0EH, 0EH, 0EH
01BB 0E
01BC 0E
01BD 0E
01BE 0E
01BF 0E
01C0 00                    158             CURRENT_BCD        DB  00H
01C1 00                    159             TRIGGER_L_FLAG     DB  00H 
01C2 00                    160             TRIGGER_E_FLAG     DB  00H 
01C3 00                    161             TRIGGER_A_FLAG     DB  00H 
01C4 00                    162             TRIGGER_P_FLAG     DB  00H 
01C5 00                    163             SHOW_BCD_ONCE_FLAG DB  00H
                           164             
                           165             ;Timer Variables
01C6 00                    166             TIMER_COUNTER_BCD   DB  00H
01C7 0000                  167         TIMER_COUNTER_KBD   DW  0000H
01C9 0000                  168             TIMEOUT_COUNTER         DW  0000H
01CB 00                    169             TIMEOUT_SEC_COUNT   DB  00H
                           170             
                           171             ;Serial Variables
01CC 00                    172             START_READ            DB  00H
01CD 00                    173             START_RECEIVE_PRICE   DB  00H
01CE 00                    174             SERIAL_INDEX          DB  00H
01CF (10                   175             ITEM_PRICE            DB  10 DUP('0')
     30
     )
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE    8


LOC  OBJ                  LINE     SOURCE

01D9 00                    176             PLACE_VALUE           DB  00H
01DA 00                    177             TMP_PLACE_VALUE       DB  00H
01DB (2                    178             TWO_DIGIT_SOUND       DB  2 DUP(?)
     ??
     )
01DD 00                    179             AND_FLAG              DB  00H
01DE 00                    180             CENTS_AND_FLAG        DB  00H
01DF 00                    181             THOUSAND_FLAG         DB  00H
01E0 (10                   182             TOTAL_PRICE           DB  10 DUP('0')
     30
     )
01EA 00                    183             TOTAL_PLACE_VALUE     DB  00H
01EB 00                    184             CASH_REGISTER_START   DB  00H
01EC 00                    185             CASH_REGISTER_FLAG    DB  00H
01ED 00                    186             NETWORK_STATE         DB  00H
01EE 00                    187             CASH_REGISTER_STATE   DB  WAITING_FOR_LOGIN
01EF 00                    188             PURCHASE_ITEM_COUNT   DB  00H
01F0 00                    189             CHANGE_DONE_FLAG      DB  00H
01F1 00                    190             SWAP_JUMP_FLAG            DB  00H
01F2 00                    191             MODIFY_ITEM_FLAG      DB  00H
01F3 00                    192             USERNAME_FLAG             DB  00H
01F4 00                    193             REFUND_FLAG                       DB  00H
01F5 00                    194             ANDROID_FLAG          DB  00H
----                       195     DATA_SEG        ENDS
                           196     
                           197             
----                       198     CODE_SEG        SEGMENT
                           199     
                           200             PUBLIC          START
                           201     
                           202     ASSUME  CS:CODE_SEG, SS:STACK_SEG, DS:DATA_SEG
                           203     
0000                       204     START:
                           205     ;initialize stack area
0000 B8----         R      206             MOV     AX,STACK_SEG            
0003 8ED0                  207             MOV     SS,AX
0005 368B260001            208             MOV     SP,TOS
                           209                     
000A B8----         R      210             MOV AX, DATA_SEG
000D 8ED8                  211             MOV DS, AX
                           212     
                           213     ; Initialize the on-chip peripherals
000F 9A0000----     E      214             CALL FAR PTR IODEFINE
                           215             
                           216     ; Initialize MPCS to MAP peripheral to IO address
                           217             
0014 BAA8FF                218             MOV  DX, MPCS  
0017 B88320                219             MOV  AX, 2083H 
001A EF                    220             OUT  DX, AX
                           221             
001B BAA6FF                222             MOV  DX, MMCS ; send MCS start address to 40000
001E B80340                223             MOV  AX, 4003H 
0021 EF                    224             OUT  DX, AX
                           225     
                           226     ; PCSBA initial, set the parallel port start from 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE    9


LOC  OBJ                  LINE     SOURCE

0022 BAA4FF                227             MOV DX, PCSBA
0025 B80300                228             MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
0028 EF                    229             OUT DX, AX
                           230     
                           231     ; Initialize LMCS 
0029 BAA2FF                232         MOV DX, LMCR
002C B8C401                233         MOV AX, 01C4H  ; Starting address 1FFFH, 8K, No waits, last should be 5H for 1 wa
                                   its      
002F EF                    234         OUT DX, AX
                           235             
0030 B089                  236             MOV AL, 89H ;mode 0, [A-out(for led)] [B - out, C-in (for reading keypad))]
0032 BA8300                237             MOV DX, CWR ; load CWR to DX
0035 EE                    238             OUT DX, AL      ;load CWR value from AL
                           239             
                           240     ; ######################### Start of User Main Routine ###########################
                           241       
0036 9A0000----     E      242         CALL FAR PTR set_timer2
003B FB                    243         STI
                           244                     
003C                       245             NEXT:
003C EBFE                  246                     JMP NEXT
                           247             
                           248     ; ######################### End of User Main Routine #############################
                                      
                           249     
                           250     
                           251     ;Procedure to change the state of the cash register according to user's input
003E                       252     CHANGE_CASHIER_STATE PROC FAR   
003E 50                    253             PUSH AX
003F 53                    254             PUSH BX
0040 51                    255             PUSH CX
                           256     
0041 803EEE0100            257             CMP CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0046 743B                  258             JE CASHIER_WAITING_FOR_LOGIN
                           259             
0048 803EEE0101            260             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
004D 7448                  261             JE CASHIER_ENTER_USERNAME       
                           262             
004F 803EEE0102            263             CMP CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0054 7469                  264             JE FIRST_JUMP_WAITING_FOR_BARCODE
                           265             
0056 803EEE0103            266             CMP CASH_REGISTER_STATE, ENTER_BARCODE
005B 7465                  267             JE FIRST_JUMP_ENTER_BARCODE
                           268             
005D 803EEE0104            269             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0062 7461                  270             JE FIRST_JUMP_ENTER_QUANTITY
                           271             
0064 803EEE0105            272             CMP CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0069 745D                  273             JE FIRST_JUMP_DISPLAY_ITEM_PRICE
                           274             
006B 803EEE0106            275             CMP CASH_REGISTER_STATE, CANCEL_ITEM
0070 7459                  276             JE FIRST_JUMP_CANCEL_ITEM
                           277             
0072 803EEE0108            278             CMP CASH_REGISTER_STATE, CHANGE_PAY
0077 7458                  279             JE FIRST_JUMP_CHANGE_PAY
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   10


LOC  OBJ                  LINE     SOURCE

                           280             
0079 803EEE0107            281             CMP CASH_REGISTER_STATE, END_TRANSACTION
007E 744E                  282             JE FIRST_JUMP_END_TRANSACTION
                           283     
0080 EB3A90                284             JMP FIRST_JUMP_STATE_END
                           285     
                           286     ;Waiting for user to press the login button     
0083                       287     CASHIER_WAITING_FOR_LOGIN:
0083 803E500041            288             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
0088 7532                  289             JNE FIRST_JUMP_STATE_END
008A C606EE0101            290             MOV CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
008F 9A1306----     R      291             CALL FAR PTR STATE_TRANSITION
0094 EB2690                292             JMP FIRST_JUMP_STATE_END
                           293             
                           294     ;User is now entering his/her login credentials
0097                       295     CASHIER_ENTER_USERNAME:
0097 803E500000            296             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
009C 7477                  297             JE USERNAME_CHECK_NUMBER
009E 803E500041            298             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
00A3 752F                  299             JNE USERNAME_CHECK_BACKSPACE
00A5 C606C10101            300             MOV TRIGGER_L_FLAG, 01H
00AA C606EE0100            301             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
00AF C606F30100            302             MOV USERNAME_FLAG, 00H
00B4 9A1306----     R      303             CALL FAR PTR STATE_TRANSITION
00B9 E98004                304             JMP CASHIER_STATE_END   
00BC                       305     FIRST_JUMP_STATE_END:
00BC E97D04                306             JMP CASHIER_STATE_END
00BF                       307     FIRST_JUMP_WAITING_FOR_BARCODE:
00BF EB6390                308             JMP CASHIER_WAITING_FOR_BARCODE
00C2                       309     FIRST_JUMP_ENTER_BARCODE:
00C2 E9B000                310             JMP CASHIER_ENTER_BARCODE
00C5                       311     FIRST_JUMP_ENTER_QUANTITY:
00C5 E94501                312             JMP CASHIER_ENTER_QUANTITY
00C8                       313     FIRST_JUMP_DISPLAY_ITEM_PRICE:
00C8 E9C001                314             JMP CASHIER_DISPLAY_ITEM_PRICE
00CB                       315     FIRST_JUMP_CANCEL_ITEM:
00CB E90903                316             JMP CASHIER_CANCEL_ITEM
00CE                       317     FIRST_JUMP_END_TRANSACTION:
00CE E96603                318             JMP CASHIER_END_TRANSACTION
00D1                       319     FIRST_JUMP_CHANGE_PAY:
00D1 E98603                320             JMP CASHIER_CHANGE_PAY
00D4                       321     USERNAME_CHECK_BACKSPACE:
00D4 803E50005F            322             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
00D9 7508                  323             JNE USERNAME_CHECK_ENTER
00DB 9A2806----     R      324             CALL FAR PTR BACKSPACE_KEYPRESS
00E0 E95904                325             JMP CASHIER_STATE_END
00E3                       326     USERNAME_CHECK_ENTER:
00E3 803E50007C            327             CMP KBD_CHAR_INPUT, KBD_ENTER
00E8 752B                  328             JNE USERNAME_CHECK_NUMBER
00EA 803E740006            329             CMP USER_INPUT_LENGTH, KBD_USERNAME_LENGTH
00EF 75CB                  330             JNE FIRST_JUMP_STATE_END
00F1 803EF30101            331             CMP USERNAME_FLAG, 01H
00F6 750C                  332             JNE CONTINUE_TO_PASSWORD
00F8 C606ED0101            333             MOV NETWORK_STATE, NETWORK_ENABLE
00FD 9A1306----     R      334             CALL FAR PTR STATE_TRANSITION
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   11


LOC  OBJ                  LINE     SOURCE

0102 EBB8                  335             JMP FIRST_JUMP_STATE_END
0104                       336     CONTINUE_TO_PASSWORD:
0104 C606F30101            337             MOV USERNAME_FLAG, 01H
0109 C606EE0101            338             MOV CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
010E 9A1306----     R      339             CALL FAR PTR STATE_TRANSITION
0113 EBA7                  340             JMP FIRST_JUMP_STATE_END
0115                       341     USERNAME_CHECK_NUMBER:  
0115 803E740006            342             CMP USER_INPUT_LENGTH, KBD_USERNAME_LENGTH
011A 74A0                  343             JE FIRST_JUMP_STATE_END
011C 9A4A05----     R      344             CALL FAR PTR GET_USER_DIGIT
0121                       345     SECOND_JUMP_STATE_END:
0121 E91804                346             JMP CASHIER_STATE_END   
                           347             
                           348     ;Waiting for the user to begin a new transaction
0124                       349     CASHIER_WAITING_FOR_BARCODE:
0124 803E500000            350             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0129 74F6                  351             JE SECOND_JUMP_STATE_END
012B 803E500041            352             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
0130 7517                  353             JNE BARCODE_CHECK_TRANSACTION
0132 C606C10101            354             MOV TRIGGER_L_FLAG, 01H
0137 C606EE0100            355             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
013C C606ED0103            356             MOV NETWORK_STATE, NETWORK_LOGOUT
0141 9A1306----     R      357             CALL FAR PTR STATE_TRANSITION
0146 E9F303                358             JMP CASHIER_STATE_END   
0149                       359     BARCODE_CHECK_TRANSACTION:
0149 803E500042            360             CMP KBD_CHAR_INPUT, KBD_TRIGGER_TRANSACTION
014E 750D                  361             JNE BARCODE_REFUND
0150 C606EE0103            362             MOV CASH_REGISTER_STATE, ENTER_BARCODE
0155 9A1306----     R      363             CALL FAR PTR STATE_TRANSITION
015A E9DF03                364             JMP CASHIER_STATE_END
015D                       365     BARCODE_REFUND:
015D 803E50004A            366             CMP KBD_CHAR_INPUT, KBD_TRIGGER_REFUND
0162 75BD                  367             JNE SECOND_JUMP_STATE_END
0164 C606F40101            368             MOV REFUND_FLAG, 01H
0169 C606EE0103            369             MOV CASH_REGISTER_STATE, ENTER_BARCODE
016E 9A1306----     R      370             CALL FAR PTR STATE_TRANSITION
0173 EBAC                  371             JMP SECOND_JUMP_STATE_END
                           372             
                           373     ;User is now entering the barcode
0175                       374     CASHIER_ENTER_BARCODE:
0175 803E500000            375             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
017A 7450                  376             JE FIRST_JMP_BARCODE_CHECK_NUMBER
017C 803E50005F            377             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
0181 7508                  378             JNE BARCODE_CANCEL_ITEM
0183 9A2806----     R      379             CALL FAR PTR BACKSPACE_KEYPRESS
0188 E9B103                380             JMP CASHIER_STATE_END
018B                       381     BARCODE_CANCEL_ITEM:
018B 803E500044            382             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
0190 753D                  383             JNE BARCODE_CHECK_ENTER
0192 803EF40101            384             CMP REFUND_FLAG, 01H
0197 7517                  385             JNE NORMAL_CANCEL_BARCODE
0199 C606EE0102            386             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
019E C606F40100            387             MOV REFUND_FLAG, 00H
01A3 C606C40101            388             MOV TRIGGER_P_FLAG, 01H
01A8 9A1306----     R      389             CALL FAR PTR STATE_TRANSITION
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   12


LOC  OBJ                  LINE     SOURCE

01AD E98C03                390             JMP CASHIER_STATE_END
01B0                       391     NORMAL_CANCEL_BARCODE:
01B0 C606EE0105            392             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
01B5 C606F20100            393             MOV MODIFY_ITEM_FLAG, 00H
01BA C606C50101            394             MOV SHOW_BCD_ONCE_FLAG, 01H
01BF C606AB0101            395             MOV SAY_SOUND_ONCE_FLAG, 01H
01C4 9A1306----     R      396             CALL FAR PTR STATE_TRANSITION
01C9 E97003                397             JMP CASHIER_STATE_END
01CC                       398     FIRST_JMP_BARCODE_CHECK_NUMBER:
01CC EB3090                399             JMP BARCODE_CHECK_NUMBER
01CF                       400     BARCODE_CHECK_ENTER:
01CF 803E50007C            401             CMP KBD_CHAR_INPUT, KBD_ENTER
01D4 7528                  402             JNE BARCODE_CHECK_NUMBER
01D6 803E740008            403             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
01DB 752D                  404             JNE THIRD_JUMP_STATE_END
01DD 803EF40101            405             CMP REFUND_FLAG, 01H
01E2 750D                  406             JNE NORMAL_BARCODE_ENTER
01E4 C606ED0101            407             MOV NETWORK_STATE, NETWORK_ENABLE
01E9 9A1306----     R      408             CALL FAR PTR STATE_TRANSITION
01EE E94B03                409             JMP CASHIER_STATE_END
01F1                       410     NORMAL_BARCODE_ENTER:
01F1 C606EE0104            411             MOV CASH_REGISTER_STATE, ENTER_QUANTITY
01F6 9A1306----     R      412             CALL FAR PTR STATE_TRANSITION
01FB E93E03                413             JMP CASHIER_STATE_END
01FE                       414     BARCODE_CHECK_NUMBER:   
01FE 803E740008            415             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
0203 7405                  416             JE THIRD_JUMP_STATE_END
0205 9A4A05----     R      417             CALL FAR PTR GET_USER_DIGIT
020A                       418     THIRD_JUMP_STATE_END:
020A E92F03                419             JMP CASHIER_STATE_END   
                           420     
                           421     ;User is now entering the quantity      
020D                       422     CASHIER_ENTER_QUANTITY:
020D 803E500000            423             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0212 7468                  424             JE QUANTITY_CHECK_NUMBER
0214 803E50005F            425             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
0219 7508                  426             JNE QUANTITY_CANCEL_ITEM
021B 9A2806----     R      427             CALL FAR PTR BACKSPACE_KEYPRESS
0220 E91903                428             JMP CASHIER_STATE_END
0223                       429     QUANTITY_CANCEL_ITEM:
0223 803E500044            430             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
0228 751C                  431             JNE QUANTITY_CHECK_ANDROID
022A C606EE0105            432             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
022F C606F20100            433             MOV MODIFY_ITEM_FLAG, 00H
0234 C606C50101            434             MOV SHOW_BCD_ONCE_FLAG, 01H
0239 C606AB0101            435             MOV SAY_SOUND_ONCE_FLAG, 01H
023E 9A1306----     R      436             CALL FAR PTR STATE_TRANSITION
0243 E9F602                437             JMP CASHIER_STATE_END
0246                       438     QUANTITY_CHECK_ANDROID:
0246 803E50004C            439             CMP KBD_CHAR_INPUT, KBD_TRIGGER_ANDROID
024B 750F                  440             JNE QUANTITY_CHECK_ENTER
024D 803E740000            441             CMP USER_INPUT_LENGTH, 00H
0252 74B6                  442             JE THIRD_JUMP_STATE_END
0254 C606F50101            443             MOV ANDROID_FLAG, 01H
0259 EB0F90                444             JMP BYPASS_ANDROID_END
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   13


LOC  OBJ                  LINE     SOURCE

025C                       445     QUANTITY_CHECK_ENTER:
025C 803E50007C            446             CMP KBD_CHAR_INPUT, KBD_ENTER
0261 7519                  447             JNE QUANTITY_CHECK_NUMBER
0263 803E740000            448             CMP USER_INPUT_LENGTH, 00H
0268 74A0                  449             JE THIRD_JUMP_STATE_END
026A                       450     BYPASS_ANDROID_END:
026A C606ED0101            451             MOV NETWORK_STATE, NETWORK_ENABLE
026F C606500000            452             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
0274 9A7910----     R      453             CALL FAR PTR CLEAR_7SEGMENT
0279 E9C002                454             JMP CASHIER_STATE_END
027C                       455     QUANTITY_CHECK_NUMBER:  
027C 803E740003            456             CMP USER_INPUT_LENGTH, KBD_QUANTITY_LENGTH
0281 7405                  457             JE FOURTH_JUMP_STATE_END
0283 9A4A05----     R      458             CALL FAR PTR GET_USER_DIGIT
0288                       459     FOURTH_JUMP_STATE_END:
0288 E9B102                460             JMP CASHIER_STATE_END
                           461     
                           462     ;Cash register is now displaying the item price after receiving it via serial
028B                       463     CASHIER_DISPLAY_ITEM_PRICE:
028B 803EC50101            464             CMP SHOW_BCD_ONCE_FLAG, 01H
0290 740A                  465             JE CONTINUE_WITH_SOUND_PRICE
0292 C606C50101            466             MOV SHOW_BCD_ONCE_FLAG, 01H
0297 9A6306----     R      467             CALL FAR PTR DISPLAY_PRICE_ON_BCD
029C                       468     CONTINUE_WITH_SOUND_PRICE:
029C 803EAB0101            469             CMP SAY_SOUND_ONCE_FLAG, 01H
02A1 7427                  470             JE PRICE_CHECK_NEW_ITEM
02A3 FE06EF01              471             INC PURCHASE_ITEM_COUNT
02A7 C606AB0101            472             MOV SAY_SOUND_ONCE_FLAG, 01H
02AC C606AA011F            473             MOV SOUND_INDEX_INPUT, SOUND_COST ;To say the word 'cost'
02B1 9ADD0B----     R      474             CALL FAR PTR ADD_SOUND_INDEX
02B6 C606AA012C            475             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
02BB 9ADD0B----     R      476             CALL FAR PTR ADD_SOUND_INDEX
02C0 9A060C----     R      477             CALL FAR PTR POPULATE_SOUND_QUEUE
02C5 9AD80D----     R      478             CALL FAR PTR ADD_INCOMING_PRICE
02CA                       479     PRICE_CHECK_NEW_ITEM:
02CA 803E500043            480             CMP KBD_CHAR_INPUT, KBD_TRIGGER_NEW_ITEM
02CF 7517                  481             JNE PRICE_CANCEL_TRANSACTION
02D1 C606EE0103            482             MOV CASH_REGISTER_STATE, ENTER_BARCODE
02D6 C606AB0100            483             MOV SAY_SOUND_ONCE_FLAG, 00H
02DB C606C50100            484             MOV SHOW_BCD_ONCE_FLAG, 00H
02E0 9A1306----     R      485             CALL FAR PTR STATE_TRANSITION
02E5 E95402                486             JMP CASHIER_STATE_END
02E8                       487     PRICE_CANCEL_TRANSACTION:       
02E8 803E500045            488             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
02ED 751C                  489             JNE PRICE_VIEW_CURRENT
02EF                       490     BYPASS_CANCEL_TRANSACTION:
02EF C606EE0102            491             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
02F4 C606C40101            492             MOV TRIGGER_P_FLAG, 01H
02F9 9A1306----     R      493             CALL FAR PTR STATE_TRANSITION
02FE 9AB105----     R      494             CALL FAR PTR CLEAR_ALL_VARIABLES
0303 C606ED0104            495             MOV NETWORK_STATE, NETWORK_CANCEL_TRANSACTION
0308 E93102                496             JMP CASHIER_STATE_END
030B                       497     PRICE_VIEW_CURRENT:
030B 803E500048            498             CMP KBD_CHAR_INPUT, KBD_TRIGGER_DISPLAY_CURRENT
0310 7514                  499             JNE PRICE_CANCEL_ITEM
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   14


LOC  OBJ                  LINE     SOURCE

0312 803EEF0100            500             CMP PURCHASE_ITEM_COUNT, 00H
0317 7432                  501             JE FIFTH_JUMP_STATE_END
0319 C606AA0128            502             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
031E 9ADD0B----     R      503             CALL FAR PTR ADD_SOUND_INDEX
0323 EB4B90                504             JMP BYPASS_VIEW_TOTAL
0326                       505     PRICE_CANCEL_ITEM:
0326 803E500044            506             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
032B 7521                  507             JNE PRICE_END_TRANSACTION
032D 803EEF0100            508             CMP PURCHASE_ITEM_COUNT, 00H
0332 740D                  509             JE DISPLAY_ERROR_CODE_PRICE
0334 C606EE0106            510             MOV CASH_REGISTER_STATE, CANCEL_ITEM
0339 9A1306----     R      511             CALL FAR PTR STATE_TRANSITION
033E E9FB01                512             JMP CASHIER_STATE_END
0341                       513     DISPLAY_ERROR_CODE_PRICE:
0341 C606C20101            514             MOV TRIGGER_E_FLAG, 01H
0346 9A1306----     R      515             CALL FAR PTR STATE_TRANSITION
034B                       516     FIFTH_JUMP_STATE_END:
034B E9EE01                517             JMP CASHIER_STATE_END
034E                       518     PRICE_END_TRANSACTION:
034E 803E500046            519             CMP KBD_CHAR_INPUT, KBD_TRIGGER_END_TRANSACTION
0353 7555                  520             JNE PRICE_MODIFY_ITEM
0355 803EEF0100            521             CMP PURCHASE_ITEM_COUNT, 00H
035A 7493                  522             JE BYPASS_CANCEL_TRANSACTION
035C C606EE0107            523             MOV CASH_REGISTER_STATE, END_TRANSACTION
0361 C606ED0102            524             MOV NETWORK_STATE, NETWORK_END_TRANSACTION
0366 C606AA0128            525             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
036B 9ADD0B----     R      526             CALL FAR PTR ADD_SOUND_INDEX
0370                       527     BYPASS_VIEW_TOTAL:
0370 9A1306----     R      528             CALL FAR PTR STATE_TRANSITION
0375 33C9                  529             XOR CX, CX
0377 33DB                  530             XOR BX, BX
0379 B10A                  531             MOV CL, 10
037B                       532     TRANSFER_TO_ITEM_PRICE:
037B 8A87E001              533             MOV AL, TOTAL_PRICE[BX]
037F 8887CF01              534             MOV ITEM_PRICE[BX], AL
0383 43                    535             INC BX
0384 E2F5                  536             LOOP TRANSFER_TO_ITEM_PRICE
0386 A0EA01                537             MOV AL, TOTAL_PLACE_VALUE
0389 0430                  538             ADD AL, 48
038B A2D901                539             MOV PLACE_VALUE, AL
038E A2DA01                540             MOV TMP_PLACE_VALUE, AL
0391 2C2D                  541             SUB AL, 45
0393 A2CE01                542             MOV SERIAL_INDEX, AL
0396 9A6306----     R      543             CALL FAR PTR DISPLAY_PRICE_ON_BCD
039B 9A060C----     R      544             CALL FAR PTR POPULATE_SOUND_QUEUE
03A0 803EEE0108            545             CMP CASH_REGISTER_STATE, CHANGE_PAY
03A5 7464                  546             JE FIRST_JUMP_CHANGE_REMAINING
03A7 E99201                547             JMP CASHIER_STATE_END
03AA                       548     PRICE_MODIFY_ITEM:
03AA 803E500047            549             CMP KBD_CHAR_INPUT, KBD_TRIGGER_MODIFY
03AF 759A                  550             JNE FIFTH_JUMP_STATE_END
03B1 803EEF0100            551             CMP PURCHASE_ITEM_COUNT, 00H
03B6 7412                  552             JE DISPLAY_ERROR_MODIFY_PRICE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   15


LOC  OBJ                  LINE     SOURCE

03B8 C606EE0103            553             MOV CASH_REGISTER_STATE, ENTER_BARCODE
03BD C606F20101            554             MOV MODIFY_ITEM_FLAG, 01H
03C2 9A1306----     R      555             CALL FAR PTR STATE_TRANSITION
03C7 E97201                556             JMP CASHIER_STATE_END
03CA                       557     DISPLAY_ERROR_MODIFY_PRICE:
03CA C606C20101            558             MOV TRIGGER_E_FLAG, 01H
03CF 9A1306----     R      559             CALL FAR PTR STATE_TRANSITION   
03D4 E96501                560             JMP CASHIER_STATE_END
                           561             
                           562     ; Cashier is now cancelling a single item in the transaction
03D7                       563     CASHIER_CANCEL_ITEM:
03D7 803E500000            564             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
03DC 744B                  565             JE CANCEL_CHECK_NUMBER
03DE 803E50005F            566             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
03E3 7508                  567             JNE CANCEL_CHECK_AGAIN
03E5 9A2806----     R      568             CALL FAR PTR BACKSPACE_KEYPRESS
03EA E94F01                569             JMP CASHIER_STATE_END
03ED                       570     CANCEL_CHECK_AGAIN:
03ED 803E500044            571             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
03F2 751A                  572             JNE CANCEL_CHECK_ENTER
03F4 C606EE0105            573             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
03F9 C606C50101            574             MOV SHOW_BCD_ONCE_FLAG, 01H
03FE C606AB0101            575             MOV SAY_SOUND_ONCE_FLAG, 01H
0403 9A1306----     R      576             CALL FAR PTR STATE_TRANSITION
0408 E93101                577             JMP CASHIER_STATE_END
040B                       578     FIRST_JUMP_CHANGE_REMAINING:
040B E91201                579             JMP CHANGE_REMAINING
040E                       580     CANCEL_CHECK_ENTER:
040E 803E50007C            581             CMP KBD_CHAR_INPUT, KBD_ENTER
0413 7514                  582             JNE CANCEL_CHECK_NUMBER
0415 803E740008            583             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
041A 750A                  584             JNE SIXTH_JUMP_STATE_END
041C C606ED0101            585             MOV NETWORK_STATE, NETWORK_ENABLE
0421 9A1306----     R      586             CALL FAR PTR STATE_TRANSITION
0426                       587     SIXTH_JUMP_STATE_END:
0426 E91301                588             JMP CASHIER_STATE_END
0429                       589     CANCEL_CHECK_NUMBER:    
0429 803E740008            590             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
042E 74F6                  591             JE SIXTH_JUMP_STATE_END
0430 9A4A05----     R      592             CALL FAR PTR GET_USER_DIGIT
0435 EBEF                  593             JMP SIXTH_JUMP_STATE_END
                           594             
                           595     ; Cashier is now ending the transaction 
0437                       596     CASHIER_END_TRANSACTION:
0437 803E500045            597             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
043C 7503                  598             JNE END_CHANGE_PAY
043E E9AEFE                599             JMP BYPASS_CANCEL_TRANSACTION
0441                       600     END_CHANGE_PAY:
0441 803E500049            601             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CHANGE_PAY
0446 75DE                  602             JNE SIXTH_JUMP_STATE_END
0448 C606EE0108            603             MOV CASH_REGISTER_STATE, CHANGE_PAY
044D 9A1306----     R      604             CALL FAR PTR STATE_TRANSITION
0452 C606520000            605             MOV CHANGE_PLACE_VALUE, 00H
0457 E9E200                606             JMP CASHIER_STATE_END
                           607             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   16


LOC  OBJ                  LINE     SOURCE

                           608     ;Cashier is now calculating the change
045A                       609     CASHIER_CHANGE_PAY:
045A 803E500000            610             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
045F 743E                  611             JE CHANGE_NUMBER
0461 803E50005F            612             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
0466 7508                  613             JNE CHANGE_CANCEL_TRANSACTION
0468 9A2806----     R      614             CALL FAR PTR BACKSPACE_KEYPRESS
046D E9CC00                615             JMP CASHIER_STATE_END
0470                       616     CHANGE_CANCEL_TRANSACTION:
0470 803E500045            617             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
0475 7503                  618             JNE CHANGE_END_TRANSACTION
0477 E975FE                619             JMP BYPASS_CANCEL_TRANSACTION
047A                       620     CHANGE_END_TRANSACTION:
047A 803E500046            621             CMP KBD_CHAR_INPUT, KBD_TRIGGER_END_TRANSACTION
047F 753F                  622             JNE CHANGE_CHECK_ENTER
0481 803EF00101            623             CMP CHANGE_DONE_FLAG, 01H
0486 7514                  624             JNE SEVENTH_JUMP_STATE_END
0488 C606EE0102            625             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
048D C606C40101            626             MOV TRIGGER_P_FLAG, 01H
0492 9A1306----     R      627             CALL FAR PTR STATE_TRANSITION
0497 9AB105----     R      628             CALL FAR PTR CLEAR_ALL_VARIABLES
049C                       629     SEVENTH_JUMP_STATE_END:
049C E99D00                630             JMP CASHIER_STATE_END
049F                       631     CHANGE_NUMBER:  
049F 803E510000            632             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
04A4 74F6                  633             JE SEVENTH_JUMP_STATE_END
04A6 803EF00101            634             CMP CHANGE_DONE_FLAG, 01H
04AB 74EF                  635             JE SEVENTH_JUMP_STATE_END
04AD 803E740008            636             CMP USER_INPUT_LENGTH, KBD_CHANGE_LENGTH
04B2 74E8                  637             JE SEVENTH_JUMP_STATE_END
04B4 FE065200              638             INC CHANGE_PLACE_VALUE
04B8 9A4A05----     R      639             CALL FAR PTR GET_USER_DIGIT
04BD EB7D90                640             JMP CASHIER_STATE_END
04C0                       641     CHANGE_CHECK_ENTER:
04C0 803E50007C            642             CMP KBD_CHAR_INPUT, KBD_ENTER
04C5 7575                  643             JNE CASHIER_STATE_END
04C7 803EF00101            644             CMP CHANGE_DONE_FLAG, 01H
04CC 746E                  645             JE CASHIER_STATE_END
04CE 803E740002            646             CMP USER_INPUT_LENGTH, 02H
04D3 7C67                  647             JL CASHIER_STATE_END
04D5 33DB                  648             XOR BX, BX
04D7 8A1E5200              649             MOV BL, CHANGE_PLACE_VALUE
04DB 8A4752                650             MOV AL, CHANGE_PRICE[BX-1]
04DE 884753                651             MOV CHANGE_PRICE[BX], AL
04E1 8A4751                652             MOV AL, CHANGE_PRICE[BX-2]
04E4 884752                653             MOV CHANGE_PRICE[BX-1], AL
04E7 C647512E              654             MOV CHANGE_PRICE[BX-2], '.'
04EB 802E520002            655             SUB CHANGE_PLACE_VALUE, 2
04F0 9A0C0F----     R      656             CALL FAR PTR CALCULATE_CHANGE
04F5 803E750000            657             CMP CHANGE_SUCCESS_FLAG, 00H
04FA 7417                  658             JE FINISH_CHANGE
04FC C606EE0107            659             MOV CASH_REGISTER_STATE, END_TRANSACTION
0501 C606C20101            660             MOV TRIGGER_E_FLAG, 01H
0506 9A1306----     R      661             CALL FAR PTR STATE_TRANSITION
050B C606750000            662             MOV CHANGE_SUCCESS_FLAG, 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   17


LOC  OBJ                  LINE     SOURCE

0510 EB2A90                663             JMP CASHIER_STATE_END
0513                       664     FINISH_CHANGE:
0513 C606AA0129            665             MOV SOUND_INDEX_INPUT, SOUND_YOURCHANGEIS ;To say the phrase 'your change is'
0518 9ADD0B----     R      666             CALL FAR PTR ADD_SOUND_INDEX
051D E950FE                667             JMP BYPASS_VIEW_TOTAL
0520                       668     CHANGE_REMAINING:
0520 C606AA012C            669             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
0525 9ADD0B----     R      670             CALL FAR PTR ADD_SOUND_INDEX
052A C606AA012A            671             MOV SOUND_INDEX_INPUT, SOUND_THANKYOUANDGOODBYE ;To say the phrase 'thank you
                                    and goodbye'
052F 9ADD0B----     R      672             CALL FAR PTR ADD_SOUND_INDEX
0534 C606F00101            673             MOV CHANGE_DONE_FLAG, 01H
0539 EB0190                674             JMP CASHIER_STATE_END
                           675             
053C                       676     CASHIER_STATE_END:      
053C C606500000            677             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
0541 C606510000            678             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
0546 59                    679             POP     CX
0547 5B                    680             POP     BX
0548 58                    681             POP AX
0549 CB                    682             RET
                           683     CHANGE_CASHIER_STATE ENDP
                           684     
                           685     
                           686     ;Procedure to add user's numeric input to a corresponding array depending on the stat
                                   e
054A                       687     GET_USER_DIGIT PROC FAR
054A 50                    688             PUSH AX
054B 53                    689             PUSH BX
                           690             
054C 803E510000            691             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
0551 745B                  692             JE GET_USER_DIGIT_END
                           693             
0553 33DB                  694             XOR BX, BX
0555 8A1E7400              695             MOV BL, USER_INPUT_LENGTH
0559 A04F00                696             MOV AL, KBD_NUM_INPUT
055C 9AA007----     R      697             CALL FAR PTR ADD_BCD_QUEUE
0561 A2AA01                698             MOV SOUND_INDEX_INPUT, AL
0564 9ADD0B----     R      699             CALL FAR PTR ADD_SOUND_INDEX
0569 0430                  700             ADD AL, 48
                           701             
056B 803EEE0104            702             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0570 741B                  703             JE MOV_AL_QUANTITY
                           704             
0572 803EF30101            705             CMP USERNAME_FLAG, 01H
0577 741A                  706             JE MOV_AL_PASSWORD
                           707             
0579 803EEE0101            708             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
057E 7419                  709             JE MOV_AL_USERNAME
                           710             
0580 803EEE0108            711             CMP CASH_REGISTER_STATE, CHANGE_PAY
0585 7418                  712             JE MOV_AL_CHANGE
                           713             
0587 884769                714             MOV USER_BARCODE[BX], AL
058A EB1990                715             JMP CONTINUE_GET_DIGIT
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   18


LOC  OBJ                  LINE     SOURCE

                           716             
058D                       717     MOV_AL_QUANTITY:
058D 884771                718             MOV USER_QUANTITY[BX], AL
0590 EB1390                719             JMP CONTINUE_GET_DIGIT
                           720             
0593                       721     MOV_AL_PASSWORD:
0593 884763                722             MOV USER_PASSWORD[BX], AL
0596 EB0D90                723             JMP CONTINUE_GET_DIGIT
                           724             
0599                       725     MOV_AL_USERNAME:
0599 88475D                726             MOV USER_USERNAME[BX], AL
059C EB0790                727             JMP CONTINUE_GET_DIGIT
                           728             
059F                       729     MOV_AL_CHANGE:
059F 884753                730             MOV CHANGE_PRICE[BX], AL
05A2 EB0190                731             JMP CONTINUE_GET_DIGIT  
                           732             
05A5                       733     CONTINUE_GET_DIGIT:
05A5 FE067400              734             INC USER_INPUT_LENGTH
05A9 C606510000            735             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
                           736     
05AE                       737     GET_USER_DIGIT_END:     
05AE 5B                    738             POP     BX
05AF 58                    739             POP AX
05B0 CB                    740             RET
                           741     GET_USER_DIGIT ENDP
                           742     
                           743     
                           744     ;Procedure to clear all variables before cancelling/ending a transaction
05B1                       745     CLEAR_ALL_VARIABLES PROC FAR
05B1 53                    746             PUSH BX
05B2 51                    747             PUSH CX
                           748             
05B3 C606520000            749             MOV CHANGE_PLACE_VALUE, 00H
05B8 C606AB0100            750             MOV SAY_SOUND_ONCE_FLAG, 00H
05BD C606C50100            751             MOV SHOW_BCD_ONCE_FLAG, 00H
05C2 C606CE0100            752             MOV SERIAL_INDEX, 00H
05C7 C606EA0100            753             MOV TOTAL_PLACE_VALUE, 00H
05CC C606EB0100            754             MOV CASH_REGISTER_START, 00H
05D1 C606EF0100            755             MOV PURCHASE_ITEM_COUNT, 00H
05D6 C606F00100            756             MOV CHANGE_DONE_FLAG, 00H
05DB C606F10100            757             MOV SWAP_JUMP_FLAG, 00H
05E0 C606F20100            758             MOV MODIFY_ITEM_FLAG, 00H
05E5 C606F30100            759             MOV USERNAME_FLAG, 00H
05EA C606F40100            760             MOV REFUND_FLAG, 00H
05EF C606750000            761             MOV CHANGE_SUCCESS_FLAG, 00H
05F4 C606F50100            762             MOV ANDROID_FLAG, 00H
                           763             
05F9 33DB                  764             XOR BX, BX
05FB 33C9                  765             XOR CX, CX
05FD B10A                  766             MOV CL, 10
05FF                       767     CLEAR_PRICES:
05FF C6475330              768             MOV CHANGE_PRICE[BX], '0'
0603 C687CF0130            769             MOV ITEM_PRICE[BX], '0'
0608 C687E00130            770             MOV TOTAL_PRICE[BX], '0'
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   19


LOC  OBJ                  LINE     SOURCE

060D 43                    771             INC BX
060E E2EF                  772             LOOP CLEAR_PRICES
                           773     
0610                       774     CLEAR_VARIABLES_END:    
0610 59                    775             POP     CX
0611 5B                    776             POP     BX
0612 CB                    777             RET
                           778     CLEAR_ALL_VARIABLES ENDP
                           779     
                           780     
                           781     ;Procedure to clear variables when changing states
0613                       782     STATE_TRANSITION PROC FAR       
0613 C606500000            783             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
0618 C606740000            784             MOV USER_INPUT_LENGTH, 00H
061D C606510000            785             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
0622 9A7910----     R      786             CALL FAR PTR CLEAR_7SEGMENT
0627 CB                    787             RET
                           788     STATE_TRANSITION ENDP
                           789     
                           790     
                           791     ;Procedure to remove user's most recent keyboard input and replace it with a zero on 
                                   the BCD
0628                       792     BACKSPACE_KEYPRESS PROC FAR     
0628 50                    793             PUSH AX
                           794     
0629 803E740000            795             CMP USER_INPUT_LENGTH, 00H
062E 7431                  796             JE BACKSPACE_KEYPRESS_END
0630 FE0E7400              797             DEC USER_INPUT_LENGTH
0634 FE0E5200              798             DEC CHANGE_PLACE_VALUE
                           799             
0638 A0BB01                800             MOV AL, BCD_DISPLAY[1]
063B A2BA01                801             MOV BCD_DISPLAY[0], AL
063E A0BC01                802             MOV AL, BCD_DISPLAY[2]
0641 A2BB01                803             MOV BCD_DISPLAY[1], AL
0644 A0BD01                804             MOV AL, BCD_DISPLAY[3]
0647 A2BC01                805             MOV BCD_DISPLAY[2], AL
064A A0BE01                806             MOV AL, BCD_DISPLAY[4]
064D A2BD01                807             MOV BCD_DISPLAY[3], AL
0650 A0BF01                808             MOV AL, BCD_DISPLAY[5]
0653 A2BE01                809             MOV BCD_DISPLAY[4], AL
0656 A0AC01                810             MOV AL, BCD_NUMBERS[0]
0659 A2BF01                811             MOV BCD_DISPLAY[5], AL
                           812             
065C C606500000            813             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
                           814             
0661                       815     BACKSPACE_KEYPRESS_END: 
0661 58                    816             POP AX
0662 CB                    817             RET
                           818     BACKSPACE_KEYPRESS ENDP
                           819     
                           820     
                           821     ;Procedure that will display the price received via serial on the 7-segment display
0663                       822     DISPLAY_PRICE_ON_BCD PROC FAR   
0663 50                    823             PUSH AX
0664 53                    824             PUSH BX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   20


LOC  OBJ                  LINE     SOURCE

0665 51                    825             PUSH CX
                           826     
0666 33DB                  827             XOR BX, BX
0668 33C9                  828             XOR CX, CX
                           829             
066A 803ED90145            830             CMP PLACE_VALUE, 'E'
066F 7510                  831             JNE CONTINUE_NORMAL_DISPLAY
0671 A0B701                832             MOV AL, BCD_NUMBERS[11]
0674 A2BA01                833             MOV BCD_DISPLAY[0], AL
0677 8A0ECE01              834             MOV CL, SERIAL_INDEX
067B 80E902                835             SUB CL, 2
067E EB0F90                836             JMP PUT_DIGIT_IN_BCD
                           837             
0681                       838     CONTINUE_NORMAL_DISPLAY:
0681 8A0ED901              839             MOV CL, PLACE_VALUE
0685 80E92D                840             SUB CL, 45 ;Subtract 48 to convert to number and add 3 to take care of decima
                                   l digits
                           841             
0688 80F907                842             CMP CL, 7
068B 7E02                  843             JLE PUT_DIGIT_IN_BCD
068D B107                  844             MOV CL, 7
                           845             
068F                       846     PUT_DIGIT_IN_BCD:       
068F 8A87CF01              847             MOV AL, ITEM_PRICE[BX]
0693 3C2E                  848             CMP AL, '.'
0695 740D                  849             JE DECIMAL_ADD
0697 2C30                  850             SUB AL, 48
0699 A24F00                851             MOV KBD_NUM_INPUT, AL
069C 9AA007----     R      852             CALL FAR PTR ADD_BCD_QUEUE
06A1 EB0990                853             JMP END_PUT_DIGIT_LOOP
                           854             
06A4                       855     DECIMAL_ADD:
06A4 A0BA01                856             MOV AL, BCD_DISPLAY[0]
06A7 0C80                  857             OR AL, 80H
06A9 A2BA01                858             MOV BCD_DISPLAY[0], AL
                           859             
06AC                       860     END_PUT_DIGIT_LOOP:
06AC 43                    861             INC BX
06AD E2E0                  862             LOOP PUT_DIGIT_IN_BCD
                           863     
06AF                       864     DISPLAY_PRICE_ON_BCD_END:       
06AF 59                    865             POP     CX
06B0 5B                    866             POP     BX
06B1 58                    867             POP AX
06B2 CB                    868             RET
                           869     DISPLAY_PRICE_ON_BCD ENDP
                           870     
                           871     
                           872     ;Procedure to read both the keypads for user inputs
06B3                       873     KEYPAD_READ PROC FAR
06B3 52                    874             PUSH DX
06B4 51                    875             PUSH CX
06B5 53                    876             PUSH BX
06B6 50                    877             PUSH AX
06B7 56                    878             PUSH SI
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   21


LOC  OBJ                  LINE     SOURCE

                           879                                             
06B8 B300                  880             MOV BL, 00H        ;initialize BL for key code
06BA 32C0                  881             XOR AL, AL        ;clear all flags
06BC BA8100                882             MOV DX, PORTB  ;port B address to DX
06BF EE                    883             OUT DX, AL        ;ground all rows
06C0 BA8200                884             MOV DX, PORTC        ;Port C address to DX
                           885                  
06C3 EC                    886             IN AL, DX        ;read all columns
06C4 2477                  887             AND AL,77H  ;D0-D2 and D4-D6 are the 6 input pins for two keypads 0111 0111(7
                                   7H)                          
06C6 3C77                  888             CMP AL,77H
06C8 7439                  889             JZ RESET_FLAG 
                           890     
06CA 803E4E0001            891             CMP DS:KEY_FLAG, 01H
06CF 7437                  892             JZ IGNORE_KEYPRESS        ;if flag is set don't send keypad input to hyperter
                                   minal
                           893     
06D1 B07F                  894             MOV AL, 07FH       ;load data byte to ground a row
06D3 B704                  895             MOV BH, 04H        ;set row counter
                           896     
06D5                       897     NXTROW:                
06D5 D0C0                  898             ROL AL, 01H       ;rotate AL to ground next row
06D7 8AE8                  899             MOV CH, AL        ;save data byte to ground next row
06D9 BA8100                900             MOV DX, PORTB        ;port B address to DX
06DC EE                    901             OUT DX, AL        ;ground one of the rows
06DD BA8200                902             MOV DX, PORTC        ;port C address to DX
06E0 EC                    903             IN AL, DX        ;read input port for key closure
                           904             
06E1 8AE0                  905             MOV AH,AL
06E3 D0CC                  906             ROR AH,01H
                           907             
06E5 80E438                908             AND AH,38H
06E8 2407                  909             AND AL,07H
06EA 0AC4                  910             OR AL,AH
                           911     
06EC 243F                  912             AND AL,3FH ;D0-D2 and D4-D6 are the 6 input pins for two keypads 0111 0111(77
                                   H)
06EE B106                  913             MOV CL, 06H        ;set column counter
                           914     
06F0                       915     POLL_COLUMNS:        
06F0 D0D8                  916             RCR AL, 01H       ;move D0 to CF        
06F2 7365                  917             JNC SEND_KEY        ;key closure is found, if CF=0
06F4 FEC3                  918             INC BL                ;inc BL for next binary key code                       
                                     
                           919     
06F6 FEC9                  920             DEC CL                ;dec column counter if no key closure
06F8 75F6                  921             JNZ POLL_COLUMNS        ;check for key closure in next column
06FA 8AC5                  922             MOV AL, CH        ;Load data byte to ground next row
06FC FECF                  923             DEC BH                ;if no key closure found in all columns in this row, go
                                    to ground next row
06FE 75D5                  924             JNZ NXTROW        ;go back to ground next row   
0700 E99700                925             JMP SKIP_SEND       
                           926     
0703                       927     RESET_FLAG:
0703 C6064E0000            928             MOV DS:KEY_FLAG, 00H  ;if no keypad input is found, reset flag so that next k
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   22


LOC  OBJ                  LINE     SOURCE

                                   eypad input is printed
                           929             
0708                       930     IGNORE_KEYPRESS:
0708 9A3E00----     R      931             CALL FAR PTR CHANGE_CASHIER_STATE ;Function call to check if there is a chang
                                   e in the cash register's state     
070D 803EEE0100            932             CMP CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0712 7442                  933             JE TEMP_JUMP_SKIP_SEND
0714 803EEE0101            934             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
0719 743B                  935             JE TEMP_JUMP_SKIP_SEND
071B FF06C901              936             INC TIMEOUT_COUNTER
071F 813EC9010406          937             CMP TIMEOUT_COUNTER, TIMEOUT_COUNTER_LEN
0725 752F                  938             JNE TEMP_JUMP_SKIP_SEND
0727 C706C9010000          939             MOV TIMEOUT_COUNTER, 0
072D FE06CB01              940             INC TIMEOUT_SEC_COUNT
0731 803ECB0108            941             CMP TIMEOUT_SEC_COUNT, 08H
0736 7562                  942             JNE SKIP_SEND
0738 C606C10101            943             MOV TRIGGER_L_FLAG, 01H
073D C606EE0100            944             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0742 C606CB0100            945             MOV TIMEOUT_SEC_COUNT, 0
0747 9A1306----     R      946             CALL FAR PTR STATE_TRANSITION
074C 9AB105----     R      947             CALL FAR PTR CLEAR_ALL_VARIABLES        
0751 C606ED0103            948             MOV NETWORK_STATE, NETWORK_LOGOUT
0756                       949     TEMP_JUMP_SKIP_SEND:
0756 EB4290                950             JMP SKIP_SEND ;if flag is set don't send keypad input to hyperterminal
                           951             
0759                       952     SEND_KEY:
0759 80FB0B                953             CMP BL,0BH
075C 7F07                  954             JG LOAD_KEYS_PART2
                           955             
075E                       956     LOAD_KEYS_PART1:        
075E 8D363600              957         LEA SI,KEYS_PART1 
0762 EB0890                958         JMP SEND_CHAR
                           959             
0765                       960     LOAD_KEYS_PART2:
0765 80EB0C                961         SUB BL,0CH
0768 8D364200              962         LEA SI,KEYS_PART2
                           963             
076C                       964     SEND_CHAR:
076C 33C0                  965         XOR AX, AX
076E 8AC3                  966         MOV AL,BL
0770 03F0                  967         ADD SI,AX
0772 8A04                  968         MOV AL,[SI]
                           969             
0774 2C30                  970         SUB AL, 48 ;Converting to number
0776 3C09                  971             CMP AL, 09H ;If number is > 9 then it is some other character and not a numer
                                   ic digit
0778 7E08                  972             JLE SEND_NUMBER
                           973             
077A 0430                  974             ADD AL, 48
077C A25000                975             MOV KBD_CHAR_INPUT, AL
077F EB0990                976             JMP KEYPAD_END
                           977     
0782                       978     SEND_NUMBER:
                           979             ;manipulating the number
0782 A24F00                980             MOV KBD_NUM_INPUT, AL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   23


LOC  OBJ                  LINE     SOURCE

0785 C606510001            981             MOV KBD_INPUT_STATE, KBD_NEW_INPUT
                           982             
078A                       983     KEYPAD_END:
078A C6064E0001            984         MOV DS:KEY_FLAG, 01H ;set flag to one so that next time same key input is not pri
                                   nted
078F C606CB0100            985             MOV TIMEOUT_SEC_COUNT, 0
0794 C706C9010000          986             MOV TIMEOUT_COUNTER, 0
                           987             
079A                       988     SKIP_SEND:
079A 5E                    989             POP SI
079B 58                    990             POP AX
079C 5B                    991             POP BX
079D 59                    992             POP CX
079E 5A                    993             POP DX
079F CB                    994             RET     
                           995     KEYPAD_READ ENDP
                           996     
                           997     
                           998     ;Procedure that will add user's numeric input to the BCD display
07A0                       999     ADD_BCD_QUEUE PROC FAR
07A0 50                   1000             PUSH AX
07A1 53                   1001             PUSH BX
                          1002     
07A2 33DB                 1003             XOR BX, BX
                          1004     
07A4 8A1E4F00             1005             MOV BL, KBD_NUM_INPUT
07A8 8AA7AC01             1006             MOV AH, BCD_NUMBERS[BX]
                          1007             
07AC A0BE01               1008             MOV AL, BCD_DISPLAY[4]
07AF A2BF01               1009             MOV BCD_DISPLAY[5], AL
07B2 A0BD01               1010             MOV AL, BCD_DISPLAY[3]
07B5 A2BE01               1011             MOV BCD_DISPLAY[4], AL
07B8 A0BC01               1012             MOV AL, BCD_DISPLAY[2]
07BB A2BD01               1013             MOV BCD_DISPLAY[3], AL
07BE A0BB01               1014             MOV AL, BCD_DISPLAY[1]
07C1 A2BC01               1015             MOV BCD_DISPLAY[2], AL
07C4 A0BA01               1016             MOV AL, BCD_DISPLAY[0]
07C7 A2BB01               1017             MOV BCD_DISPLAY[1], AL          
07CA 8826BA01             1018             MOV BCD_DISPLAY[0], AH
                          1019             
07CE                      1020     BCD_ADD_END:    
07CE 5B                   1021             POP     BX
07CF 58                   1022             POP AX
07D0 CB                   1023             RET
                          1024     ADD_BCD_QUEUE ENDP
                          1025                     
                          1026     
                          1027     ;Procedure that is called whenever something is being sent via serial
07D1                      1028     SERIAL_REC_ACTION       PROC    FAR
07D1 50                   1029             PUSH AX
07D2 53                   1030             PUSH BX
07D3 51                   1031             PUSH CX
07D4 52                   1032             PUSH DX
                          1033     
07D5 803EEB0101           1034             CMP CASH_REGISTER_START, 01H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   24


LOC  OBJ                  LINE     SOURCE

07DA 745D                 1035             JE FIRST_JUMP_CASHIER_RECEIVER
                          1036             
07DC 803ECC0101           1037             CMP START_READ, 01H
07E1 7413                 1038             JE START_READING_ID_VALUES
                          1039             
07E3 3C5B                 1040             CMP AL, '['
07E5 7403                 1041             JE START_READING_ID
07E7 E9D300               1042             JMP END_SERIAL_COMMUNICATION
                          1043             
07EA                      1044     START_READING_ID:
07EA FE06EC01             1045             INC CASH_REGISTER_FLAG
07EE C606CC0101           1046             MOV START_READ, 01H
07F3 E9C700               1047             JMP END_SERIAL_COMMUNICATION
                          1048             
07F6                      1049     START_READING_ID_VALUES:
07F6 33DB                 1050             XOR BX, BX
07F8 8A1EEC01             1051             MOV BL, CASH_REGISTER_FLAG
07FC 4B                   1052             DEC BX
                          1053             
07FD 3A4730               1054             CMP AL, CASH_REGISTER_ID[BX]
0800 753A                 1055             JNE FIRST_JUMP_INITIALIZE_TERMINATE
0802 803EEC0106           1056             CMP CASH_REGISTER_FLAG, 06H
0807 7529                 1057             JNE NORMAL_ID_CHECK
0809 803EED0100           1058             CMP NETWORK_STATE, NETWORK_DISABLE
080E 742F                 1059             JE FIRST_JUMP_NEGATIVE_ACKNOWLEDGEMENT
0810 803EED0102           1060             CMP NETWORK_STATE, NETWORK_END_TRANSACTION
0815 7465                 1061             JE SEND_END_TRANSACTION_ACK
0817 803EED0103           1062             CMP NETWORK_STATE, NETWORK_LOGOUT
081C 7424                 1063             JE SEND_LOGOUT_ACK
081E 803EED0104           1064             CMP NETWORK_STATE, NETWORK_CANCEL_TRANSACTION
0823 743A                 1065             JE SEND_CANCEL_ACK
0825 C606EB0101           1066             MOV CASH_REGISTER_START, 01H
082A 9AED0A----     R     1067             CALL FAR PTR SEND_TO_PC
082F E98B00               1068             JMP END_SERIAL_COMMUNICATION
0832                      1069     NORMAL_ID_CHECK:
0832 FE06EC01             1070             INC CASH_REGISTER_FLAG
0836 E98400               1071             JMP END_SERIAL_COMMUNICATION
                          1072             
0839                      1073     FIRST_JUMP_CASHIER_RECEIVER:
0839 E98400               1074             JMP CASH_REGISTER_RECEIVE_START
                          1075             
083C                      1076     FIRST_JUMP_INITIALIZE_TERMINATE:
083C EB7090               1077             JMP INITIALIZE_TERMINATE_SERIAL
                          1078             
083F                      1079     FIRST_JUMP_NEGATIVE_ACKNOWLEDGEMENT:
083F EB5890               1080             JMP SEND_NEGATIVE_ACK
                          1081             
0842                      1082     SEND_LOGOUT_ACK:
0842 B02A                 1083             MOV AL, '*'
0844 9A0000----     E     1084             CALL FAR PTR PRINT_CHAR
0849 B032                 1085             MOV AL, '2'
084B 9A0000----     E     1086             CALL FAR PTR PRINT_CHAR
0850 B02A                 1087             MOV AL, '*'
0852 9A0000----     E     1088             CALL FAR PTR PRINT_CHAR
0857 C606ED0100           1089             MOV NETWORK_STATE, NETWORK_DISABLE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   25


LOC  OBJ                  LINE     SOURCE

085C EB5090               1090             JMP INITIALIZE_TERMINATE_SERIAL
                          1091     
085F                      1092     SEND_CANCEL_ACK:
085F B02A                 1093             MOV AL, '*'
0861 9A0000----     E     1094             CALL FAR PTR PRINT_CHAR
0866 B033                 1095             MOV AL, '3'
0868 9A0000----     E     1096             CALL FAR PTR PRINT_CHAR
086D B02A                 1097             MOV AL, '*'
086F 9A0000----     E     1098             CALL FAR PTR PRINT_CHAR
0874 C606ED0100           1099             MOV NETWORK_STATE, NETWORK_DISABLE
0879 EB3390               1100             JMP INITIALIZE_TERMINATE_SERIAL 
                          1101             
087C                      1102     SEND_END_TRANSACTION_ACK:
087C B02A                 1103             MOV AL, '*'
087E 9A0000----     E     1104             CALL FAR PTR PRINT_CHAR
0883 B034                 1105             MOV AL, '4'
0885 9A0000----     E     1106             CALL FAR PTR PRINT_CHAR
088A B02A                 1107             MOV AL, '*'
088C 9A0000----     E     1108             CALL FAR PTR PRINT_CHAR
0891 C606ED0100           1109             MOV NETWORK_STATE, NETWORK_DISABLE
0896 EB1690               1110             JMP INITIALIZE_TERMINATE_SERIAL
                          1111             
0899                      1112     SEND_NEGATIVE_ACK:
0899 B02A                 1113             MOV AL, '*'
089B 9A0000----     E     1114             CALL FAR PTR PRINT_CHAR
08A0 B030                 1115             MOV AL, '0'
08A2 9A0000----     E     1116             CALL FAR PTR PRINT_CHAR
08A7 B02A                 1117             MOV AL, '*'
08A9 9A0000----     E     1118             CALL FAR PTR PRINT_CHAR
                          1119             
08AE                      1120     INITIALIZE_TERMINATE_SERIAL:
08AE C606EB0100           1121             MOV CASH_REGISTER_START, 00H
08B3 C606EC0100           1122             MOV CASH_REGISTER_FLAG, 00H
08B8 C606CC0100           1123             MOV START_READ, 00H
                          1124             
08BD                      1125     END_SERIAL_COMMUNICATION:
08BD E92802               1126             JMP SERIAL_END
                          1127     
08C0                      1128     CASH_REGISTER_RECEIVE_START:            
08C0 803ECD0101           1129             CMP START_RECEIVE_PRICE, 01H
08C5 740F                 1130             JE START_READING_DIGITS
                          1131             
08C7 3C28                 1132             CMP AL, '('
08C9 7403                 1133             JE START_READING_PRICE
08CB E91A02               1134             JMP SERIAL_END
                          1135             
08CE                      1136     START_READING_PRICE:
08CE C606CD0101           1137             mov START_RECEIVE_PRICE, 01H
08D3 E91202               1138             JMP SERIAL_END
                          1139             
08D6                      1140     START_READING_DIGITS:
08D6 803ECE0100           1141             CMP SERIAL_INDEX, 00H
08DB 742A                 1142             JE GET_PLACE_VALUE
                          1143             
08DD 3C3B                 1144             CMP AL, ';'
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   26


LOC  OBJ                  LINE     SOURCE

08DF 740A                 1145             JE TEMP_INDEX_INCREMENT
                          1146             
08E1 803ECE0102           1147             CMP SERIAL_INDEX, 02H
08E6 7D0A                 1148             JGE GET_DIGITS
                          1149             
08E8 E9FD01               1150             JMP SERIAL_END
                          1151             
08EB                      1152     TEMP_INDEX_INCREMENT:
08EB FE06CE01             1153             INC SERIAL_INDEX
08EF E9F601               1154             JMP SERIAL_END
                          1155             
08F2                      1156     GET_DIGITS:
08F2 3C29                 1157             CMP AL, ')'
08F4 741E                 1158             JE TERMINATE_SERIAL
                          1159             
08F6 33DB                 1160             XOR BX, BX
08F8 8A1ECE01             1161             MOV BL, SERIAL_INDEX
08FC 8887CD01             1162             MOV ITEM_PRICE[BX-2], AL
0900 FE06CE01             1163             INC SERIAL_INDEX        
0904 E9E101               1164             JMP SERIAL_END
                          1165             
0907                      1166     GET_PLACE_VALUE:
0907 FE06CE01             1167             INC SERIAL_INDEX
090B A2DA01               1168             MOV TMP_PLACE_VALUE, AL
090E A2D901               1169             MOV PLACE_VALUE, AL
0911 E9D401               1170             JMP SERIAL_END
                          1171             
0914                      1172     TERMINATE_SERIAL:
0914 C606EB0100           1173             MOV CASH_REGISTER_START, 00H
0919 C606EC0100           1174             MOV CASH_REGISTER_FLAG, 00H
091E C606CC0100           1175             MOV START_READ, 00H
0923 C606CD0100           1176             MOV START_RECEIVE_PRICE, 00H
0928 C606ED0100           1177             MOV NETWORK_STATE, NETWORK_DISABLE
                          1178             
092D 803ED90141           1179             CMP PLACE_VALUE, 'A'
0932 7426                 1180             JE FIRST_JUMP_CHANGE_BARCODE_STATE
                          1181             
0934 803ED90142           1182             CMP PLACE_VALUE, 'B'
0939 7422                 1183             JE FIRST_JUMP_WRONG_LOGIN
                          1184             
093B 803ED90144           1185             CMP PLACE_VALUE, 'D'
0940 741E                 1186             JE FIRST_JUMP_WRONG_BARCODE
                          1187             
0942 803ED90145           1188             CMP PLACE_VALUE, 'E'
0947 741A                 1189             JE FIRST_JUMP_WRONG_QUANTITY
                          1190             
0949 803EEE0104           1191             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
094E 7416                 1192             JE FIRST_JUMP_PRICE_PROCESSING
                          1193             
0950 803EEE0106           1194             CMP CASH_REGISTER_STATE, CANCEL_ITEM
0955 7412                 1195             JE CANCEL_ITEM_PROCESSING
                          1196             
0957 E98E01               1197             JMP SERIAL_END
                          1198             
095A                      1199     FIRST_JUMP_CHANGE_BARCODE_STATE:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   27


LOC  OBJ                  LINE     SOURCE

095A E9CC00               1200             JMP CHANGE_STATE_TO_BARCODE
                          1201             
095D                      1202     FIRST_JUMP_WRONG_LOGIN:
095D E9FE00               1203             JMP DISPLAY_WRONG_LOGIN
                          1204             
0960                      1205     FIRST_JUMP_WRONG_BARCODE:
0960 E91201               1206             JMP DISPLAY_WRONG_BARCODE
                          1207             
0963                      1208     FIRST_JUMP_WRONG_QUANTITY:
0963 E95C01               1209             JMP DISPLAY_WRONG_QUANTITY
                          1210             
0966                      1211     FIRST_JUMP_PRICE_PROCESSING:
0966 E9AE00               1212             JMP PRICE_PROCESSING
                          1213             
0969                      1214     CANCEL_ITEM_PROCESSING: 
0969 8A16EA01             1215             MOV DL, TOTAL_PLACE_VALUE
096D 88165200             1216             MOV CHANGE_PLACE_VALUE, DL              
0971 8A26DA01             1217             MOV AH, TMP_PLACE_VALUE
0975 80EC30               1218             SUB AH, 48
0978 8826EA01             1219             MOV TOTAL_PLACE_VALUE, AH       
097C 33C9                 1220             XOR CX, CX
097E 33DB                 1221             XOR BX, BX
0980 B10A                 1222             MOV CL, 10
0982                      1223     CREATE_PRICE_ITEMS:
0982 8A97E001             1224             MOV DL, TOTAL_PRICE[BX]
0986 885753               1225             MOV CHANGE_PRICE[BX], DL
0989 8A97CF01             1226             MOV DL, ITEM_PRICE[BX]
098D 8897E001             1227             MOV TOTAL_PRICE[BX], DL
0991 43                   1228             INC BX
0992 E2EE                 1229             LOOP CREATE_PRICE_ITEMS 
0994 9A0C0F----     R     1230             CALL FAR PTR CALCULATE_CHANGE
0999 C606520000           1231             MOV CHANGE_PLACE_VALUE, 00H     
099E 33DB                 1232             XOR BX, BX
09A0 B10A                 1233             MOV CL, 10
09A2                      1234     TOTAL_INPUT_PRICE_SWAP:
09A2 8A97E001             1235             MOV DL, TOTAL_PRICE[BX]
09A6 8897CF01             1236             MOV ITEM_PRICE[BX], DL
09AA C6475330             1237             MOV CHANGE_PRICE[BX], '0'
09AE 43                   1238             INC BX
09AF E2F1                 1239             LOOP TOTAL_INPUT_PRICE_SWAP     
09B1 8A26EA01             1240             MOV AH, TOTAL_PLACE_VALUE
09B5 80C430               1241             ADD AH, 48
09B8 8826D901             1242             MOV PLACE_VALUE, AH
09BC 8826DA01             1243             MOV TMP_PLACE_VALUE, AH 
09C0 FE0EEF01             1244             DEC PURCHASE_ITEM_COUNT
09C4 803EF20101           1245             CMP MODIFY_ITEM_FLAG, 01H
09C9 751C                 1246             JNE CONTINUE_CANCELLING 
09CB C606CE0100           1247             MOV SERIAL_INDEX, 00H
09D0 C606EE0104           1248             MOV CASH_REGISTER_STATE, ENTER_QUANTITY
09D5 C606EB0101           1249             MOV CASH_REGISTER_START, 01H
09DA C606C50100           1250             MOV SHOW_BCD_ONCE_FLAG, 00H
09DF C606AB0100           1251             MOV SAY_SOUND_ONCE_FLAG, 00H
09E4 E90101               1252             JMP SERIAL_END
09E7                      1253     CONTINUE_CANCELLING:
09E7 C606EE0105           1254             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   28


LOC  OBJ                  LINE     SOURCE

09EC C606C50101           1255             MOV SHOW_BCD_ONCE_FLAG, 01H
09F1 C606AB0101           1256             MOV SAY_SOUND_ONCE_FLAG, 01H
09F6 9A1306----     R     1257             CALL FAR PTR STATE_TRANSITION
09FB C606AA0128           1258             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
0A00 9ADD0B----     R     1259             CALL FAR PTR ADD_SOUND_INDEX
0A05 9A6306----     R     1260             CALL FAR PTR DISPLAY_PRICE_ON_BCD
0A0A 9A060C----     R     1261             CALL FAR PTR POPULATE_SOUND_QUEUE       
0A0F C606CE0100           1262             MOV SERIAL_INDEX, 00H
0A14 E9D100               1263             JMP SERIAL_END
                          1264             
0A17                      1265     PRICE_PROCESSING:
0A17 C606EE0105           1266             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0A1C C606F20100           1267             MOV MODIFY_ITEM_FLAG, 00H
0A21 9A1306----     R     1268             CALL FAR PTR STATE_TRANSITION
0A26 E9BF00               1269             JMP SERIAL_END
                          1270             
0A29                      1271     CHANGE_STATE_TO_BARCODE:
0A29 C606CE0100           1272             MOV SERIAL_INDEX, 00H
0A2E C606EE0102           1273             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0A33 C606C40101           1274             MOV TRIGGER_P_FLAG, 01H
0A38 9A1306----     R     1275             CALL FAR PTR STATE_TRANSITION
0A3D C606AA0123           1276             MOV SOUND_INDEX_INPUT, SOUND_GOOD ;To say the word 'good'
0A42 9ADD0B----     R     1277             CALL FAR PTR ADD_SOUND_INDEX
0A47 C606AA012C           1278             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
0A4C 9ADD0B----     R     1279             CALL FAR PTR ADD_SOUND_INDEX
0A51 C606AA0125           1280             MOV SOUND_INDEX_INPUT, SOUND_AFTERNOON ;To say the word 'afternoon'
0A56 9ADD0B----     R     1281             CALL FAR PTR ADD_SOUND_INDEX
0A5B E98A00               1282             JMP SERIAL_END
                          1283             
0A5E                      1284     DISPLAY_WRONG_LOGIN:
0A5E C606CE0100           1285             MOV SERIAL_INDEX, 00H
0A63 C606C30101           1286             MOV TRIGGER_A_FLAG, 01H
0A68 C606EE0100           1287             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0A6D 9A1306----     R     1288             CALL FAR PTR STATE_TRANSITION
0A72 EB7490               1289             JMP SERIAL_END
                          1290             
0A75                      1291     DISPLAY_WRONG_BARCODE:
0A75 803EF40101           1292             CMP REFUND_FLAG, 01H
0A7A 7519                 1293             JNE NORMAL_WRONG_BARCODE
0A7C C606F40100           1294             MOV REFUND_FLAG, 00H
0A81 C606EE0102           1295             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0A86 803ECF0131           1296             CMP ITEM_PRICE[0], '1'
0A8B 742E                 1297             JE SHOW_ALPHABET_P
0A8D C606C20101           1298             MOV TRIGGER_E_FLAG, 01H
0A92 EB0B90               1299             JMP CONTINUE_SEND_ERROR
0A95                      1300     NORMAL_WRONG_BARCODE:
0A95 C606EE0105           1301             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0A9A C606C20101           1302             MOV TRIGGER_E_FLAG, 01H
0A9F                      1303     CONTINUE_SEND_ERROR:
0A9F C606CE0100           1304             MOV SERIAL_INDEX, 00H
0AA4 C606F20100           1305             MOV MODIFY_ITEM_FLAG, 00H
0AA9 C606C50101           1306             MOV SHOW_BCD_ONCE_FLAG, 01H
0AAE C606AB0101           1307             MOV SAY_SOUND_ONCE_FLAG, 01H    
0AB3 9A1306----     R     1308             CALL FAR PTR STATE_TRANSITION
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   29


LOC  OBJ                  LINE     SOURCE

0AB8 EB2E90               1309             JMP SERIAL_END
0ABB                      1310     SHOW_ALPHABET_P:
0ABB C606C40101           1311             MOV TRIGGER_P_FLAG, 01H
0AC0 EBDD                 1312             JMP CONTINUE_SEND_ERROR
                          1313             
0AC2                      1314     DISPLAY_WRONG_QUANTITY:
0AC2 C606EE0105           1315             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0AC7 C606F20100           1316             MOV MODIFY_ITEM_FLAG, 00H
0ACC C606C50101           1317             MOV SHOW_BCD_ONCE_FLAG, 01H
0AD1 C606AB0101           1318             MOV SAY_SOUND_ONCE_FLAG, 01H
0AD6 9A1306----     R     1319             CALL FAR PTR STATE_TRANSITION
0ADB 9A6306----     R     1320             CALL FAR PTR DISPLAY_PRICE_ON_BCD
0AE0 C606CE0100           1321             MOV SERIAL_INDEX, 00H
0AE5 EB0190               1322             JMP SERIAL_END
                          1323             
0AE8                      1324     SERIAL_END:
0AE8 5A                   1325             POP DX
0AE9 59                   1326             POP     CX
0AEA 5B                   1327             POP     BX
0AEB 58                   1328             POP AX
0AEC CB                   1329             RET
                          1330     SERIAL_REC_ACTION       ENDP
                          1331     
                          1332     
                          1333     ;Procedure that will send the cash register input to the PC via serial
0AED                      1334     SEND_TO_PC PROC FAR     
0AED 50                   1335             PUSH AX
0AEE 53                   1336             PUSH BX
0AEF 51                   1337             PUSH CX
                          1338     
0AF0 803EF40101           1339             CMP REFUND_FLAG, 01H
0AF5 7455                 1340             JE FIRST_JUMP_CANCEL_BARCODE
                          1341             
0AF7 803EF30101           1342             CMP USERNAME_FLAG, 01H
0AFC 740D                 1343             JE SEND_LOGIN_TO_PC
                          1344             
0AFE 803EEE0104           1345             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0B03 744A                 1346             JE SEND_TRANSACTION_TO_PC
                          1347             
0B05 EB4590               1348             JMP FIRST_JUMP_CANCEL_BARCODE
                          1349             
0B08 E9CE00               1350             JMP SEND_PC_END
                          1351     
0B0B                      1352     SEND_LOGIN_TO_PC:       
0B0B B028                 1353             MOV AL, '('
0B0D 9A0000----     E     1354             CALL FAR PTR PRINT_CHAR
0B12 33C9                 1355             XOR CX, CX
0B14 33DB                 1356             XOR BX, BX
0B16 B106                 1357             MOV CL, KBD_USERNAME_LENGTH     
0B18                      1358     SEND_USERNAME:
0B18 8A475D               1359             MOV AL, USER_USERNAME[BX]
0B1B 9A0000----     E     1360             CALL FAR PTR PRINT_CHAR
0B20 43                   1361             INC BX
0B21 E2F5                 1362             LOOP SEND_USERNAME              
0B23 B03B                 1363             MOV AL, ';'
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   30


LOC  OBJ                  LINE     SOURCE

0B25 9A0000----     E     1364             CALL FAR PTR PRINT_CHAR
0B2A 33DB                 1365             XOR BX, BX
0B2C B106                 1366             MOV CL, KBD_USERNAME_LENGTH     
0B2E                      1367     SEND_PASSWORD:
0B2E 8A4763               1368             MOV AL, USER_PASSWORD[BX]
0B31 02C3                 1369             ADD AL, BL
0B33 040F                 1370             ADD AL, 15
0B35 9A0000----     E     1371             CALL FAR PTR PRINT_CHAR
0B3A 43                   1372             INC BX
0B3B E2F1                 1373             LOOP SEND_PASSWORD      
0B3D B029                 1374             MOV AL, ')'
0B3F 9A0000----     E     1375             CALL FAR PTR PRINT_CHAR 
0B44 C606F30100           1376             MOV USERNAME_FLAG, 00H
0B49 E98D00               1377             JMP SEND_PC_END
                          1378             
0B4C                      1379     FIRST_JUMP_CANCEL_BARCODE:
0B4C EB5D90               1380             JMP SEND_CANCEL_BARCODE_PC
                          1381             
0B4F                      1382     SEND_TRANSACTION_TO_PC:
0B4F 803EF20101           1383             CMP MODIFY_ITEM_FLAG, 01H
0B54 740C                 1384             JE SEND_HASH_CHARACTER
0B56 803EF50101           1385             CMP ANDROID_FLAG, 01H
0B5B 740F                 1386             JE SEND_AT_CHARACTER
0B5D B05B                 1387             MOV AL, '['
0B5F EB1290               1388             JMP CONTINUE_SENDING_BARCODE
0B62                      1389     SEND_HASH_CHARACTER:    
0B62 B023                 1390             MOV AL, '#'
0B64 C606EE0106           1391             MOV CASH_REGISTER_STATE, CANCEL_ITEM
0B69 EB0890               1392             JMP CONTINUE_SENDING_BARCODE
0B6C                      1393     SEND_AT_CHARACTER:
0B6C C606F50100           1394             MOV ANDROID_FLAG, 00H
0B71 B040                 1395             MOV AL, '@'
0B73                      1396     CONTINUE_SENDING_BARCODE:
0B73 9A0000----     E     1397             CALL FAR PTR PRINT_CHAR
0B78 33C9                 1398             XOR CX, CX
0B7A 33DB                 1399             XOR BX, BX
0B7C B108                 1400             MOV CL, KBD_BARCODE_LENGTH      
0B7E                      1401     SEND_BARCODE:
0B7E 8A4769               1402             MOV AL, USER_BARCODE[BX]
0B81 9A0000----     E     1403             CALL FAR PTR PRINT_CHAR
0B86 43                   1404             INC BX
0B87 E2F5                 1405             LOOP SEND_BARCODE       
0B89 B03B                 1406             MOV AL, ';'
0B8B 9A0000----     E     1407             CALL FAR PTR PRINT_CHAR
0B90 33DB                 1408             XOR BX, BX
0B92 8A0E7400             1409             MOV CL, USER_INPUT_LENGTH       
0B96                      1410     SEND_QUANTITY:
0B96 8A4771               1411             MOV AL, USER_QUANTITY[BX]
0B99 9A0000----     E     1412             CALL FAR PTR PRINT_CHAR
0B9E 43                   1413             INC BX
0B9F E2F5                 1414             LOOP SEND_QUANTITY      
0BA1 B05D                 1415             MOV AL, ']'
0BA3 9A0000----     E     1416             CALL FAR PTR PRINT_CHAR
0BA8 EB2F90               1417             JMP SEND_PC_END
                          1418             
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   31


LOC  OBJ                  LINE     SOURCE

0BAB                      1419     SEND_CANCEL_BARCODE_PC: 
0BAB 803EF40101           1420             CMP REFUND_FLAG, 01H
0BB0 7405                 1421             JE SEND_DOLLAR
0BB2 B03C                 1422             MOV AL, '<'
0BB4 EB0390               1423             JMP CONTINUE_SEND_CANCEL
0BB7                      1424     SEND_DOLLAR:    
0BB7 B024                 1425             MOV AL, '$'
0BB9                      1426     CONTINUE_SEND_CANCEL:
0BB9 9A0000----     E     1427             CALL FAR PTR PRINT_CHAR
0BBE 33C9                 1428             XOR CX, CX
0BC0 33DB                 1429             XOR BX, BX
0BC2 B108                 1430             MOV CL, KBD_BARCODE_LENGTH      
0BC4                      1431     SEND_ITEM_ID:
0BC4 8A4769               1432             MOV AL, USER_BARCODE[BX]
0BC7 9A0000----     E     1433             CALL FAR PTR PRINT_CHAR
0BCC 43                   1434             INC BX
0BCD E2F5                 1435             LOOP SEND_ITEM_ID               
0BCF B03E                 1436             MOV AL, '>'
0BD1 9A0000----     E     1437             CALL FAR PTR PRINT_CHAR
0BD6 EB0190               1438             JMP SEND_PC_END
                          1439     
0BD9                      1440     SEND_PC_END:    
0BD9 59                   1441             POP     CX
0BDA 5B                   1442             POP     BX
0BDB 58                   1443             POP AX
0BDC CB                   1444             RET
                          1445     SEND_TO_PC ENDP
                          1446     
                          1447     
                          1448     ;Procedure that will take add the necessary sound indices to the sound queue for spea
                                   ker output based on a parameter
0BDD                      1449     ADD_SOUND_INDEX PROC FAR        
0BDD 50                   1450             PUSH AX
0BDE 53                   1451             PUSH BX
0BDF 51                   1452             PUSH CX
                          1453     
0BE0 33DB                 1454             XOR BX, BX
0BE2 8A1EA901             1455             MOV BL, SOUND_TAIL
0BE6 8A0EAA01             1456             MOV CL, SOUND_INDEX_INPUT
0BEA B002                 1457             MOV AL, 2
0BEC F6E1                 1458             MUL CL
0BEE 88878801             1459             MOV SOUND_QUEUE[BX], AL
                          1460             
0BF2 FE06A901             1461             INC SOUND_TAIL 
0BF6 803EA90120           1462             CMP SOUND_TAIL, 32
0BFB 7C05                 1463             JL SOUND_INDEX_END
0BFD C606A90100           1464             MOV SOUND_TAIL, 00H     
                          1465             
0C02                      1466     SOUND_INDEX_END:        
0C02 59                   1467             POP     CX
0C03 5B                   1468             POP     BX
0C04 58                   1469             POP AX
0C05 CB                   1470             RET
                          1471     ADD_SOUND_INDEX ENDP
                          1472     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   32


LOC  OBJ                  LINE     SOURCE

                          1473     
                          1474     ;Procedure that will convert a price received on the serial into a format which is sa
                                   y-able on the speaker
0C06                      1475     POPULATE_SOUND_QUEUE PROC FAR   
0C06 50                   1476             PUSH AX
0C07 53                   1477             PUSH BX
0C08 51                   1478             PUSH CX
                          1479     
0C09 33DB                 1480             XOR BX, BX
0C0B 33C9                 1481             XOR CX, CX
                          1482             
0C0D 802ED90130           1483             SUB     PLACE_VALUE, 48
0C12 8A0ECE01             1484             MOV CL, SERIAL_INDEX
0C16 83E902               1485             SUB CX, 2
0C19 880ECE01             1486             MOV SERIAL_INDEX, CL    
                          1487             
0C1D                      1488     LOAD_SOUND_QUEUE:
0C1D 8A87CF01             1489             MOV AL, ITEM_PRICE[BX]
0C21 3C2E                 1490             CMP AL, '.'
0C23 7403                 1491             JE SAY_CENTS_VALUE
0C25 EB3490               1492             JMP SAY_OTHER_VALUES
                          1493             
0C28                      1494     SAY_CENTS_VALUE:
0C28 803EDE0100           1495             CMP CENTS_AND_FLAG, 00H
0C2D 740A                 1496             JE CONTINUE_SAYING_CENTS
0C2F C606AA011E           1497             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0C34 9ADD0B----     R     1498             CALL FAR PTR ADD_SOUND_INDEX
                          1499             
0C39                      1500     CONTINUE_SAYING_CENTS:
0C39 43                   1501             INC BX
0C3A 8A87CF01             1502             MOV AL, ITEM_PRICE[BX]
0C3E A2DB01               1503             MOV TWO_DIGIT_SOUND[0], AL
0C41 43                   1504             INC BX
0C42 8A87CF01             1505             MOV AL, ITEM_PRICE[BX]
0C46 A2DC01               1506             MOV TWO_DIGIT_SOUND[1], AL
0C49 9A920D----     R     1507             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0C4E C606AA0122           1508             MOV SOUND_INDEX_INPUT, SOUND_CENTS ;To say the word 'cents'
0C53 9ADD0B----     R     1509             CALL FAR PTR ADD_SOUND_INDEX 
0C58 E92401               1510             JMP SOUND_POPULATE_END
                          1511             
0C5B                      1512     SAY_OTHER_VALUES:       
0C5B 3C30                 1513             CMP AL, '0'
0C5D 7520                 1514             JNE CHECK_OTHER_VALUES
0C5F 803EDF0101           1515             CMP THOUSAND_FLAG, 01H
0C64 7516                 1516             JNE EXIT_FROM_PROCEDURE
0C66 803ED90104           1517             CMP PLACE_VALUE, 4
0C6B 750F                 1518             JNE EXIT_FROM_PROCEDURE
0C6D C606AA011D           1519             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0C72 9ADD0B----     R     1520             CALL FAR PTR ADD_SOUND_INDEX 
0C77 C606DF0100           1521             MOV THOUSAND_FLAG, 00H
                          1522             
0C7C                      1523     EXIT_FROM_PROCEDURE:
0C7C E9DF00               1524             JMP CONTINUE_NEXT_ITERATION
                          1525             
0C7F                      1526     CHECK_OTHER_VALUES:     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   33


LOC  OBJ                  LINE     SOURCE

0C7F 803ED90106           1527             CMP PLACE_VALUE, 6
0C84 7423                 1528             JE PROCESS_6th_DIGIT
                          1529             
0C86 803ED90105           1530             CMP PLACE_VALUE, 5
0C8B 7443                 1531             JE PROCESS_5th_DIGIT
                          1532             
0C8D 803ED90104           1533             CMP PLACE_VALUE, 4
0C92 7439                 1534             JE TEMP_JUMP_4th_DIGIT
                          1535             
0C94 803ED90103           1536             CMP PLACE_VALUE, 3
0C99 740E                 1537             JE PROCESS_6th_DIGIT
                          1538             
0C9B 803ED90102           1539             CMP PLACE_VALUE, 2
0CA0 742E                 1540             JE PROCESS_5th_DIGIT
                          1541             
0CA2 803ED90101           1542             CMP PLACE_VALUE, 1
0CA7 7475                 1543             JE PROCESS_4th_DIGIT
                          1544             
0CA9                      1545     PROCESS_6th_DIGIT:
0CA9 C606DB0130           1546             MOV TWO_DIGIT_SOUND[0], '0'
0CAE A2DC01               1547             MOV TWO_DIGIT_SOUND[1], AL
0CB1 9A920D----     R     1548             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0CB6 C606AA011C           1549             MOV SOUND_INDEX_INPUT, SOUND_HUNDRED ;To say the word 'Hundred'
0CBB 9ADD0B----     R     1550             CALL FAR PTR ADD_SOUND_INDEX 
0CC0 C606DD0101           1551             MOV AND_FLAG, 01H
0CC5 C606DF0101           1552             MOV THOUSAND_FLAG, 01H
0CCA E99100               1553             JMP CONTINUE_NEXT_ITERATION
                          1554             
0CCD                      1555     TEMP_JUMP_4th_DIGIT:
0CCD EB4F90               1556             JMP PROCESS_4th_DIGIT
                          1557             
0CD0                      1558     PROCESS_5th_DIGIT:
0CD0 C606DF0100           1559             MOV THOUSAND_FLAG, 00H
0CD5 803EDD0100           1560             CMP AND_FLAG, 00H
0CDA 740A                 1561             JE CONTINUE_WITH_5th_DIGIT
0CDC C606AA011E           1562             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0CE1 9ADD0B----     R     1563             CALL FAR PTR ADD_SOUND_INDEX
                          1564     
0CE6                      1565     CONTINUE_WITH_5th_DIGIT:
0CE6 8A87CF01             1566             MOV AL, ITEM_PRICE[BX]
0CEA A2DB01               1567             MOV TWO_DIGIT_SOUND[0], AL
0CED 43                   1568             INC BX
0CEE 8A87CF01             1569             MOV AL, ITEM_PRICE[BX]
0CF2 A2DC01               1570             MOV TWO_DIGIT_SOUND[1], AL
0CF5 9A920D----     R     1571             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0CFA 803ED90103           1572             CMP PLACE_VALUE, 3
0CFF 7E0A                 1573             JLE CONTINUE_WITH_REST_OF_5th_DIGIT
0D01 C606AA011D           1574             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0D06 9ADD0B----     R     1575             CALL FAR PTR ADD_SOUND_INDEX 
                          1576             
0D0B                      1577     CONTINUE_WITH_REST_OF_5th_DIGIT:
0D0B FE0ED901             1578             DEC PLACE_VALUE
0D0F C606DD0100           1579             MOV AND_FLAG, 00H
0D14 49                   1580             DEC CX
0D15 EB0490               1581             JMP FIRST_JMP_ITERATION 
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   34


LOC  OBJ                  LINE     SOURCE

                          1582                     
0D18                      1583     FIRST_JMP_TO_LOAD:
0D18 E902FF               1584             JMP LOAD_SOUND_QUEUE
                          1585             
0D1B                      1586     FIRST_JMP_ITERATION:
0D1B EB4190               1587             JMP CONTINUE_NEXT_ITERATION
                          1588             
0D1E                      1589     PROCESS_4th_DIGIT:
0D1E C606DF0100           1590             MOV THOUSAND_FLAG, 00H
0D23 803EDD0100           1591             CMP AND_FLAG, 00H
0D28 740A                 1592             JE CONTINUE_WITH_4th_DIGIT
0D2A C606AA011E           1593             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0D2F 9ADD0B----     R     1594             CALL FAR PTR ADD_SOUND_INDEX
                          1595             
0D34                      1596     CONTINUE_WITH_4th_DIGIT:
0D34 C606DB0130           1597             MOV TWO_DIGIT_SOUND[0], '0'
0D39 8A87CF01             1598             MOV AL, ITEM_PRICE[BX]
0D3D A2DC01               1599             MOV TWO_DIGIT_SOUND[1], AL
0D40 9A920D----     R     1600             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0D45 803ED90103           1601             CMP PLACE_VALUE, 3
0D4A 7E0A                 1602             JLE CONTINUE_WITH_REST_OF_4th_DIGIT
0D4C C606AA011D           1603             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0D51 9ADD0B----     R     1604             CALL FAR PTR ADD_SOUND_INDEX 
0D56                      1605     CONTINUE_WITH_REST_OF_4th_DIGIT:
0D56 C606DD0100           1606             MOV AND_FLAG, 00H
0D5B EB0190               1607             JMP CONTINUE_NEXT_ITERATION     
                          1608             
0D5E                      1609     CONTINUE_NEXT_ITERATION:
0D5E 43                   1610             INC BX
0D5F FE0ED901             1611             DEC PLACE_VALUE
0D63 803ED90100           1612             CMP PLACE_VALUE, 0
0D68 7403                 1613             JE SAY_DOLLARS_AFTER_PRICE
0D6A EB1090               1614             JMP CONTINUE_AFTER_DOLLAR
                          1615             
0D6D                      1616     SAY_DOLLARS_AFTER_PRICE:
0D6D C606DE0101           1617             MOV CENTS_AND_FLAG, 01H
0D72 C606AA0121           1618             MOV SOUND_INDEX_INPUT, SOUND_DOLLARS ;To say the word 'Dollars'
0D77 9ADD0B----     R     1619             CALL FAR PTR ADD_SOUND_INDEX 
                          1620             
0D7C                      1621     CONTINUE_AFTER_DOLLAR:          
0D7C 49                   1622             DEC CX
0D7D 7599                 1623             JNZ FIRST_JMP_TO_LOAD
                          1624             
0D7F                      1625     SOUND_POPULATE_END:     
0D7F C606CE0100           1626             MOV SERIAL_INDEX, 00H
0D84 C606DD0100           1627             MOV AND_FLAG, 00H
0D89 C606DE0100           1628             MOV CENTS_AND_FLAG, 00H
0D8E 59                   1629             POP     CX
0D8F 5B                   1630             POP     BX
0D90 58                   1631             POP AX
0D91 CB                   1632             RET
                          1633     POPULATE_SOUND_QUEUE ENDP
                          1634     
                          1635     
                          1636     ;Procedure that will take in  a two digit value and add the corresponding sound indic
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   35


LOC  OBJ                  LINE     SOURCE

                                   es to the sound queue
0D92                      1637     PROCESS_TWO_DIGIT_SOUND PROC FAR        
0D92 50                   1638             PUSH AX
0D93 52                   1639             PUSH DX
                          1640     
0D94 8A16DB01             1641             MOV DL, TWO_DIGIT_SOUND[0]
0D98 80EA30               1642             SUB DL, 48
0D9B 8AF2                 1643             MOV DH, DL
0D9D B00A                 1644             MOV AL, 10
0D9F F6E2                 1645             MUL DL
0DA1 8AD0                 1646             MOV DL, AL
                          1647             
0DA3 A0DC01               1648             MOV AL, TWO_DIGIT_SOUND[1]
0DA6 2C30                 1649             SUB AL, 48
0DA8 8AE0                 1650             MOV AH, AL
0DAA 02C2                 1651             ADD AL, DL
                          1652             
0DAC 3C14                 1653             CMP AL, 20
0DAE 7F0B                 1654             JG PLAY_GREATER_THAN_20
0DB0 A2AA01               1655             MOV SOUND_INDEX_INPUT, AL
0DB3 9ADD0B----     R     1656             CALL FAR PTR ADD_SOUND_INDEX
                          1657             
0DB8 EB1B90               1658             JMP TWO_DIGIT_SOUND_END 
                          1659             
0DBB                      1660     PLAY_GREATER_THAN_20:
0DBB 8AC6                 1661             MOV AL, DH
0DBD 0412                 1662             ADD AL, 18
0DBF A2AA01               1663             MOV SOUND_INDEX_INPUT, AL
0DC2 9ADD0B----     R     1664             CALL FAR PTR ADD_SOUND_INDEX
                          1665             
0DC7 8AC4                 1666             MOV AL, AH
0DC9 3C00                 1667             CMP AL, 0
0DCB 7408                 1668             JE TWO_DIGIT_SOUND_END
0DCD A2AA01               1669             MOV SOUND_INDEX_INPUT, AL
0DD0 9ADD0B----     R     1670             CALL FAR PTR ADD_SOUND_INDEX
                          1671             
0DD5                      1672     TWO_DIGIT_SOUND_END:    
0DD5 5A                   1673             POP DX
0DD6 58                   1674             POP AX
0DD7 CB                   1675             RET
                          1676     PROCESS_TWO_DIGIT_SOUND ENDP
                          1677     
                          1678     
                          1679     ;Procedure that will add the incoming price to the total price
0DD8                      1680     ADD_INCOMING_PRICE PROC FAR     
0DD8 50                   1681             PUSH AX
0DD9 53                   1682             PUSH BX
0DDA 51                   1683             PUSH CX
0DDB 52                   1684             PUSH DX
                          1685     
0DDC A0DA01               1686             MOV AL, TMP_PLACE_VALUE
0DDF 2C30                 1687             SUB AL, 48
0DE1 A2D901               1688             MOV PLACE_VALUE, AL     
                          1689             
0DE4 33C9                 1690             XOR CX, CX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   36


LOC  OBJ                  LINE     SOURCE

                          1691             
0DE6 A0EA01               1692             MOV AL, TOTAL_PLACE_VALUE
0DE9 3A06D901             1693             CMP AL, PLACE_VALUE
0DED 745F                 1694             JE FIRST_JMP_ADDITION
0DEF 7C03                 1695             JL ADD_ZERO_TOTAL
0DF1 EB6490               1696             JMP ADD_ZERO_INCOMING
                          1697             
0DF4                      1698     ADD_ZERO_TOTAL:
0DF4 8A16D901             1699             MOV DL, PLACE_VALUE
0DF8 2AD0                 1700             SUB DL, AL
0DFA 0016EA01             1701             ADD TOTAL_PLACE_VALUE, DL
0DFE 8ACA                 1702             MOV CL, DL
0E00                      1703     START_SHIFT_TOTAL:
0E00 A0E801               1704             MOV AL, TOTAL_PRICE[8]
0E03 A2E901               1705             MOV TOTAL_PRICE[9], AL
0E06 A0E701               1706             MOV AL, TOTAL_PRICE[7]
0E09 A2E801               1707             MOV TOTAL_PRICE[8], AL
0E0C A0E601               1708             MOV AL, TOTAL_PRICE[6]
0E0F A2E701               1709             MOV TOTAL_PRICE[7], AL
0E12 A0E501               1710             MOV AL, TOTAL_PRICE[5]
0E15 A2E601               1711             MOV TOTAL_PRICE[6], AL
0E18 A0E401               1712             MOV AL, TOTAL_PRICE[4]
0E1B A2E501               1713             MOV TOTAL_PRICE[5], AL
0E1E A0E301               1714             MOV AL, TOTAL_PRICE[3]
0E21 A2E401               1715             MOV TOTAL_PRICE[4], AL
0E24 A0E201               1716             MOV AL, TOTAL_PRICE[2]
0E27 A2E301               1717             MOV TOTAL_PRICE[3], AL
0E2A A0E101               1718             MOV AL, TOTAL_PRICE[1]
0E2D A2E201               1719             MOV TOTAL_PRICE[2], AL
0E30 A0E001               1720             MOV AL, TOTAL_PRICE[0]
0E33 A2E101               1721             MOV TOTAL_PRICE[1], AL
0E36 803EF10101           1722             CMP SWAP_JUMP_FLAG, 01H
0E3B 7414                 1723             JE FIRST_CONTINUE_SWAP
0E3D 803EF10102           1724             CMP SWAP_JUMP_FLAG, 02H
0E42 7410                 1725             JE SECOND_CONTINUE_SWAP
0E44 C606E00130           1726             MOV TOTAL_PRICE[0], '0'
0E49 E2B5                 1727             LOOP START_SHIFT_TOTAL
0E4B EB5390               1728             JMP START_ADDITION
                          1729             
0E4E                      1730     FIRST_JMP_ADDITION:
0E4E EB5090               1731             JMP START_ADDITION
                          1732             
0E51                      1733     FIRST_CONTINUE_SWAP:
0E51 E9A500               1734             JMP CONTINUE_FIRST_SWAP
                          1735             
0E54                      1736     SECOND_CONTINUE_SWAP:
0E54 E90A01               1737             JMP CONTINUE_SECOND_SWAP
                          1738             
0E57                      1739     ADD_ZERO_INCOMING:
0E57 8A16D901             1740             MOV DL, PLACE_VALUE
0E5B 2AC2                 1741             SUB AL, DL
0E5D 0006D901             1742             ADD PLACE_VALUE, AL
0E61 8AC8                 1743             MOV CL, AL
0E63                      1744     START_SHIFT_INCOMING:
0E63 A0D701               1745             MOV AL, ITEM_PRICE[8]
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   37


LOC  OBJ                  LINE     SOURCE

0E66 A2D801               1746             MOV ITEM_PRICE[9], AL
0E69 A0D601               1747             MOV AL, ITEM_PRICE[7]
0E6C A2D701               1748             MOV ITEM_PRICE[8], AL
0E6F A0D501               1749             MOV AL, ITEM_PRICE[6]
0E72 A2D601               1750             MOV ITEM_PRICE[7], AL
0E75 A0D401               1751             MOV AL, ITEM_PRICE[5]
0E78 A2D501               1752             MOV ITEM_PRICE[6], AL
0E7B A0D301               1753             MOV AL, ITEM_PRICE[4]
0E7E A2D401               1754             MOV ITEM_PRICE[5], AL
0E81 A0D201               1755             MOV AL, ITEM_PRICE[3]
0E84 A2D301               1756             MOV ITEM_PRICE[4], AL
0E87 A0D101               1757             MOV AL, ITEM_PRICE[2]
0E8A A2D201               1758             MOV ITEM_PRICE[3], AL
0E8D A0D001               1759             MOV AL, ITEM_PRICE[1]
0E90 A2D101               1760             MOV ITEM_PRICE[2], AL
0E93 A0CF01               1761             MOV AL, ITEM_PRICE[0]
0E96 A2D001               1762             MOV ITEM_PRICE[1], AL
0E99 C606CF0130           1763             MOV ITEM_PRICE[0], '0'
0E9E E2C3                 1764         LOOP START_SHIFT_INCOMING   
                          1765             
0EA0                      1766     START_ADDITION:
0EA0 8A0ED901             1767             MOV CL, PLACE_VALUE
0EA4 80C103               1768             ADD CL, 3
0EA7 8AD9                 1769             MOV BL, CL
0EA9 4B                   1770             DEC BX
0EAA 33D2                 1771             XOR DX, DX
0EAC                      1772     ADD_DIGITS:
0EAC 80BFCF012E           1773             CMP ITEM_PRICE[BX], '.'
0EB1 7431                 1774             JE ADD_DECIMAL_POINT
0EB3 8A87CF01             1775             MOV AL, ITEM_PRICE[BX]
0EB7 8AA7E001             1776             MOV AH, TOTAL_PRICE[BX]
0EBB 80EC30               1777             SUB AH, 48
0EBE 2C30                 1778             SUB AL, 48
0EC0 02E0                 1779             ADD AH, AL
0EC2 02E2                 1780             ADD AH, DL
0EC4 80FC0A               1781             CMP AH, 10
0EC7 7D0C                 1782             JGE ADD_CARRY_TO_DIGIT
0EC9 80C430               1783             ADD AH, 48
0ECC 88A7E001             1784             MOV TOTAL_PRICE[BX], AH
0ED0 B200                 1785             MOV DL, 00H     
0ED2 EB1590               1786             JMP END_ADD_LOOP
                          1787             
0ED5                      1788     ADD_CARRY_TO_DIGIT:
0ED5 80EC0A               1789             SUB AH, 10
0ED8 80C430               1790             ADD AH, 48
0EDB 88A7E001             1791             MOV TOTAL_PRICE[BX], AH
0EDF B201                 1792             MOV DL, 01H
0EE1 EB0690               1793             JMP END_ADD_LOOP
                          1794             
0EE4                      1795     ADD_DECIMAL_POINT:
0EE4 C687E0012E           1796             MOV TOTAL_PRICE[BX], '.'
                          1797                     
0EE9                      1798     END_ADD_LOOP:
0EE9 4B                   1799             DEC BX
0EEA E2C0                 1800             LOOP ADD_DIGITS
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   38


LOC  OBJ                  LINE     SOURCE

                          1801             
0EEC 80FA00               1802             CMP DL, 00H
0EEF 7416                 1803             JE INCOMING_PRICE_END   
0EF1 C606F10101           1804             MOV SWAP_JUMP_FLAG, 01H
0EF6 E907FF               1805             JMP START_SHIFT_TOTAL
0EF9                      1806     CONTINUE_FIRST_SWAP:
0EF9 C606F10100           1807             MOV SWAP_JUMP_FLAG, 00H
0EFE C606E00131           1808             MOV TOTAL_PRICE[0], '1'
0F03 FE06EA01             1809             INC TOTAL_PLACE_VALUE
                          1810     
0F07                      1811     INCOMING_PRICE_END:     
0F07 5A                   1812             POP DX
0F08 59                   1813             POP     CX
0F09 5B                   1814             POP     BX
0F0A 58                   1815             POP AX
0F0B CB                   1816             RET
                          1817     ADD_INCOMING_PRICE ENDP
                          1818     
                          1819     
                          1820     ;Procedure that will subtract the total price from the amount the user wants to pay a
                                   nd calculate the change
0F0C                      1821     CALCULATE_CHANGE PROC FAR       
0F0C 50                   1822             PUSH AX
0F0D 53                   1823             PUSH BX
0F0E 51                   1824             PUSH CX
0F0F 52                   1825             PUSH DX
                          1826     
0F10 A05200               1827             MOV AL, CHANGE_PLACE_VALUE
0F13 3A06EA01             1828             CMP AL, TOTAL_PLACE_VALUE
0F17 7F26                 1829             JG START_SUBTRACTION
0F19 7C1C                 1830             JL SAY_ERROR
                          1831             
0F1B 33C9                 1832             XOR CX, CX
0F1D 33DB                 1833             XOR BX, BX
0F1F 8A0EEA01             1834             MOV CL, TOTAL_PLACE_VALUE
0F23 80C103               1835             ADD CL, 3
                          1836     
0F26                      1837     CHECK_FOR_LESSER:
0F26 8A87E001             1838             MOV AL, TOTAL_PRICE[BX]
0F2A 384753               1839             CMP CHANGE_PRICE[BX], AL        
0F2D 7C08                 1840             JL SAY_ERROR
0F2F 7F0E                 1841             JG START_SUBTRACTION
0F31 43                   1842             INC BX
0F32 E2F2                 1843             LOOP CHECK_FOR_LESSER
0F34 EB0990               1844             JMP START_SUBTRACTION   
                          1845             
0F37                      1846     SAY_ERROR:
0F37 C606750001           1847             MOV CHANGE_SUCCESS_FLAG, 01H
0F3C E9EA00               1848             JMP CALCULATE_CHANGE_END        
                          1849     
0F3F                      1850     START_SUBTRACTION:      
0F3F 33C9                 1851             XOR CX, CX
                          1852             
0F41 A0EA01               1853             MOV AL, TOTAL_PLACE_VALUE
0F44 3A065200             1854             CMP AL, CHANGE_PLACE_VALUE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   39


LOC  OBJ                  LINE     SOURCE

0F48 7C03                 1855             JL SUB_ZERO_TOTAL
0F4A EB2190               1856             JMP SUBTRACT_NUMBER
                          1857             
0F4D                      1858     SUB_ZERO_TOTAL:
0F4D 8A165200             1859             MOV DL, CHANGE_PLACE_VALUE
0F51 2AD0                 1860             SUB DL, AL
0F53 0016EA01             1861             ADD TOTAL_PLACE_VALUE, DL
0F57 8ACA                 1862             MOV CL, DL
0F59                      1863     SUB_START_SHIFT_TOTAL:
0F59 C606F10102           1864             MOV SWAP_JUMP_FLAG, 02H
0F5E E99FFE               1865             JMP START_SHIFT_TOTAL
0F61                      1866     CONTINUE_SECOND_SWAP:
0F61 C606F10100           1867             MOV SWAP_JUMP_FLAG, 00H
0F66 C606E00130           1868             MOV TOTAL_PRICE[0], '0'
0F6B E2EC                 1869             LOOP SUB_START_SHIFT_TOTAL
                          1870             
0F6D                      1871     SUBTRACT_NUMBER:
0F6D 8A0EEA01             1872             MOV CL, TOTAL_PLACE_VALUE
0F71 80C103               1873             ADD CL, 3
0F74 8AD9                 1874             MOV BL, CL
0F76 4B                   1875             DEC BX
0F77 33D2                 1876             XOR DX, DX
0F79                      1877     SUBTRACT_DIGITS:
0F79 80BFE0012E           1878             CMP TOTAL_PRICE[BX], '.'
0F7E 7459                 1879             JE ADD_DECIMAL_POINT_SUB
0F80 8A87E001             1880             MOV AL, TOTAL_PRICE[BX]
0F84 8A6753               1881             MOV AH, CHANGE_PRICE[BX]
0F87 80EC30               1882             SUB AH, 48
0F8A 2C30                 1883             SUB AL, 48
0F8C 3AE0                 1884             CMP AH, AL
0F8E 7C36                 1885             JL BORROW_SUBTRACT
0F90 7F24                 1886             JG NORMAL_SUBTRACT
                          1887     
0F92                      1888     EQUAL_SUBTRACT: 
0F92 2AE0                 1889             SUB AH, AL
0F94 2AE2                 1890             SUB AH, DL
0F96 80FC00               1891             CMP AH, 0
0F99 7C0C                 1892             JL LESSER_SUBTRACT
                          1893             
0F9B B200                 1894             MOV DL, 0
0F9D 80C430               1895             ADD AH, 48
0FA0 88A7E001             1896             MOV TOTAL_PRICE[BX], AH
0FA4 EB3890               1897             JMP END_SUB_LOOP
                          1898             
0FA7                      1899     LESSER_SUBTRACT:
0FA7 80C40A               1900             ADD AH, 10
0FAA B201                 1901             MOV DL, 1
0FAC 80C430               1902             ADD AH, 48
0FAF 88A7E001             1903             MOV TOTAL_PRICE[BX], AH
0FB3 EB2990               1904             JMP END_SUB_LOOP
                          1905             
0FB6                      1906     NORMAL_SUBTRACT:
0FB6 2AE0                 1907             SUB AH, AL
0FB8 2AE2                 1908             SUB AH, DL
0FBA B200                 1909             MOV DL, 0
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   40


LOC  OBJ                  LINE     SOURCE

0FBC 80C430               1910             ADD AH, 48
0FBF 88A7E001             1911             MOV TOTAL_PRICE[BX], AH
0FC3 EB1990               1912             JMP END_SUB_LOOP
                          1913             
0FC6                      1914     BORROW_SUBTRACT:
0FC6 2AE0                 1915             SUB AH, AL
0FC8 2AE2                 1916             SUB AH, DL
0FCA 80C40A               1917             ADD AH, 10
0FCD B201                 1918             MOV DL, 1
0FCF 80C430               1919             ADD AH, 48
0FD2 88A7E001             1920             MOV TOTAL_PRICE[BX], AH
0FD6 EB0690               1921             JMP END_SUB_LOOP
                          1922             
0FD9                      1923     ADD_DECIMAL_POINT_SUB:
0FD9 C687E0012E           1924             MOV TOTAL_PRICE[BX], '.'
                          1925                     
0FDE                      1926     END_SUB_LOOP:
0FDE 4B                   1927             DEC BX
0FDF E298                 1928             LOOP SUBTRACT_DIGITS
                          1929             
0FE1                      1930     REMOVE_SUB_ZERO:
0FE1 803EE00130           1931             CMP TOTAL_PRICE[0], '0'
0FE6 7541                 1932             JNE CALCULATE_CHANGE_END
0FE8 A0E101               1933             MOV AL, TOTAL_PRICE[1]
0FEB A2E001               1934             MOV TOTAL_PRICE[0], AL
0FEE A0E201               1935             MOV AL, TOTAL_PRICE[2]
0FF1 A2E101               1936             MOV TOTAL_PRICE[1], AL
0FF4 A0E301               1937             MOV AL, TOTAL_PRICE[3]
0FF7 A2E201               1938             MOV TOTAL_PRICE[2], AL
0FFA A0E401               1939             MOV AL, TOTAL_PRICE[4]
0FFD A2E301               1940             MOV TOTAL_PRICE[3], AL
1000 A0E501               1941             MOV AL, TOTAL_PRICE[5]
1003 A2E401               1942             MOV TOTAL_PRICE[4], AL
1006 A0E601               1943             MOV AL, TOTAL_PRICE[6]
1009 A2E501               1944             MOV TOTAL_PRICE[5], AL
100C A0E701               1945             MOV AL, TOTAL_PRICE[7]
100F A2E601               1946             MOV TOTAL_PRICE[6], AL
1012 A0E801               1947             MOV AL, TOTAL_PRICE[8]
1015 A2E701               1948             MOV TOTAL_PRICE[7], AL
1018 A0E901               1949             MOV AL, TOTAL_PRICE[9]
101B A2E801               1950             MOV TOTAL_PRICE[8], AL
101E C606E90130           1951             MOV TOTAL_PRICE[9], '0'
1023 FE0EEA01             1952             DEC TOTAL_PLACE_VALUE
1027 EBB8                 1953             JMP REMOVE_SUB_ZERO
                          1954             
1029                      1955     CALCULATE_CHANGE_END:   
1029 5A                   1956             POP DX
102A 59                   1957             POP     CX
102B 5B                   1958             POP     BX
102C 58                   1959             POP AX
102D CB                   1960             RET
                          1961     CALCULATE_CHANGE ENDP
                          1962     
                          1963     
                          1964     ;Procedure that is called whenever a timer interrupt is received
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   41


LOC  OBJ                  LINE     SOURCE

102E                      1965     TIMER2_ACTION   PROC    FAR
102E FE06C601             1966             INC DS:TIMER_COUNTER_BCD
1032 FF06C701             1967         INC DS:TIMER_COUNTER_KBD
                          1968     
1036 833EC70130           1969         CMP DS:TIMER_COUNTER_KBD, TIMER_COUNTER_KBD_LEN
103B 741C                 1970         JE EXECUTE_KBD
                          1971             
103D 803EC60118           1972         CMP DS:TIMER_COUNTER_BCD, TIMER_COUNTER_BCD_LEN
1042 7408                 1973         JE EXECUTE_BCD
                          1974             
1044                      1975     EXECUTE_SOUND:
1044 9A1011----     R     1976             CALL FAR PTR PLAY_SOUND
1049 EB2D90               1977             JMP T2_END
                          1978     
104C                      1979     EXECUTE_BCD:
104C C606C60100           1980             MOV DS:TIMER_COUNTER_BCD, 0
1051 9ADA10----     R     1981             CALL FAR PTR DISPLAY_7SEGMENT
1056 EB2090               1982             JMP T2_END
                          1983             
1059                      1984     EXECUTE_KBD:
1059 9A1011----     R     1985             CALL FAR PTR PLAY_SOUND
105E 9A1011----     R     1986             CALL FAR PTR PLAY_SOUND
1063 C706C7010000         1987             MOV DS:TIMER_COUNTER_KBD, 0
1069 9AB306----     R     1988             CALL FAR PTR KEYPAD_READ
106E 9A1011----     R     1989             CALL FAR PTR PLAY_SOUND
1073 9A1011----     R     1990             CALL FAR PTR PLAY_SOUND
                          1991             
1078                      1992     T2_END:
1078 CB                   1993             RET
                          1994     TIMER2_ACTION   ENDP
                          1995     
                          1996     
                          1997     ;Procedure that will reset the 7-segment displays back to zeroes
1079                      1998     CLEAR_7SEGMENT PROC FAR
1079 50                   1999             PUSH AX
107A 53                   2000             PUSH BX
107B 51                   2001             PUSH CX
                          2002     
107C 33DB                 2003             XOR BX, BX
107E B90600               2004             MOV CX, 06
                          2005             
1081                      2006     CLEAR_SINGLE_BCD:
1081 803EC10101           2007             CMP TRIGGER_L_FLAG, 01H
1086 741B                 2008             JE ASSIGN_BCD_VALUE_TO_L
                          2009             
1088 803EC20101           2010             CMP TRIGGER_E_FLAG, 01H
108D 741A                 2011             JE ASSIGN_BCD_VALUE_TO_E
                          2012             
108F 803EC30101           2013             CMP TRIGGER_A_FLAG, 01H
1094 7419                 2014             JE ASSIGN_BCD_VALUE_TO_A
                          2015             
1096 803EC40101           2016             CMP TRIGGER_P_FLAG, 01H
109B 7418                 2017             JE ASSIGN_BCD_VALUE_TO_P
                          2018             
109D A0AC01               2019             MOV AL, BCD_NUMBERS[0]
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   42


LOC  OBJ                  LINE     SOURCE

10A0 EB1990               2020             JMP ASSIGN_TO_BCD
                          2021             
10A3                      2022     ASSIGN_BCD_VALUE_TO_L:
10A3 A0B601               2023             MOV AL, BCD_NUMBERS[10]
10A6 EB1390               2024             JMP ASSIGN_TO_BCD
                          2025             
10A9                      2026     ASSIGN_BCD_VALUE_TO_E:
10A9 A0B701               2027             MOV AL, BCD_NUMBERS[11]
10AC EB0D90               2028             JMP ASSIGN_TO_BCD
                          2029             
10AF                      2030     ASSIGN_BCD_VALUE_TO_A:
10AF A0B801               2031             MOV AL, BCD_NUMBERS[12]
10B2 EB0790               2032             JMP ASSIGN_TO_BCD
                          2033             
10B5                      2034     ASSIGN_BCD_VALUE_TO_P:
10B5 A0B901               2035             MOV AL, BCD_NUMBERS[13] 
10B8 EB0190               2036             JMP ASSIGN_TO_BCD
                          2037             
10BB                      2038     ASSIGN_TO_BCD:
10BB 8887BA01             2039             MOV DS:BCD_DISPLAY[BX], AL
10BF 43                   2040             INC BX
10C0 E2BF                 2041             LOOP CLEAR_SINGLE_BCD
                          2042             
10C2 C606C10100           2043             MOV TRIGGER_L_FLAG, 00H
10C7 C606C20100           2044             MOV TRIGGER_E_FLAG, 00H
10CC C606C30100           2045             MOV TRIGGER_A_FLAG, 00H
10D1 C606C40100           2046             MOV TRIGGER_P_FLAG, 00H
                          2047     
10D6 59                   2048             POP CX
10D7 5B                   2049             POP BX
10D8 58                   2050             POP AX
10D9 CB                   2051             RET
                          2052     CLEAR_7SEGMENT ENDP
                          2053     
                          2054     
                          2055     ;Procedure that will display digits on the BCD based on the BCD queue
10DA                      2056     DISPLAY_7SEGMENT PROC FAR       
10DA 50                   2057             PUSH AX
10DB 53                   2058             PUSH BX
10DC 51                   2059             PUSH CX
10DD 52                   2060             PUSH DX
                          2061     
10DE 33DB                 2062             XOR BX, BX
                          2063             
                          2064             ; BCD Select: [-] [-] [6] [5] [4] [3] [2] [1]
10E0 BA0001               2065             MOV DX, PCS2_ADDR
10E3 B0FE                 2066             MOV AL, 0FEH
10E5 8A0EC001             2067             MOV CL, DS:CURRENT_BCD
10E9 D2C0                 2068             ROL AL, CL
10EB EE                   2069             OUT DX, AL
                          2070             
10EC BA8001               2071             MOV DX, PCS3_ADDR
10EF 8A1EC001             2072             MOV BL, CURRENT_BCD
10F3 8A87BA01             2073             MOV AL, BCD_DISPLAY[BX]
10F7 EE                   2074             OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   43


LOC  OBJ                  LINE     SOURCE

                          2075             
10F8 FE06C001             2076             INC CURRENT_BCD
10FC 803EC00106           2077             CMP CURRENT_BCD, 06H
1101 7403                 2078             JE RESET_CURRENT_BCD
1103 EB0690               2079             JMP DISP_END
                          2080             
1106                      2081     RESET_CURRENT_BCD:
1106 C606C00100           2082             MOV CURRENT_BCD, 00H
                          2083     
110B                      2084     DISP_END:       
110B 5A                   2085             POP DX
110C 59                   2086             POP     CX
110D 5B                   2087             POP     BX
110E 58                   2088             POP AX
110F CB                   2089             RET
                          2090     DISPLAY_7SEGMENT ENDP
                          2091     
                          2092     
                          2093     ;Procedure that will play sounds on the speaker based on the speaker queue
1110                      2094     PLAY_SOUND PROC FAR     
1110 50                   2095             PUSH AX
1111 53                   2096             PUSH BX
1112 56                   2097             PUSH SI
1113 52                   2098             PUSH DX
                          2099             
1114 B8----         R     2100             MOV AX, DATA_SEG
1117 8ED8                 2101         MOV DS, AX
                          2102             
1119 A0A801               2103             MOV AL, SOUND_HEAD
111C 3806A901             2104             CMP SOUND_TAIL, AL
1120 7470                 2105             JE SOUND_END
                          2106             
1122 33DB                 2107             XOR BX, BX
1124 8A1EA801             2108             MOV BL, SOUND_HEAD 
1128 8A9F8801             2109             MOV BL, SOUND_QUEUE[BX]
112C 8B87D000             2110             MOV AX, SOUND_SIZE[BX]
                          2111             
1130 833E860100           2112             CMP SOUND_COUNT, 0000H
1135 7438                 2113             JE ASSIGN_ADDRESS
1137 39068601             2114             CMP SOUND_COUNT, AX
113B 7E38                 2115             JLE SOUND_PLAY
                          2116             
113D FE06A801             2117             INC SOUND_HEAD
1141 803EA80120           2118             CMP SOUND_HEAD, 32
1146 7C05                 2119             JL SOUND_INITIALIZE_CONTINUE
1148 C606A80100           2120             MOV SOUND_HEAD, 00H
                          2121     
114D                      2122     SOUND_INITIALIZE_CONTINUE:
114D C70686010000         2123             MOV SOUND_COUNT, 0000H
1153 A0A801               2124             MOV AL, SOUND_HEAD
1156 3806A901             2125             CMP SOUND_TAIL, AL
115A 7436                 2126             JE SOUND_END
                          2127             
115C 33DB                 2128             XOR BX, BX
115E 8A1EA801             2129             MOV BL, SOUND_HEAD
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:35:58  12/02/;3  PAGE   44


LOC  OBJ                  LINE     SOURCE

1162 8A9F8801             2130             MOV BL, SOUND_QUEUE[BX]
1166 8B4776               2131             MOV AX, SOUND_OFFSET[BX]
1169 A38401               2132             MOV SOUND_ADDRESS, AX
116C EB0790               2133             JMP SOUND_PLAY
                          2134             
116F                      2135     ASSIGN_ADDRESS:
116F 8B4776               2136             MOV AX, SOUND_OFFSET[BX]
1172 A38401               2137             MOV SOUND_ADDRESS, AX
                          2138             
1175                      2139     SOUND_PLAY:                             
1175 8B368401             2140             MOV SI, SOUND_ADDRESS
1179 8B872A01             2141             MOV AX, EEPROM_START[BX]
117D 8ED8                 2142             MOV DS, AX
                          2143             
117F 8A04                 2144             MOV AL, [SI]
1181 BA0002               2145             MOV DX, PCS4_ADDR
1184 EE                   2146             OUT DX, AL
                          2147                     
1185 B8----         R     2148             MOV AX, DATA_SEG
1188 8ED8                 2149         MOV DS, AX
                          2150             
118A FF068601             2151             INC SOUND_COUNT
118E FF068401             2152             INC SOUND_ADDRESS
                          2153     
1192                      2154     SOUND_END:      
1192 5A                   2155             POP DX
1193 5E                   2156             POP     SI
1194 5B                   2157             POP     BX
1195 58                   2158             POP AX
1196 CB                   2159             RET
                          2160     PLAY_SOUND ENDP
                          2161     
                          2162     
----                      2163     CODE_SEG        ENDS
                          2164     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
