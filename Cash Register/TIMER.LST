8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TIMER
OBJECT MODULE PLACED IN TIMER.OBJ
ASSEMBLER INVOKED BY:  F:\ASM86.EXE TIMER.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $MOD186
                             2 +1  $EP
                             3     NAME TIMER
                             4     
                             5     ; =========================================================================
                             6     ; Main Timer Driver Program
                             7     ; Author: Vaghul Aditya Balaji
                             8     
                             9     ; This file contains proprietary information and cannot be copied 
                            10     ; or distributed without prior permission from the author.
                            11     ; =========================================================================
                            12     
                            13     public  serial_rec_action, timer2_action
                            14     extrn   print_char:far, print_2hex:far, iodefine:far
                            15     extrn   set_timer2:far
                            16     
                            17     ;IO Setup for 80C188 
  FFA0                      18             UMCR    EQU    0FFA0H ; Upper Memory Control Register
  FFA2                      19             LMCR    EQU    0FFA2H ; Lower Memory control Register         
  FFA4                      20             PCSBA   EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA6                      21             MMCS    EQU    0FFA6H ; Used for controlling the MCS pins on the 8088
  FFA8                      22             MPCS    EQU    0FFA8H ; MMCS and PCS Alter Control Register
                            23             
  0080                      24             PORTA  EQU    0080H
  0081                      25             PORTB  EQU    0081H
  0082                      26             PORTC  EQU    0082H
  0083                      27             CWR    EQU    0083H
                            28             
  FF38                      29             INT0CON  EQU   0FF38H
  FF22                      30             EOI      EQU   0FF22H
  FF28                      31             IMASK    EQU   0FF28H
                            32             
  0100                      33             PCS2_ADDR EQU 100H ; Used for controlling which BCD displays the digit
  0180                      34             PCS3_ADDR EQU 180H ; Used for controlling the pattern that is displayed on th
                                   e BCDs
  0200                      35             PCS4_ADDR EQU 200H ; Used for controlling the DAC chip of the speaker system
                            36             
  0014                      37             TIMER_COUNTER_BCD_LEN   EQU 20
  0028                      38             TIMER_COUNTER_KBD_LEN   EQU 40
  0604                      39             TIMEOUT_COUNTER_LEN             EQU 1540
                            40             
                            41             ;Sound Mappings for playing on the speaker
  002C                      42             SOUND_SILENCE                    EQU  44
  001E                      43             SOUND_AND                        EQU  30
  0021                      44             SOUND_DOLLARS                    EQU  33
  0022                      45             SOUND_CENTS                      EQU  34
  001C                      46             SOUND_HUNDRED                    EQU  28
  001D                      47             SOUND_THOUSAND                   EQU  29
  0023                      48             SOUND_GOOD                       EQU  35
  0025                      49             SOUND_AFTERNOON                  EQU  37
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE    2


LOC  OBJ                  LINE     SOURCE

  0028                      50             SOUND_PURCHASED                  EQU  40
  001F                      51             SOUND_COST                               EQU  31
  0029                      52             SOUND_YOURCHANGEIS               EQU  41
  002A                      53             SOUND_THANKYOUANDGOODBYE EQU  42        
                            54             
                            55             ;Serial Communication Mappings
  0000                      56             NETWORK_DISABLE             EQU  00
  0001                      57             NETWORK_ENABLE              EQU  01     
  0002                      58             NETWORK_END_TRANSACTION     EQU  02
  0003                      59             NETWORK_LOGOUT                      EQU  03
  0004                      60             NETWORK_CANCEL_TRANSACTION  EQU  04
                            61             
                            62             ;Cash Register State Mappings
  0000                      63             WAITING_FOR_LOGIN     EQU  00
  0001                      64             ENTER_LOGIN_USERNAME  EQU  01
  0002                      65             WAITING_FOR_BARCODE   EQU  02
  0003                      66             ENTER_BARCODE         EQU  03
  0004                      67             ENTER_QUANTITY        EQU  04
  0005                      68             DISPLAY_ITEM_PRICE    EQU  05
  0006                      69             CANCEL_ITEM                   EQU  06
  0007                      70             END_TRANSACTION           EQU  07
  0008                      71             CHANGE_PAY                        EQU  08
                            72             
                            73             ;Keypad Character Mappings
  0000                      74             KBD_CHAR_RESET                 EQU  00
  005F                      75             KBD_BACKSPACE                  EQU  '_'
  007C                      76             KBD_ENTER                      EQU  '|'
  0041                      77             KBD_TRIGGER_LOGIN              EQU  'A'
  0042                      78             KBD_TRIGGER_TRANSACTION        EQU  'B'
  0043                      79             KBD_TRIGGER_NEW_ITEM               EQU  'C'
  0044                      80             KBD_TRIGGER_CANCEL_ITEM            EQU  'D'
  0045                      81             KBD_TRIGGER_CANCEL_TRANSACTION EQU  'E'
  0046                      82             KBD_TRIGGER_END_TRANSACTION    EQU  'F'
  0047                      83             KBD_TRIGGER_MODIFY                         EQU  'G'
  0048                      84             KBD_TRIGGER_DISPLAY_CURRENT    EQU  'H'
  0049                      85             KBD_TRIGGER_CHANGE_PAY         EQU  'I'
  004B                      86             KBD_TRIGGER_SEND_EMAIL_SMS     EQU  'K'
                            87             
                            88             ;Keyboard Input Constants
  0006                      89             KBD_USERNAME_LENGTH  EQU  06
  0008                      90             KBD_BARCODE_LENGTH   EQU  08
  0003                      91             KBD_QUANTITY_LENGTH  EQU  03
  0008                      92             KBD_CHANGE_LENGTH    EQU  08
  0000                      93             KBD_OLD_INPUT        EQU  00
  0001                      94             KBD_NEW_INPUT        EQU  01
                            95     
                            96             
----                        97     STACK_SEG       SEGMENT
0000 (256                   98             DB      256 DUP(?)
     ??
     )
0100                        99             TOS     LABEL   WORD
----                       100     STACK_SEG       ENDS
                           101     
                           102     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE    3


LOC  OBJ                  LINE     SOURCE

----                       103     DATA_SEG        SEGMENT
0000 0A                    104             TIMER2_MESS           DB        10,13,'TIMER2 INTERRUPT    '
0001 0D
0002 54494D45523220
     494E5445525255
     505420202020
0016 2F                    105             T_COUNT               DB        2FH
0017 2F                    106             T_COUNT_SET           DB        2FH
0018 0A                    107             REC_MESS              DB        10,13,'Period of timer =     '
0019 0D
001A 506572696F6420
     6F662074696D65
     72203D20202020
     20
0030 43323237315D          108             CASH_REGISTER_ID  DB    'C2271]'
                           109             
                           110             ;Keypad Variables       
0036 7C                    111             KEYS_PART1           DB   '|','0','_','L','K','J','9','8','7','I','H','G' 
0037 30
0038 5F
0039 4C
003A 4B
003B 4A
003C 39
003D 38
003E 37
003F 49
0040 48
0041 47
0042 36                    112             KEYS_PART2           DB   '6','5','4','F','E','D','3','2','1','C','B','A'
0043 35
0044 34
0045 46
0046 45
0047 44
0048 33
0049 32
004A 31
004B 43
004C 42
004D 41
004E 00                    113             KEY_FLAG             DB   00H ;This variable is used for controlling multiple
                                    detections of the same key-press inside the keypad loop
004F 00                    114             KBD_NUM_INPUT        DB   00H ;This variable stores the numerical input from 
                                   the keyboard
0050 00                    115             KBD_CHAR_INPUT       DB   00H ;This variable stores the character input from 
                                   the keyboard
0051 00                    116             KBD_INPUT_STATE      DB   00H
0052 00                    117             CHANGE_PLACE_VALUE   DB   00H
0053 (10                   118             CHANGE_PRICE         DB   10 DUP('0')
     30
     )
005D (6                    119             USER_USERNAME        DB   6 DUP('0')
     30
     )
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE    4


LOC  OBJ                  LINE     SOURCE

0063 (6                    120             USER_PASSWORD        DB   6 DUP('0')
     30
     )
0069 (8                    121             USER_BARCODE         DB   8 DUP('0')
     30
     )
0071 (3                    122             USER_QUANTITY        DB   3 DUP('0')
     30
     )
0074 00                    123             USER_INPUT_LENGTH    DB   00H   
0075 00                    124             CHANGE_SUCCESS_FLAG  DB  00H
                           125             
                           126             ;Sound Variables
0076 0000                  127             SOUND_OFFSET   DW   0000H, 1269H, 2121H, 2EA9H, 3BD3H, 478DH, 546EH, 6608H, 7
                                   53DH, 7C41H
0078 6912
007A 2121
007C A92E
007E D33B
0080 8D47
0082 6E54
0084 0866
0086 3D75
0088 417C
008A 0B8D                  128                                        DW   8D0BH, 98C6H, 0AAF8H, 0BA1EH, 0CA87H, 0DB3CH,
                                    9D67H, 055BH, 1E09H, 32B8H
008C C698
008E F8AA
0090 1EBA
0092 87CA
0094 3CDB
0096 679D
0098 5B05
009A 091E
009C B832
009E 554A                  129                                        DW   4A55H, 567AH, 60D6H, 6E3CH, 7A8BH, 8BFAH, 9E5
                                   BH, 0AA63H, 0B8D6H, 0C3F7H
00A0 7A56
00A2 D660
00A4 3C6E
00A6 8B7A
00A8 FA8B
00AA 5B9E
00AC 63AA
00AE D6B8
00B0 F7C3
00B2 67CF                  130                                        DW   0CF67H, 0D6EAH, 0E31DH, 0F49EH, 06C9H, 13A6H,
                                    1C5FH, 29DAH, 408FH, 5293H
00B4 EAD6
00B6 1DE3
00B8 9EF4
00BA C906
00BC A613
00BE 5F1C
00C0 DA29
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE    5


LOC  OBJ                  LINE     SOURCE

00C2 8F40
00C4 9352
00C6 3466                  131                                        DW   6634H, 83C7H, 0A00BH, 0C7B2H, 0CAD7H
00C8 C783
00CA 0BA0
00CC B2C7
00CE D7CA
                           132                                
00D0 6812                  133             SOUND_SIZE         DW   1268H, 0EB7H, 0D87H, 0D29H, 0BB9H, 0CE0H, 1199H, 0F34
                                   H, 0703H, 10C9H
00D2 B70E
00D4 870D
00D6 290D
00D8 B90B
00DA E00C
00DC 9911
00DE 340F
00E0 0307
00E2 C910
00E4 BA0B                  134                                        DW   0BBAH, 1231H, 0F25H, 1068H, 10B4H, 122AH, 175
                                   3H, 18ADH, 14AEH, 179CH
00E6 3112
00E8 250F
00EA 6810
00EC B410
00EE 2A12
00F0 5317
00F2 AD18
00F4 AE14
00F6 9C17
00F8 240C                  135                                        DW   0C24H, 0A5BH, 0D65H, 0C4EH, 116EH, 1260H, 0C0
                                   7H, 0E72H, 0B20H, 0B6FH
00FA 5B0A
00FC 650D
00FE 4E0C
0100 6E11
0102 6012
0104 070C
0106 720E
0108 200B
010A 6F0B
010C 8207                  136                                        DW   0782H, 0C32H, 1180H, 122AH, 0CDCH, 08B8H, 0D7
                                   AH, 16B4H, 1203H, 13A0H
010E 320C
0110 8011
0112 2A12
0114 DC0C
0116 B808
0118 7A0D
011A B416
011C 0312
011E A013
0120 921D                  137                                        DW   1D92H, 1C43H, 27A6H, 0324H, 031FH       
                                                         
0122 431C
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE    6


LOC  OBJ                  LINE     SOURCE

0124 A627
0126 2403
0128 1F03
                           138     
012A 0040                  139             EEPROM_START   DW   4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 4
                                   000H, 4000H
012C 0040
012E 0040
0130 0040
0132 0040
0134 0040
0136 0040
0138 0040
013A 0040
013C 0040
013E 0040                  140                                        DW   4000H, 4000H, 4000H, 4000H, 4000H, 4000H, 450
                                   0H, 5000H, 5000H, 5000H
0140 0040
0142 0040
0144 0040
0146 0040
0148 0040
014A 0045
014C 0050
014E 0050
0150 0050
0152 0050                  141                                        DW   5000H, 5000H, 5000H, 5000H, 5000H, 5000H, 500
                                   0H, 5000H, 5000H, 5000H 
0154 0050
0156 0050
0158 0050
015A 0050
015C 0050
015E 0050
0160 0050
0162 0050
0164 0050
0166 0050                  142                                        DW   5000H, 5000H, 5000H, 5000H, 6000H, 6000H, 600
                                   0H, 6000H, 6000H, 6000H
0168 0050
016A 0050
016C 0050
016E 0060
0170 0060
0172 0060
0174 0060
0176 0060
0178 0060
017A 0060                  143                                        DW   6000H, 6000H, 6000H, 6000H, 6000H       
                                                         
017C 0060
017E 0060
0180 0060
0182 0060
                           144                                        
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE    7


LOC  OBJ                  LINE     SOURCE

0184 0000                  145             SOUND_ADDRESS        DW   0000H
0186 0000                  146             SOUND_COUNT          DW   0000H
0188 (32                   147             SOUND_QUEUE          DB   32 DUP(?)
     ??
     )
01A8 00                    148             SOUND_HEAD           DB   00H
01A9 00                    149             SOUND_TAIL           DB   00H
01AA 00                    150             SOUND_INDEX_INPUT    DB   00H
01AB 00                    151             SAY_SOUND_ONCE_FLAG  DB   00H
                           152             
                           153             ;7-Segment Variables
                           154             ; BCD Digit Mapping:    0        1        2        3    4    5    6    7    8
                                       9    L     E    A    P
01AC 5F                    155         BCD_NUMBERS        DB  5FH, 50H, 6DH, 79H, 72H, 3BH, 3EH, 51H, 7FH, 73H, 0EH, 02F
                                   H, 77H, 67H                                                
01AD 50
01AE 6D
01AF 79
01B0 72
01B1 3B
01B2 3E
01B3 51
01B4 7F
01B5 73
01B6 0E
01B7 2F
01B8 77
01B9 67
01BA 0E                    156             BCD_DISPLAY            DB  0EH, 0EH, 0EH, 0EH, 0EH, 0EH
01BB 0E
01BC 0E
01BD 0E
01BE 0E
01BF 0E
01C0 00                    157             CURRENT_BCD        DB  00H
01C1 00                    158             TRIGGER_L_FLAG     DB  00H 
01C2 00                    159             TRIGGER_E_FLAG     DB  00H 
01C3 00                    160             TRIGGER_A_FLAG     DB  00H 
01C4 00                    161             TRIGGER_P_FLAG     DB  00H 
01C5 00                    162             SHOW_BCD_ONCE_FLAG DB  00H
                           163             
                           164             ;Timer Variables
01C6 00                    165             TIMER_COUNTER_BCD   DB  00H
01C7 0000                  166         TIMER_COUNTER_KBD   DW  0000H
01C9 0000                  167             TIMEOUT_COUNTER         DW  0000H
01CB 00                    168             TIMEOUT_SEC_COUNT   DB  00H
                           169             
                           170             ;Serial Variables
01CC 00                    171             START_READ            DB  00H
01CD 00                    172             START_RECEIVE_PRICE   DB  00H
01CE 00                    173             SERIAL_INDEX          DB  00H
01CF (10                   174             ITEM_PRICE            DB  10 DUP('0')
     30
     )
01D9 00                    175             PLACE_VALUE           DB  00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE    8


LOC  OBJ                  LINE     SOURCE

01DA 00                    176             TMP_PLACE_VALUE       DB  00H
01DB (2                    177             TWO_DIGIT_SOUND       DB  2 DUP(?)
     ??
     )
01DD 00                    178             AND_FLAG              DB  00H
01DE 00                    179             CENTS_AND_FLAG        DB  00H
01DF 00                    180             THOUSAND_FLAG         DB  00H
01E0 (10                   181             TOTAL_PRICE           DB  10 DUP('0')
     30
     )
01EA 00                    182             TOTAL_PLACE_VALUE     DB  00H
01EB 00                    183             CASH_REGISTER_START   DB  00H
01EC 00                    184             CASH_REGISTER_FLAG    DB  00H
01ED 00                    185             NETWORK_STATE         DB  00H
01EE 00                    186             CASH_REGISTER_STATE   DB  WAITING_FOR_LOGIN
01EF 00                    187             PURCHASE_ITEM_COUNT   DB  00H
01F0 00                    188             CHANGE_DONE_FLAG      DB  00H
01F1 00                    189             SWAP_JUMP_FLAG            DB  00H
01F2 00                    190             MODIFY_ITEM_FLAG      DB  00H
01F3 00                    191             USERNAME_FLAG             DB  00H
01F4 00                    192             EMAIL_FLAG                        DB  00H
----                       193     DATA_SEG        ENDS
                           194     
                           195             
----                       196     CODE_SEG        SEGMENT
                           197     
                           198             PUBLIC          START
                           199     
                           200     ASSUME  CS:CODE_SEG, SS:STACK_SEG, DS:DATA_SEG
                           201     
0000                       202     START:
                           203     ;initialize stack area
0000 B8----         R      204             MOV     AX,STACK_SEG            
0003 8ED0                  205             MOV     SS,AX
0005 368B260001            206             MOV     SP,TOS
                           207                     
000A B8----         R      208             MOV AX, DATA_SEG
000D 8ED8                  209             MOV DS, AX
                           210     
                           211     ; Initialize the on-chip peripherals
000F 9A0000----     E      212             CALL FAR PTR IODEFINE
                           213             
                           214     ; Initialize MPCS to MAP peripheral to IO address
                           215             
0014 BAA8FF                216             MOV  DX, MPCS  
0017 B88320                217             MOV  AX, 2083H 
001A EF                    218             OUT  DX, AX
                           219             
001B BAA6FF                220             MOV  DX, MMCS ; send MCS start address to 40000
001E B80340                221             MOV  AX, 4003H 
0021 EF                    222             OUT  DX, AX
                           223     
                           224     ; PCSBA initial, set the parallel port start from 00H
0022 BAA4FF                225             MOV DX, PCSBA
0025 B80300                226             MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE    9


LOC  OBJ                  LINE     SOURCE

0028 EF                    227             OUT DX, AX
                           228     
                           229     ; Initialize LMCS 
0029 BAA2FF                230         MOV DX, LMCR
002C B8C401                231         MOV AX, 01C4H  ; Starting address 1FFFH, 8K, No waits, last should be 5H for 1 wa
                                   its      
002F EF                    232         OUT DX, AX
                           233             
0030 B089                  234             MOV AL, 89H ;mode 0, [A-out(for led)] [B - out, C-in (for reading keypad))]
0032 BA8300                235             MOV DX, CWR ; load CWR to DX
0035 EE                    236             OUT DX, AL      ;load CWR value from AL
                           237             
                           238     ; ######################### Start of User Main Routine ###########################
                           239       
0036 9A0000----     E      240         CALL FAR PTR set_timer2
003B FB                    241         STI
                           242                     
003C                       243             NEXT:
003C EBFE                  244                     JMP NEXT
                           245             
                           246     ; ######################### End of User Main Routine #############################
                                      
                           247     
                           248     
                           249     ;Procedure to change the state of the cash register according to user's input
003E                       250     CHANGE_CASHIER_STATE PROC FAR   
003E 50                    251             PUSH AX
003F 53                    252             PUSH BX
0040 51                    253             PUSH CX
                           254     
0041 803EEE0100            255             CMP CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0046 743B                  256             JE CASHIER_WAITING_FOR_LOGIN
                           257             
0048 803EEE0101            258             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
004D 7448                  259             JE CASHIER_ENTER_USERNAME       
                           260             
004F 803EEE0102            261             CMP CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0054 7469                  262             JE FIRST_JUMP_WAITING_FOR_BARCODE
                           263             
0056 803EEE0103            264             CMP CASH_REGISTER_STATE, ENTER_BARCODE
005B 7465                  265             JE FIRST_JUMP_ENTER_BARCODE
                           266             
005D 803EEE0104            267             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0062 7461                  268             JE FIRST_JUMP_ENTER_QUANTITY
                           269             
0064 803EEE0105            270             CMP CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0069 745D                  271             JE FIRST_JUMP_DISPLAY_ITEM_PRICE
                           272             
006B 803EEE0106            273             CMP CASH_REGISTER_STATE, CANCEL_ITEM
0070 7459                  274             JE FIRST_JUMP_CANCEL_ITEM
                           275             
0072 803EEE0108            276             CMP CASH_REGISTER_STATE, CHANGE_PAY
0077 7458                  277             JE FIRST_JUMP_CHANGE_PAY
                           278             
0079 803EEE0107            279             CMP CASH_REGISTER_STATE, END_TRANSACTION
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   10


LOC  OBJ                  LINE     SOURCE

007E 744E                  280             JE FIRST_JUMP_END_TRANSACTION
                           281     
0080 EB3A90                282             JMP FIRST_JUMP_STATE_END
                           283     
                           284     ;Waiting for user to press the login button     
0083                       285     CASHIER_WAITING_FOR_LOGIN:
0083 803E500041            286             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
0088 7532                  287             JNE FIRST_JUMP_STATE_END
008A C606EE0101            288             MOV CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
008F 9A3A06----     R      289             CALL FAR PTR STATE_TRANSITION
0094 EB2690                290             JMP FIRST_JUMP_STATE_END
                           291             
                           292     ;User is now entering his/her login credentials
0097                       293     CASHIER_ENTER_USERNAME:
0097 803E500000            294             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
009C 747C                  295             JE USERNAME_CHECK_NUMBER
009E 803E500041            296             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
00A3 752F                  297             JNE USERNAME_CHECK_BACKSPACE
00A5 C606C10101            298             MOV TRIGGER_L_FLAG, 01H
00AA C606EE0100            299             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
00AF C606F30100            300             MOV USERNAME_FLAG, 00H
00B4 9A3A06----     R      301             CALL FAR PTR STATE_TRANSITION
00B9 E9B304                302             JMP CASHIER_STATE_END   
00BC                       303     FIRST_JUMP_STATE_END:
00BC E9B004                304             JMP CASHIER_STATE_END
00BF                       305     FIRST_JUMP_WAITING_FOR_BARCODE:
00BF EB6F90                306             JMP CASHIER_WAITING_FOR_BARCODE
00C2                       307     FIRST_JUMP_ENTER_BARCODE:
00C2 E9A400                308             JMP CASHIER_ENTER_BARCODE
00C5                       309     FIRST_JUMP_ENTER_QUANTITY:
00C5 E94A01                310             JMP CASHIER_ENTER_QUANTITY
00C8                       311     FIRST_JUMP_DISPLAY_ITEM_PRICE:
00C8 E9C301                312             JMP CASHIER_DISPLAY_ITEM_PRICE
00CB                       313     FIRST_JUMP_CANCEL_ITEM:
00CB E90C03                314             JMP CASHIER_CANCEL_ITEM
00CE                       315     FIRST_JUMP_END_TRANSACTION:
00CE E97503                316             JMP CASHIER_END_TRANSACTION
00D1                       317     FIRST_JUMP_CHANGE_PAY:
00D1 E99503                318             JMP CASHIER_CHANGE_PAY
00D4                       319     USERNAME_CHECK_BACKSPACE:
00D4 803E50005F            320             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
00D9 750D                  321             JNE USERNAME_CHECK_ENTER
00DB 9A4F06----     R      322             CALL FAR PTR BACKSPACE_KEYPRESS
00E0 C606500000            323             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
00E5 E98704                324             JMP CASHIER_STATE_END
00E8                       325     USERNAME_CHECK_ENTER:
00E8 803E50007C            326             CMP KBD_CHAR_INPUT, KBD_ENTER
00ED 752B                  327             JNE USERNAME_CHECK_NUMBER
00EF 803E740006            328             CMP USER_INPUT_LENGTH, KBD_USERNAME_LENGTH
00F4 75C6                  329             JNE FIRST_JUMP_STATE_END
00F6 803EF30101            330             CMP USERNAME_FLAG, 01H
00FB 750C                  331             JNE CONTINUE_TO_PASSWORD
00FD C606ED0101            332             MOV NETWORK_STATE, NETWORK_ENABLE
0102 9A3A06----     R      333             CALL FAR PTR STATE_TRANSITION
0107 EBB3                  334             JMP FIRST_JUMP_STATE_END
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   11


LOC  OBJ                  LINE     SOURCE

0109                       335     CONTINUE_TO_PASSWORD:
0109 C606F30101            336             MOV USERNAME_FLAG, 01H
010E C606EE0101            337             MOV CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
0113 9A3A06----     R      338             CALL FAR PTR STATE_TRANSITION
0118 EBA2                  339             JMP FIRST_JUMP_STATE_END
011A                       340     USERNAME_CHECK_NUMBER:  
011A 803E510000            341             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
011F 749B                  342             JE FIRST_JUMP_STATE_END
0121 803E740006            343             CMP USER_INPUT_LENGTH, KBD_USERNAME_LENGTH
0126 7494                  344             JE FIRST_JUMP_STATE_END
0128 9A7D05----     R      345             CALL FAR PTR GET_USER_DIGIT
012D                       346     SECOND_JUMP_STATE_END:
012D E93F04                347             JMP CASHIER_STATE_END   
                           348             
                           349     ;Waiting for the user to begin a new transaction
0130                       350     CASHIER_WAITING_FOR_BARCODE:
0130 803E500000            351             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0135 74F6                  352             JE SECOND_JUMP_STATE_END
0137 803E500041            353             CMP KBD_CHAR_INPUT, KBD_TRIGGER_LOGIN
013C 7517                  354             JNE BARCODE_CHECK_TRANSACTION
013E C606C10101            355             MOV TRIGGER_L_FLAG, 01H
0143 C606EE0100            356             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0148 C606ED0103            357             MOV NETWORK_STATE, NETWORK_LOGOUT
014D 9A3A06----     R      358             CALL FAR PTR STATE_TRANSITION
0152 E91A04                359             JMP CASHIER_STATE_END   
0155                       360     BARCODE_CHECK_TRANSACTION:
0155 803E500042            361             CMP KBD_CHAR_INPUT, KBD_TRIGGER_TRANSACTION
015A 75D1                  362             JNE SECOND_JUMP_STATE_END
015C C606EE0103            363             MOV CASH_REGISTER_STATE, ENTER_BARCODE
0161 9A3A06----     R      364             CALL FAR PTR STATE_TRANSITION
0166 E90604                365             JMP CASHIER_STATE_END
                           366             
                           367     ;User is now entering the barcode
0169                       368     CASHIER_ENTER_BARCODE:
0169 803E500000            369             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
016E 7450                  370             JE FIRST_JMP_BARCODE_CHECK_NUMBER
0170 803E50005F            371             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
0175 750D                  372             JNE BARCODE_CANCEL_ITEM
0177 9A4F06----     R      373             CALL FAR PTR BACKSPACE_KEYPRESS
017C C606500000            374             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
0181 E9EB03                375             JMP CASHIER_STATE_END
0184                       376     BARCODE_CANCEL_ITEM:
0184 803E500044            377             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
0189 7538                  378             JNE BARCODE_CHECK_ENTER
018B 803EF40101            379             CMP EMAIL_FLAG, 01H
0190 7512                  380             JNE NORMAL_CANCEL_BARCODE
0192 C606EE0108            381             MOV CASH_REGISTER_STATE, CHANGE_PAY
0197 C606F40100            382             MOV EMAIL_FLAG, 00H
019C 9A3A06----     R      383             CALL FAR PTR STATE_TRANSITION
01A1 E9CB03                384             JMP CASHIER_STATE_END
01A4                       385     NORMAL_CANCEL_BARCODE:
01A4 C606EE0105            386             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
01A9 C606F20100            387             MOV MODIFY_ITEM_FLAG, 00H
01AE C606C50101            388             MOV SHOW_BCD_ONCE_FLAG, 01H
01B3 C606AB0101            389             MOV SAY_SOUND_ONCE_FLAG, 01H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   12


LOC  OBJ                  LINE     SOURCE

01B8 9A3A06----     R      390             CALL FAR PTR STATE_TRANSITION
01BD E9AF03                391             JMP CASHIER_STATE_END
01C0                       392     FIRST_JMP_BARCODE_CHECK_NUMBER:
01C0 EB3A90                393             JMP BARCODE_CHECK_NUMBER
01C3                       394     BARCODE_CHECK_ENTER:
01C3 803E50007C            395             CMP KBD_CHAR_INPUT, KBD_ENTER
01C8 7532                  396             JNE BARCODE_CHECK_NUMBER
01CA 803E740008            397             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
01CF 753E                  398             JNE THIRD_JUMP_STATE_END
01D1 803EF40101            399             CMP EMAIL_FLAG, 01H
01D6 7517                  400             JNE NORMAL_BARCODE_ENTER
01D8 C606ED0101            401             MOV NETWORK_STATE, NETWORK_ENABLE
01DD C606500000            402             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
01E2 C606510000            403             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
01E7 9A3A06----     R      404             CALL FAR PTR STATE_TRANSITION
01EC E98003                405             JMP CASHIER_STATE_END
01EF                       406     NORMAL_BARCODE_ENTER:
01EF C606EE0104            407             MOV CASH_REGISTER_STATE, ENTER_QUANTITY
01F4 9A3A06----     R      408             CALL FAR PTR STATE_TRANSITION
01F9 E97303                409             JMP CASHIER_STATE_END
01FC                       410     BARCODE_CHECK_NUMBER:   
01FC 803E510000            411             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
0201 740C                  412             JE THIRD_JUMP_STATE_END
0203 803E740008            413             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
0208 7405                  414             JE THIRD_JUMP_STATE_END
020A 9A7D05----     R      415             CALL FAR PTR GET_USER_DIGIT
020F                       416     THIRD_JUMP_STATE_END:
020F E95D03                417             JMP CASHIER_STATE_END   
                           418     
                           419     ;User is now entering the quantity      
0212                       420     CASHIER_ENTER_QUANTITY:
0212 803E500000            421             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
0217 7437                  422             JE FIRST_JMP_QUANTITY_CHECK_NUMBER
0219 803E50005F            423             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
021E 750D                  424             JNE QUANTITY_CANCEL_ITEM
0220 9A4F06----     R      425             CALL FAR PTR BACKSPACE_KEYPRESS
0225 C606500000            426             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
022A E94203                427             JMP CASHIER_STATE_END
022D                       428     QUANTITY_CANCEL_ITEM:
022D 803E500044            429             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
0232 751F                  430             JNE QUANTITY_CHECK_ENTER
0234 C606EE0105            431             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0239 C606F20100            432             MOV MODIFY_ITEM_FLAG, 00H
023E C606C50101            433             MOV SHOW_BCD_ONCE_FLAG, 01H
0243 C606AB0101            434             MOV SAY_SOUND_ONCE_FLAG, 01H
0248 9A3A06----     R      435             CALL FAR PTR STATE_TRANSITION
024D E91F03                436             JMP CASHIER_STATE_END
0250                       437     FIRST_JMP_QUANTITY_CHECK_NUMBER:
0250 EB2690                438             JMP QUANTITY_CHECK_NUMBER
0253                       439     QUANTITY_CHECK_ENTER:
0253 803E50007C            440             CMP KBD_CHAR_INPUT, KBD_ENTER
0258 751E                  441             JNE QUANTITY_CHECK_NUMBER
025A 803E740000            442             CMP USER_INPUT_LENGTH, 00H
025F 74AE                  443             JE THIRD_JUMP_STATE_END
0261 C606ED0101            444             MOV NETWORK_STATE, NETWORK_ENABLE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   13


LOC  OBJ                  LINE     SOURCE

0266 C606500000            445             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
026B C606510000            446             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
0270 9A9210----     R      447             CALL FAR PTR CLEAR_7SEGMENT
0275 E9F702                448             JMP CASHIER_STATE_END
0278                       449     QUANTITY_CHECK_NUMBER:  
0278 803E510000            450             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
027D 740C                  451             JE FOURTH_JUMP_STATE_END
027F 803E740003            452             CMP USER_INPUT_LENGTH, KBD_QUANTITY_LENGTH
0284 7405                  453             JE FOURTH_JUMP_STATE_END
0286 9A7D05----     R      454             CALL FAR PTR GET_USER_DIGIT
028B                       455     FOURTH_JUMP_STATE_END:
028B E9E102                456             JMP CASHIER_STATE_END
                           457     
                           458     ;Cash register is now displaying the item price after receiving it via serial
028E                       459     CASHIER_DISPLAY_ITEM_PRICE:
028E 803EC50101            460             CMP SHOW_BCD_ONCE_FLAG, 01H
0293 740A                  461             JE CONTINUE_WITH_SOUND_PRICE
0295 C606C50101            462             MOV SHOW_BCD_ONCE_FLAG, 01H
029A 9A8A06----     R      463             CALL FAR PTR DISPLAY_PRICE_ON_BCD
029F                       464     CONTINUE_WITH_SOUND_PRICE:
029F 803EAB0101            465             CMP SAY_SOUND_ONCE_FLAG, 01H
02A4 7427                  466             JE PRICE_CHECK_NEW_ITEM
02A6 FE06EF01              467             INC PURCHASE_ITEM_COUNT
02AA C606AB0101            468             MOV SAY_SOUND_ONCE_FLAG, 01H
02AF C606AA011F            469             MOV SOUND_INDEX_INPUT, SOUND_COST ;To say the word 'cost'
02B4 9AEC0B----     R      470             CALL FAR PTR ADD_SOUND_INDEX
02B9 C606AA012C            471             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
02BE 9AEC0B----     R      472             CALL FAR PTR ADD_SOUND_INDEX
02C3 9A150C----     R      473             CALL FAR PTR POPULATE_SOUND_QUEUE
02C8 9AE70D----     R      474             CALL FAR PTR ADD_INCOMING_PRICE
02CD                       475     PRICE_CHECK_NEW_ITEM:
02CD 803E500043            476             CMP KBD_CHAR_INPUT, KBD_TRIGGER_NEW_ITEM
02D2 7517                  477             JNE PRICE_CANCEL_TRANSACTION
02D4 C606EE0103            478             MOV CASH_REGISTER_STATE, ENTER_BARCODE
02D9 C606AB0100            479             MOV SAY_SOUND_ONCE_FLAG, 00H
02DE C606C50100            480             MOV SHOW_BCD_ONCE_FLAG, 00H
02E3 9A3A06----     R      481             CALL FAR PTR STATE_TRANSITION
02E8 E98402                482             JMP CASHIER_STATE_END
02EB                       483     PRICE_CANCEL_TRANSACTION:       
02EB 803E500045            484             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
02F0 751C                  485             JNE PRICE_VIEW_CURRENT
02F2                       486     BYPASS_CANCEL_TRANSACTION:
02F2 C606EE0102            487             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
02F7 C606C40101            488             MOV TRIGGER_P_FLAG, 01H
02FC 9A3A06----     R      489             CALL FAR PTR STATE_TRANSITION
0301 9ADD05----     R      490             CALL FAR PTR CLEAR_ALL_VARIABLES
0306 C606ED0104            491             MOV NETWORK_STATE, NETWORK_CANCEL_TRANSACTION
030B E96102                492             JMP CASHIER_STATE_END
030E                       493     PRICE_VIEW_CURRENT:
030E 803E500048            494             CMP KBD_CHAR_INPUT, KBD_TRIGGER_DISPLAY_CURRENT
0313 7514                  495             JNE PRICE_CANCEL_ITEM
0315 803EEF0100            496             CMP PURCHASE_ITEM_COUNT, 00H
031A 7432                  497             JE FIFTH_JUMP_STATE_END
031C C606AA0128            498             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   14


LOC  OBJ                  LINE     SOURCE

0321 9AEC0B----     R      499             CALL FAR PTR ADD_SOUND_INDEX
0326 EB4B90                500             JMP BYPASS_VIEW_TOTAL
0329                       501     PRICE_CANCEL_ITEM:
0329 803E500044            502             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
032E 7521                  503             JNE PRICE_END_TRANSACTION
0330 803EEF0100            504             CMP PURCHASE_ITEM_COUNT, 00H
0335 740D                  505             JE DISPLAY_ERROR_CODE_PRICE
0337 C606EE0106            506             MOV CASH_REGISTER_STATE, CANCEL_ITEM
033C 9A3A06----     R      507             CALL FAR PTR STATE_TRANSITION
0341 E92B02                508             JMP CASHIER_STATE_END
0344                       509     DISPLAY_ERROR_CODE_PRICE:
0344 C606C20101            510             MOV TRIGGER_E_FLAG, 01H
0349 9A3A06----     R      511             CALL FAR PTR STATE_TRANSITION
034E                       512     FIFTH_JUMP_STATE_END:
034E E91E02                513             JMP CASHIER_STATE_END
0351                       514     PRICE_END_TRANSACTION:
0351 803E500046            515             CMP KBD_CHAR_INPUT, KBD_TRIGGER_END_TRANSACTION
0356 7555                  516             JNE PRICE_MODIFY_ITEM
0358 803EEF0100            517             CMP PURCHASE_ITEM_COUNT, 00H
035D 7493                  518             JE BYPASS_CANCEL_TRANSACTION
035F C606EE0107            519             MOV CASH_REGISTER_STATE, END_TRANSACTION
0364 C606ED0102            520             MOV NETWORK_STATE, NETWORK_END_TRANSACTION
0369 C606AA0128            521             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
036E 9AEC0B----     R      522             CALL FAR PTR ADD_SOUND_INDEX
0373                       523     BYPASS_VIEW_TOTAL:
0373 9A3A06----     R      524             CALL FAR PTR STATE_TRANSITION
0378 33C9                  525             XOR CX, CX
037A 33DB                  526             XOR BX, BX
037C B10A                  527             MOV CL, 10
037E                       528     TRANSFER_TO_ITEM_PRICE:
037E 8A87E001              529             MOV AL, TOTAL_PRICE[BX]
0382 8887CF01              530             MOV ITEM_PRICE[BX], AL
0386 43                    531             INC BX
0387 E2F5                  532             LOOP TRANSFER_TO_ITEM_PRICE
0389 A0EA01                533             MOV AL, TOTAL_PLACE_VALUE
038C 0430                  534             ADD AL, 48
038E A2D901                535             MOV PLACE_VALUE, AL
0391 A2DA01                536             MOV TMP_PLACE_VALUE, AL
0394 2C2D                  537             SUB AL, 45
0396 A2CE01                538             MOV SERIAL_INDEX, AL
0399 9A8A06----     R      539             CALL FAR PTR DISPLAY_PRICE_ON_BCD
039E 9A150C----     R      540             CALL FAR PTR POPULATE_SOUND_QUEUE
03A3 803EEE0108            541             CMP CASH_REGISTER_STATE, CHANGE_PAY
03A8 7469                  542             JE FIRST_JUMP_CHANGE_REMAINING
03AA E9C201                543             JMP CASHIER_STATE_END
03AD                       544     PRICE_MODIFY_ITEM:
03AD 803E500047            545             CMP KBD_CHAR_INPUT, KBD_TRIGGER_MODIFY
03B2 759A                  546             JNE FIFTH_JUMP_STATE_END
03B4 803EEF0100            547             CMP PURCHASE_ITEM_COUNT, 00H
03B9 7412                  548             JE DISPLAY_ERROR_MODIFY_PRICE
03BB C606EE0103            549             MOV CASH_REGISTER_STATE, ENTER_BARCODE
03C0 C606F20101            550             MOV MODIFY_ITEM_FLAG, 01H
03C5 9A3A06----     R      551             CALL FAR PTR STATE_TRANSITION
03CA E9A201                552             JMP CASHIER_STATE_END
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   15


LOC  OBJ                  LINE     SOURCE

03CD                       553     DISPLAY_ERROR_MODIFY_PRICE:
03CD C606C20101            554             MOV TRIGGER_E_FLAG, 01H
03D2 9A3A06----     R      555             CALL FAR PTR STATE_TRANSITION   
03D7 E99501                556             JMP CASHIER_STATE_END
                           557             
                           558     ; Cashier is now cancelling a single item in the transaction
03DA                       559     CASHIER_CANCEL_ITEM:
03DA 803E500000            560             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
03DF 7450                  561             JE CANCEL_CHECK_NUMBER
03E1 803E50005F            562             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
03E6 750D                  563             JNE CANCEL_CHECK_AGAIN
03E8 9A4F06----     R      564             CALL FAR PTR BACKSPACE_KEYPRESS
03ED C606500000            565             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
03F2 E97A01                566             JMP CASHIER_STATE_END
03F5                       567     CANCEL_CHECK_AGAIN:
03F5 803E500044            568             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_ITEM
03FA 751A                  569             JNE CANCEL_CHECK_ENTER
03FC C606EE0105            570             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0401 C606C50101            571             MOV SHOW_BCD_ONCE_FLAG, 01H
0406 C606AB0101            572             MOV SAY_SOUND_ONCE_FLAG, 01H
040B 9A3A06----     R      573             CALL FAR PTR STATE_TRANSITION
0410 E95C01                574             JMP CASHIER_STATE_END
0413                       575     FIRST_JUMP_CHANGE_REMAINING:
0413 E93D01                576             JMP CHANGE_REMAINING
0416                       577     CANCEL_CHECK_ENTER:
0416 803E50007C            578             CMP KBD_CHAR_INPUT, KBD_ENTER
041B 7514                  579             JNE CANCEL_CHECK_NUMBER
041D 803E740008            580             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
0422 750A                  581             JNE SIXTH_JUMP_STATE_END
0424 C606ED0101            582             MOV NETWORK_STATE, NETWORK_ENABLE
0429 9A3A06----     R      583             CALL FAR PTR STATE_TRANSITION
042E                       584     SIXTH_JUMP_STATE_END:
042E E93E01                585             JMP CASHIER_STATE_END
0431                       586     CANCEL_CHECK_NUMBER:    
0431 803E510000            587             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
0436 74F6                  588             JE SIXTH_JUMP_STATE_END
0438 803E740008            589             CMP USER_INPUT_LENGTH, KBD_BARCODE_LENGTH
043D 74EF                  590             JE SIXTH_JUMP_STATE_END
043F 9A7D05----     R      591             CALL FAR PTR GET_USER_DIGIT
0444 EBE8                  592             JMP SIXTH_JUMP_STATE_END
                           593             
                           594     ; Cashier is now ending the transaction 
0446                       595     CASHIER_END_TRANSACTION:
0446 803E500045            596             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
044B 7503                  597             JNE END_CHANGE_PAY
044D E9A2FE                598             JMP BYPASS_CANCEL_TRANSACTION
0450                       599     END_CHANGE_PAY:
0450 803E500049            600             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CHANGE_PAY
0455 75D7                  601             JNE SIXTH_JUMP_STATE_END
0457 C606EE0108            602             MOV CASH_REGISTER_STATE, CHANGE_PAY
045C 9A3A06----     R      603             CALL FAR PTR STATE_TRANSITION
0461 C606520000            604             MOV CHANGE_PLACE_VALUE, 00H
0466 E90601                605             JMP CASHIER_STATE_END
                           606             
                           607     ;Cashier is now calculating the change
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   16


LOC  OBJ                  LINE     SOURCE

0469                       608     CASHIER_CHANGE_PAY:
0469 803E500000            609             CMP KBD_CHAR_INPUT, KBD_CHAR_RESET
046E 7462                  610             JE CHANGE_NUMBER
0470 803E50005F            611             CMP KBD_CHAR_INPUT, KBD_BACKSPACE
0475 750D                  612             JNE CHANGE_CANCEL_TRANSACTION
0477 9A4F06----     R      613             CALL FAR PTR BACKSPACE_KEYPRESS
047C C606500000            614             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
0481 E9EB00                615             JMP CASHIER_STATE_END
0484                       616     CHANGE_CANCEL_TRANSACTION:
0484 803E500045            617             CMP KBD_CHAR_INPUT, KBD_TRIGGER_CANCEL_TRANSACTION
0489 7503                  618             JNE CHANGE_END_TRANSACTION
048B E964FE                619             JMP BYPASS_CANCEL_TRANSACTION
048E                       620     CHANGE_END_TRANSACTION:
048E 803E500046            621             CMP KBD_CHAR_INPUT, KBD_TRIGGER_END_TRANSACTION
0493 751E                  622             JNE CHANGE_EMAIL_SMS
0495 803EF00101            623             CMP CHANGE_DONE_FLAG, 01H
049A 7514                  624             JNE SEVENTH_JUMP_STATE_END
049C C606EE0102            625             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
04A1 C606C40101            626             MOV TRIGGER_P_FLAG, 01H
04A6 9A3A06----     R      627             CALL FAR PTR STATE_TRANSITION
04AB 9ADD05----     R      628             CALL FAR PTR CLEAR_ALL_VARIABLES
04B0                       629     SEVENTH_JUMP_STATE_END:
04B0 E9BC00                630             JMP CASHIER_STATE_END
04B3                       631     CHANGE_EMAIL_SMS:
04B3 803E50004B            632             CMP KBD_CHAR_INPUT, KBD_TRIGGER_SEND_EMAIL_SMS
04B8 7539                  633             JNE CHANGE_CHECK_ENTER
04BA 803EF00101            634             CMP CHANGE_DONE_FLAG, 01H
04BF 75EF                  635             JNE SEVENTH_JUMP_STATE_END
04C1 C606F40101            636             MOV EMAIL_FLAG, 01H
04C6 C606EE0103            637             MOV CASH_REGISTER_STATE, ENTER_BARCODE
04CB 9A3A06----     R      638             CALL FAR PTR STATE_TRANSITION
04D0 EBDE                  639             JMP SEVENTH_JUMP_STATE_END
04D2                       640     CHANGE_NUMBER:  
04D2 803E510000            641             CMP KBD_INPUT_STATE, KBD_OLD_INPUT
04D7 74D7                  642             JE SEVENTH_JUMP_STATE_END
04D9 803EF00101            643             CMP CHANGE_DONE_FLAG, 01H
04DE 74D0                  644             JE SEVENTH_JUMP_STATE_END
04E0 803E740008            645             CMP USER_INPUT_LENGTH, KBD_CHANGE_LENGTH
04E5 74C9                  646             JE SEVENTH_JUMP_STATE_END
04E7 FE065200              647             INC CHANGE_PLACE_VALUE
04EB 9A7D05----     R      648             CALL FAR PTR GET_USER_DIGIT
04F0 EB7D90                649             JMP CASHIER_STATE_END
04F3                       650     CHANGE_CHECK_ENTER:
04F3 803E50007C            651             CMP KBD_CHAR_INPUT, KBD_ENTER
04F8 7575                  652             JNE CASHIER_STATE_END
04FA 803EF00101            653             CMP CHANGE_DONE_FLAG, 01H
04FF 746E                  654             JE CASHIER_STATE_END
0501 803E740002            655             CMP USER_INPUT_LENGTH, 02H
0506 7E67                  656             JLE CASHIER_STATE_END
0508 33DB                  657             XOR BX, BX
050A 8A1E5200              658             MOV BL, CHANGE_PLACE_VALUE
050E 8A4752                659             MOV AL, CHANGE_PRICE[BX-1]
0511 884753                660             MOV CHANGE_PRICE[BX], AL
0514 8A4751                661             MOV AL, CHANGE_PRICE[BX-2]
0517 884752                662             MOV CHANGE_PRICE[BX-1], AL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   17


LOC  OBJ                  LINE     SOURCE

051A C647512E              663             MOV CHANGE_PRICE[BX-2], '.'
051E 802E520002            664             SUB CHANGE_PLACE_VALUE, 2
0523 9A1B0F----     R      665             CALL FAR PTR CALCULATE_CHANGE
0528 803E750000            666             CMP CHANGE_SUCCESS_FLAG, 00H
052D 7417                  667             JE FINISH_CHANGE
052F C606EE0107            668             MOV CASH_REGISTER_STATE, END_TRANSACTION
0534 C606C20101            669             MOV TRIGGER_E_FLAG, 01H
0539 9A3A06----     R      670             CALL FAR PTR STATE_TRANSITION
053E C606750000            671             MOV CHANGE_SUCCESS_FLAG, 00H
0543 EB2A90                672             JMP CASHIER_STATE_END
0546                       673     FINISH_CHANGE:
0546 C606AA0129            674             MOV SOUND_INDEX_INPUT, SOUND_YOURCHANGEIS ;To say the phrase 'your change is'
054B 9AEC0B----     R      675             CALL FAR PTR ADD_SOUND_INDEX
0550 E920FE                676             JMP BYPASS_VIEW_TOTAL
0553                       677     CHANGE_REMAINING:
0553 C606AA012C            678             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
0558 9AEC0B----     R      679             CALL FAR PTR ADD_SOUND_INDEX
055D C606AA012A            680             MOV SOUND_INDEX_INPUT, SOUND_THANKYOUANDGOODBYE ;To say the phrase 'thank you
                                    and goodbye'
0562 9AEC0B----     R      681             CALL FAR PTR ADD_SOUND_INDEX
0567 C606F00101            682             MOV CHANGE_DONE_FLAG, 01H
056C EB0190                683             JMP CASHIER_STATE_END
                           684             
056F                       685     CASHIER_STATE_END:      
056F C606500000            686             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
0574 C606510000            687             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
0579 59                    688             POP     CX
057A 5B                    689             POP     BX
057B 58                    690             POP AX
057C CB                    691             RET
                           692     CHANGE_CASHIER_STATE ENDP
                           693     
                           694     
                           695     ;Procedure to add user's numeric input to a corresponding array depending on the stat
                                   e
057D                       696     GET_USER_DIGIT PROC FAR
057D 50                    697             PUSH AX
057E 53                    698             PUSH BX
                           699             
057F 33DB                  700             XOR BX, BX
0581 8A1E7400              701             MOV BL, USER_INPUT_LENGTH
0585 A04F00                702             MOV AL, KBD_NUM_INPUT
0588 9AC707----     R      703             CALL FAR PTR ADD_BCD_QUEUE
058D A2AA01                704             MOV SOUND_INDEX_INPUT, AL
0590 9AEC0B----     R      705             CALL FAR PTR ADD_SOUND_INDEX
0595 0430                  706             ADD AL, 48
                           707             
0597 803EEE0104            708             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
059C 741B                  709             JE MOV_AL_QUANTITY
                           710             
059E 803EF30101            711             CMP USERNAME_FLAG, 01H
05A3 741A                  712             JE MOV_AL_PASSWORD
                           713             
05A5 803EEE0101            714             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
05AA 7419                  715             JE MOV_AL_USERNAME
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   18


LOC  OBJ                  LINE     SOURCE

                           716             
05AC 803EEE0108            717             CMP CASH_REGISTER_STATE, CHANGE_PAY
05B1 7418                  718             JE MOV_AL_CHANGE
                           719             
05B3 884769                720             MOV USER_BARCODE[BX], AL
05B6 EB1990                721             JMP CONTINUE_GET_DIGIT
                           722             
05B9                       723     MOV_AL_QUANTITY:
05B9 884771                724             MOV USER_QUANTITY[BX], AL
05BC EB1390                725             JMP CONTINUE_GET_DIGIT
                           726             
05BF                       727     MOV_AL_PASSWORD:
05BF 884763                728             MOV USER_PASSWORD[BX], AL
05C2 EB0D90                729             JMP CONTINUE_GET_DIGIT
                           730             
05C5                       731     MOV_AL_USERNAME:
05C5 88475D                732             MOV USER_USERNAME[BX], AL
05C8 EB0790                733             JMP CONTINUE_GET_DIGIT
                           734             
05CB                       735     MOV_AL_CHANGE:
05CB 884753                736             MOV CHANGE_PRICE[BX], AL
05CE EB0190                737             JMP CONTINUE_GET_DIGIT  
                           738             
05D1                       739     CONTINUE_GET_DIGIT:
05D1 FE067400              740             INC USER_INPUT_LENGTH
05D5 C606510000            741             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
                           742     
05DA                       743     GET_USER_DIGIT_END:     
05DA 5B                    744             POP     BX
05DB 58                    745             POP AX
05DC CB                    746             RET
                           747     GET_USER_DIGIT ENDP
                           748     
                           749     
                           750     ;Procedure to clear all variables before cancelling/ending a transaction
05DD                       751     CLEAR_ALL_VARIABLES PROC FAR
05DD 53                    752             PUSH BX
05DE 51                    753             PUSH CX
                           754             
05DF C606520000            755             MOV CHANGE_PLACE_VALUE, 00H
05E4 C606AB0100            756             MOV SAY_SOUND_ONCE_FLAG, 00H
05E9 C606C50100            757             MOV SHOW_BCD_ONCE_FLAG, 00H
05EE C606CE0100            758             MOV SERIAL_INDEX, 00H
05F3 C606EA0100            759             MOV TOTAL_PLACE_VALUE, 00H
05F8 C606EB0100            760             MOV CASH_REGISTER_START, 00H
05FD C606EF0100            761             MOV PURCHASE_ITEM_COUNT, 00H
0602 C606F00100            762             MOV CHANGE_DONE_FLAG, 00H
0607 C606F10100            763             MOV SWAP_JUMP_FLAG, 00H
060C C606F20100            764             MOV MODIFY_ITEM_FLAG, 00H
0611 C606F30100            765             MOV USERNAME_FLAG, 00H
0616 C606F40100            766             MOV EMAIL_FLAG, 00H
061B C606750000            767             MOV CHANGE_SUCCESS_FLAG, 00H
                           768             
0620 33DB                  769             XOR BX, BX
0622 33C9                  770             XOR CX, CX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   19


LOC  OBJ                  LINE     SOURCE

0624 B10A                  771             MOV CL, 10
0626                       772     CLEAR_PRICES:
0626 C6475330              773             MOV CHANGE_PRICE[BX], '0'
062A C687CF0130            774             MOV ITEM_PRICE[BX], '0'
062F C687E00130            775             MOV TOTAL_PRICE[BX], '0'
0634 43                    776             INC BX
0635 E2EF                  777             LOOP CLEAR_PRICES
                           778     
0637                       779     CLEAR_VARIABLES_END:    
0637 59                    780             POP     CX
0638 5B                    781             POP     BX
0639 CB                    782             RET
                           783     CLEAR_ALL_VARIABLES ENDP
                           784     
                           785     
                           786     ;Procedure to clear variables when changing states
063A                       787     STATE_TRANSITION PROC FAR       
063A C606500000            788             MOV KBD_CHAR_INPUT, KBD_CHAR_RESET
063F C606740000            789             MOV USER_INPUT_LENGTH, 00H
0644 C606510000            790             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
0649 9A9210----     R      791             CALL FAR PTR CLEAR_7SEGMENT
064E CB                    792             RET
                           793     STATE_TRANSITION ENDP
                           794     
                           795     
                           796     ;Procedure to remove user's most recent keyboard input and replace it with a zero on 
                                   the BCD
064F                       797     BACKSPACE_KEYPRESS PROC FAR     
064F 50                    798             PUSH AX
                           799     
0650 803E740000            800             CMP USER_INPUT_LENGTH, 00H
0655 7431                  801             JE BACKSPACE_KEYPRESS_END
0657 FE0E7400              802             DEC USER_INPUT_LENGTH
065B FE0E5200              803             DEC CHANGE_PLACE_VALUE
065F C606510000            804             MOV KBD_INPUT_STATE, KBD_OLD_INPUT
                           805             
0664 A0BB01                806             MOV AL, BCD_DISPLAY[1]
0667 A2BA01                807             MOV BCD_DISPLAY[0], AL
066A A0BC01                808             MOV AL, BCD_DISPLAY[2]
066D A2BB01                809             MOV BCD_DISPLAY[1], AL
0670 A0BD01                810             MOV AL, BCD_DISPLAY[3]
0673 A2BC01                811             MOV BCD_DISPLAY[2], AL
0676 A0BE01                812             MOV AL, BCD_DISPLAY[4]
0679 A2BD01                813             MOV BCD_DISPLAY[3], AL
067C A0BF01                814             MOV AL, BCD_DISPLAY[5]
067F A2BE01                815             MOV BCD_DISPLAY[4], AL
0682 A0AC01                816             MOV AL, BCD_NUMBERS[0]
0685 A2BF01                817             MOV BCD_DISPLAY[5], AL
                           818             
0688                       819     BACKSPACE_KEYPRESS_END: 
0688 58                    820             POP AX
0689 CB                    821             RET
                           822     BACKSPACE_KEYPRESS ENDP
                           823     
                           824     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   20


LOC  OBJ                  LINE     SOURCE

                           825     ;Procedure that will display the price received via serial on the 7-segment display
068A                       826     DISPLAY_PRICE_ON_BCD PROC FAR   
068A 50                    827             PUSH AX
068B 53                    828             PUSH BX
068C 51                    829             PUSH CX
                           830     
068D 33DB                  831             XOR BX, BX
068F 33C9                  832             XOR CX, CX
                           833             
0691 803ED90145            834             CMP PLACE_VALUE, 'E'
0696 7510                  835             JNE CONTINUE_NORMAL_DISPLAY
0698 A0B701                836             MOV AL, BCD_NUMBERS[11]
069B A2BA01                837             MOV BCD_DISPLAY[0], AL
069E 8A0ECE01              838             MOV CL, SERIAL_INDEX
06A2 80E902                839             SUB CL, 2
06A5 EB0F90                840             JMP PUT_DIGIT_IN_BCD
                           841             
06A8                       842     CONTINUE_NORMAL_DISPLAY:
06A8 8A0ED901              843             MOV CL, PLACE_VALUE
06AC 80E92D                844             SUB CL, 45 ;Subtract 48 to convert to number and add 3 to take care of decima
                                   l digits
                           845             
06AF 80F907                846             CMP CL, 7
06B2 7E02                  847             JLE PUT_DIGIT_IN_BCD
06B4 B107                  848             MOV CL, 7
                           849             
06B6                       850     PUT_DIGIT_IN_BCD:       
06B6 8A87CF01              851             MOV AL, ITEM_PRICE[BX]
06BA 3C2E                  852             CMP AL, '.'
06BC 740D                  853             JE DECIMAL_ADD
06BE 2C30                  854             SUB AL, 48
06C0 A24F00                855             MOV KBD_NUM_INPUT, AL
06C3 9AC707----     R      856             CALL FAR PTR ADD_BCD_QUEUE
06C8 EB0990                857             JMP END_PUT_DIGIT_LOOP
                           858             
06CB                       859     DECIMAL_ADD:
06CB A0BA01                860             MOV AL, BCD_DISPLAY[0]
06CE 0C80                  861             OR AL, 80H
06D0 A2BA01                862             MOV BCD_DISPLAY[0], AL
                           863             
06D3                       864     END_PUT_DIGIT_LOOP:
06D3 43                    865             INC BX
06D4 E2E0                  866             LOOP PUT_DIGIT_IN_BCD
                           867     
06D6                       868     DISPLAY_PRICE_ON_BCD_END:       
06D6 59                    869             POP     CX
06D7 5B                    870             POP     BX
06D8 58                    871             POP AX
06D9 CB                    872             RET
                           873     DISPLAY_PRICE_ON_BCD ENDP
                           874     
                           875     
                           876     ;Procedure to read both the keypads for user inputs
06DA                       877     KEYPAD_READ PROC FAR
06DA 52                    878             PUSH DX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   21


LOC  OBJ                  LINE     SOURCE

06DB 51                    879             PUSH CX
06DC 53                    880             PUSH BX
06DD 50                    881             PUSH AX
06DE 56                    882             PUSH SI
                           883                                             
06DF B300                  884             MOV BL, 00H        ;initialize BL for key code
06E1 32C0                  885             XOR AL, AL        ;clear all flags
06E3 BA8100                886             MOV DX, PORTB  ;port B address to DX
06E6 EE                    887             OUT DX, AL        ;ground all rows
06E7 BA8200                888             MOV DX, PORTC        ;Port C address to DX
                           889                  
06EA EC                    890             IN AL, DX        ;read all columns
06EB 2477                  891             AND AL,77H  ;D0-D2 and D4-D6 are the 6 input pins for two keypads 0111 0111(7
                                   7H)                          
06ED 3C77                  892             CMP AL,77H
06EF 7439                  893             JZ RESET_FLAG 
                           894     
06F1 803E4E0001            895             CMP DS:KEY_FLAG, 01H
06F6 7437                  896             JZ IGNORE_KEYPRESS        ;if flag is set don't send keypad input to hyperter
                                   minal
                           897     
06F8 B07F                  898             MOV AL, 07FH       ;load data byte to ground a row
06FA B704                  899             MOV BH, 04H        ;set row counter
                           900     
06FC                       901     NXTROW:                
06FC D0C0                  902             ROL AL, 01H       ;rotate AL to ground next row
06FE 8AE8                  903             MOV CH, AL        ;save data byte to ground next row
0700 BA8100                904             MOV DX, PORTB        ;port B address to DX
0703 EE                    905             OUT DX, AL        ;ground one of the rows
0704 BA8200                906             MOV DX, PORTC        ;port C address to DX
0707 EC                    907             IN AL, DX        ;read input port for key closure
                           908             
0708 8AE0                  909             MOV AH,AL
070A D0CC                  910             ROR AH,01H
                           911             
070C 80E438                912             AND AH,38H
070F 2407                  913             AND AL,07H
0711 0AC4                  914             OR AL,AH
                           915     
0713 243F                  916             AND AL,3FH ;D0-D2 and D4-D6 are the 6 input pins for two keypads 0111 0111(77
                                   H)
0715 B106                  917             MOV CL, 06H        ;set column counter
                           918     
0717                       919     POLL_COLUMNS:        
0717 D0D8                  920             RCR AL, 01H       ;move D0 to CF        
0719 7365                  921             JNC SEND_KEY        ;key closure is found, if CF=0
071B FEC3                  922             INC BL                ;inc BL for next binary key code                       
                                     
                           923     
071D FEC9                  924             DEC CL                ;dec column counter if no key closure
071F 75F6                  925             JNZ POLL_COLUMNS        ;check for key closure in next column
0721 8AC5                  926             MOV AL, CH        ;Load data byte to ground next row
0723 FECF                  927             DEC BH                ;if no key closure found in all columns in this row, go
                                    to ground next row
0725 75D5                  928             JNZ NXTROW        ;go back to ground next row   
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   22


LOC  OBJ                  LINE     SOURCE

0727 E99700                929             JMP SKIP_SEND       
                           930     
072A                       931     RESET_FLAG:
072A C6064E0000            932             MOV DS:KEY_FLAG, 00H  ;if no keypad input is found, reset flag so that next k
                                   eypad input is printed
                           933             
072F                       934     IGNORE_KEYPRESS:
072F 9A3E00----     R      935             CALL FAR PTR CHANGE_CASHIER_STATE ;Function call to check if there is a chang
                                   e in the cash register's state     
0734 803EEE0100            936             CMP CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0739 7442                  937             JE TEMP_JUMP_SKIP_SEND
073B 803EEE0101            938             CMP CASH_REGISTER_STATE, ENTER_LOGIN_USERNAME
0740 743B                  939             JE TEMP_JUMP_SKIP_SEND
0742 FF06C901              940             INC TIMEOUT_COUNTER
0746 813EC9010406          941             CMP TIMEOUT_COUNTER, TIMEOUT_COUNTER_LEN
074C 752F                  942             JNE TEMP_JUMP_SKIP_SEND
074E C706C9010000          943             MOV TIMEOUT_COUNTER, 0
0754 FE06CB01              944             INC TIMEOUT_SEC_COUNT
0758 803ECB0108            945             CMP TIMEOUT_SEC_COUNT, 08H
075D 7562                  946             JNE SKIP_SEND
075F C606C10101            947             MOV TRIGGER_L_FLAG, 01H
0764 C606EE0100            948             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0769 C606CB0100            949             MOV TIMEOUT_SEC_COUNT, 0
076E 9A3A06----     R      950             CALL FAR PTR STATE_TRANSITION
0773 9ADD05----     R      951             CALL FAR PTR CLEAR_ALL_VARIABLES        
0778 C606ED0103            952             MOV NETWORK_STATE, NETWORK_LOGOUT
077D                       953     TEMP_JUMP_SKIP_SEND:
077D EB4290                954             JMP SKIP_SEND ;if flag is set don't send keypad input to hyperterminal
                           955             
0780                       956     SEND_KEY:
0780 80FB0B                957             CMP BL,0BH
0783 7F07                  958             JG LOAD_KEYS_PART2
                           959             
0785                       960     LOAD_KEYS_PART1:        
0785 8D363600              961         LEA SI,KEYS_PART1 
0789 EB0890                962         JMP SEND_CHAR
                           963             
078C                       964     LOAD_KEYS_PART2:
078C 80EB0C                965         SUB BL,0CH
078F 8D364200              966         LEA SI,KEYS_PART2
                           967             
0793                       968     SEND_CHAR:
0793 33C0                  969         XOR AX, AX
0795 8AC3                  970         MOV AL,BL
0797 03F0                  971         ADD SI,AX
0799 8A04                  972         MOV AL,[SI]
                           973             
079B 2C30                  974         SUB AL, 48 ;Converting to number
079D 3C09                  975             CMP AL, 09H ;If number is > 9 then it is some other character and not a numer
                                   ic digit
079F 7E08                  976             JLE SEND_NUMBER
                           977             
07A1 0430                  978             ADD AL, 48
07A3 A25000                979             MOV KBD_CHAR_INPUT, AL
07A6 EB0990                980             JMP KEYPAD_END
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   23


LOC  OBJ                  LINE     SOURCE

                           981     
07A9                       982     SEND_NUMBER:
                           983             ;manipulating the number
07A9 A24F00                984             MOV KBD_NUM_INPUT, AL
07AC C606510001            985             MOV KBD_INPUT_STATE, KBD_NEW_INPUT
                           986             
07B1                       987     KEYPAD_END:
07B1 C6064E0001            988         MOV DS:KEY_FLAG, 01H ;set flag to one so that next time same key input is not pri
                                   nted
07B6 C606CB0100            989             MOV TIMEOUT_SEC_COUNT, 0
07BB C706C9010000          990             MOV TIMEOUT_COUNTER, 0
                           991             
07C1                       992     SKIP_SEND:
07C1 5E                    993             POP SI
07C2 58                    994             POP AX
07C3 5B                    995             POP BX
07C4 59                    996             POP CX
07C5 5A                    997             POP DX
07C6 CB                    998             RET     
                           999     KEYPAD_READ ENDP
                          1000     
                          1001     
                          1002     ;Procedure that will add user's numeric input to the BCD display
07C7                      1003     ADD_BCD_QUEUE PROC FAR
07C7 50                   1004             PUSH AX
07C8 53                   1005             PUSH BX
                          1006     
07C9 33DB                 1007             XOR BX, BX
                          1008     
07CB 8A1E4F00             1009             MOV BL, KBD_NUM_INPUT
07CF 8AA7AC01             1010             MOV AH, BCD_NUMBERS[BX]
                          1011             
07D3 A0BE01               1012             MOV AL, BCD_DISPLAY[4]
07D6 A2BF01               1013             MOV BCD_DISPLAY[5], AL
07D9 A0BD01               1014             MOV AL, BCD_DISPLAY[3]
07DC A2BE01               1015             MOV BCD_DISPLAY[4], AL
07DF A0BC01               1016             MOV AL, BCD_DISPLAY[2]
07E2 A2BD01               1017             MOV BCD_DISPLAY[3], AL
07E5 A0BB01               1018             MOV AL, BCD_DISPLAY[1]
07E8 A2BC01               1019             MOV BCD_DISPLAY[2], AL
07EB A0BA01               1020             MOV AL, BCD_DISPLAY[0]
07EE A2BB01               1021             MOV BCD_DISPLAY[1], AL          
07F1 8826BA01             1022             MOV BCD_DISPLAY[0], AH
                          1023             
07F5                      1024     BCD_ADD_END:    
07F5 5B                   1025             POP     BX
07F6 58                   1026             POP AX
07F7 CB                   1027             RET
                          1028     ADD_BCD_QUEUE ENDP
                          1029                     
                          1030     
                          1031     ;Procedure that is called whenever something is being sent via serial
07F8                      1032     SERIAL_REC_ACTION       PROC    FAR
07F8 50                   1033             PUSH AX
07F9 53                   1034             PUSH BX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   24


LOC  OBJ                  LINE     SOURCE

07FA 51                   1035             PUSH CX
07FB 52                   1036             PUSH DX
                          1037     
07FC 803EEB0101           1038             CMP CASH_REGISTER_START, 01H
0801 745D                 1039             JE FIRST_JUMP_CASHIER_RECEIVER
                          1040             
0803 803ECC0101           1041             CMP START_READ, 01H
0808 7413                 1042             JE START_READING_ID_VALUES
                          1043             
080A 3C5B                 1044             CMP AL, '['
080C 7403                 1045             JE START_READING_ID
080E E9D300               1046             JMP END_SERIAL_COMMUNICATION
                          1047             
0811                      1048     START_READING_ID:
0811 FE06EC01             1049             INC CASH_REGISTER_FLAG
0815 C606CC0101           1050             MOV START_READ, 01H
081A E9C700               1051             JMP END_SERIAL_COMMUNICATION
                          1052             
081D                      1053     START_READING_ID_VALUES:
081D 33DB                 1054             XOR BX, BX
081F 8A1EEC01             1055             MOV BL, CASH_REGISTER_FLAG
0823 4B                   1056             DEC BX
                          1057             
0824 3A4730               1058             CMP AL, CASH_REGISTER_ID[BX]
0827 753A                 1059             JNE FIRST_JUMP_INITIALIZE_TERMINATE
0829 803EEC0106           1060             CMP CASH_REGISTER_FLAG, 06H
082E 7529                 1061             JNE NORMAL_ID_CHECK
0830 803EED0100           1062             CMP NETWORK_STATE, NETWORK_DISABLE
0835 742F                 1063             JE FIRST_JUMP_NEGATIVE_ACKNOWLEDGEMENT
0837 803EED0102           1064             CMP NETWORK_STATE, NETWORK_END_TRANSACTION
083C 7465                 1065             JE SEND_END_TRANSACTION_ACK
083E 803EED0103           1066             CMP NETWORK_STATE, NETWORK_LOGOUT
0843 7424                 1067             JE SEND_LOGOUT_ACK
0845 803EED0104           1068             CMP NETWORK_STATE, NETWORK_CANCEL_TRANSACTION
084A 743A                 1069             JE SEND_CANCEL_ACK
084C C606EB0101           1070             MOV CASH_REGISTER_START, 01H
0851 9A0D0B----     R     1071             CALL FAR PTR SEND_TO_PC
0856 E98B00               1072             JMP END_SERIAL_COMMUNICATION
0859                      1073     NORMAL_ID_CHECK:
0859 FE06EC01             1074             INC CASH_REGISTER_FLAG
085D E98400               1075             JMP END_SERIAL_COMMUNICATION
                          1076             
0860                      1077     FIRST_JUMP_CASHIER_RECEIVER:
0860 E98400               1078             JMP CASH_REGISTER_RECEIVE_START
                          1079             
0863                      1080     FIRST_JUMP_INITIALIZE_TERMINATE:
0863 EB7090               1081             JMP INITIALIZE_TERMINATE_SERIAL
                          1082             
0866                      1083     FIRST_JUMP_NEGATIVE_ACKNOWLEDGEMENT:
0866 EB5890               1084             JMP SEND_NEGATIVE_ACK
                          1085             
0869                      1086     SEND_LOGOUT_ACK:
0869 B02A                 1087             MOV AL, '*'
086B 9A0000----     E     1088             CALL FAR PTR PRINT_CHAR
0870 B032                 1089             MOV AL, '2'
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   25


LOC  OBJ                  LINE     SOURCE

0872 9A0000----     E     1090             CALL FAR PTR PRINT_CHAR
0877 B02A                 1091             MOV AL, '*'
0879 9A0000----     E     1092             CALL FAR PTR PRINT_CHAR
087E C606ED0100           1093             MOV NETWORK_STATE, NETWORK_DISABLE
0883 EB5090               1094             JMP INITIALIZE_TERMINATE_SERIAL
                          1095     
0886                      1096     SEND_CANCEL_ACK:
0886 B02A                 1097             MOV AL, '*'
0888 9A0000----     E     1098             CALL FAR PTR PRINT_CHAR
088D B033                 1099             MOV AL, '3'
088F 9A0000----     E     1100             CALL FAR PTR PRINT_CHAR
0894 B02A                 1101             MOV AL, '*'
0896 9A0000----     E     1102             CALL FAR PTR PRINT_CHAR
089B C606ED0100           1103             MOV NETWORK_STATE, NETWORK_DISABLE
08A0 EB3390               1104             JMP INITIALIZE_TERMINATE_SERIAL 
                          1105             
08A3                      1106     SEND_END_TRANSACTION_ACK:
08A3 B02A                 1107             MOV AL, '*'
08A5 9A0000----     E     1108             CALL FAR PTR PRINT_CHAR
08AA B034                 1109             MOV AL, '4'
08AC 9A0000----     E     1110             CALL FAR PTR PRINT_CHAR
08B1 B02A                 1111             MOV AL, '*'
08B3 9A0000----     E     1112             CALL FAR PTR PRINT_CHAR
08B8 C606ED0100           1113             MOV NETWORK_STATE, NETWORK_DISABLE
08BD EB1690               1114             JMP INITIALIZE_TERMINATE_SERIAL
                          1115             
08C0                      1116     SEND_NEGATIVE_ACK:
08C0 B02A                 1117             MOV AL, '*'
08C2 9A0000----     E     1118             CALL FAR PTR PRINT_CHAR
08C7 B030                 1119             MOV AL, '0'
08C9 9A0000----     E     1120             CALL FAR PTR PRINT_CHAR
08CE B02A                 1121             MOV AL, '*'
08D0 9A0000----     E     1122             CALL FAR PTR PRINT_CHAR
                          1123             
08D5                      1124     INITIALIZE_TERMINATE_SERIAL:
08D5 C606EB0100           1125             MOV CASH_REGISTER_START, 00H
08DA C606EC0100           1126             MOV CASH_REGISTER_FLAG, 00H
08DF C606CC0100           1127             MOV START_READ, 00H
                          1128             
08E4                      1129     END_SERIAL_COMMUNICATION:
08E4 E92102               1130             JMP SERIAL_END
                          1131     
08E7                      1132     CASH_REGISTER_RECEIVE_START:            
08E7 803ECD0101           1133             CMP START_RECEIVE_PRICE, 01H
08EC 740F                 1134             JE START_READING_DIGITS
                          1135             
08EE 3C28                 1136             CMP AL, '('
08F0 7403                 1137             JE START_READING_PRICE
08F2 E91302               1138             JMP SERIAL_END
                          1139             
08F5                      1140     START_READING_PRICE:
08F5 C606CD0101           1141             mov START_RECEIVE_PRICE, 01H
08FA E90B02               1142             JMP SERIAL_END
                          1143             
08FD                      1144     START_READING_DIGITS:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   26


LOC  OBJ                  LINE     SOURCE

08FD 803ECE0100           1145             CMP SERIAL_INDEX, 00H
0902 742A                 1146             JE GET_PLACE_VALUE
                          1147             
0904 3C3B                 1148             CMP AL, ';'
0906 740A                 1149             JE TEMP_INDEX_INCREMENT
                          1150             
0908 803ECE0102           1151             CMP SERIAL_INDEX, 02H
090D 7D0A                 1152             JGE GET_DIGITS
                          1153             
090F E9F601               1154             JMP SERIAL_END
                          1155             
0912                      1156     TEMP_INDEX_INCREMENT:
0912 FE06CE01             1157             INC SERIAL_INDEX
0916 E9EF01               1158             JMP SERIAL_END
                          1159             
0919                      1160     GET_DIGITS:
0919 3C29                 1161             CMP AL, ')'
091B 741E                 1162             JE TERMINATE_SERIAL
                          1163             
091D 33DB                 1164             XOR BX, BX
091F 8A1ECE01             1165             MOV BL, SERIAL_INDEX
0923 8887CD01             1166             MOV ITEM_PRICE[BX-2], AL
0927 FE06CE01             1167             INC SERIAL_INDEX        
092B E9DA01               1168             JMP SERIAL_END
                          1169             
092E                      1170     GET_PLACE_VALUE:
092E FE06CE01             1171             INC SERIAL_INDEX
0932 A2DA01               1172             MOV TMP_PLACE_VALUE, AL
0935 A2D901               1173             MOV PLACE_VALUE, AL
0938 E9CD01               1174             JMP SERIAL_END
                          1175             
093B                      1176     TERMINATE_SERIAL:
093B C606EB0100           1177             MOV CASH_REGISTER_START, 00H
0940 C606EC0100           1178             MOV CASH_REGISTER_FLAG, 00H
0945 C606CC0100           1179             MOV START_READ, 00H
094A C606CD0100           1180             MOV START_RECEIVE_PRICE, 00H
094F C606ED0100           1181             MOV NETWORK_STATE, NETWORK_DISABLE
                          1182             
0954 803ED90141           1183             CMP PLACE_VALUE, 'A'
0959 7426                 1184             JE FIRST_JUMP_CHANGE_BARCODE_STATE
                          1185             
095B 803ED90142           1186             CMP PLACE_VALUE, 'B'
0960 7422                 1187             JE FIRST_JUMP_WRONG_LOGIN
                          1188             
0962 803ED90144           1189             CMP PLACE_VALUE, 'D'
0967 741E                 1190             JE FIRST_JUMP_WRONG_BARCODE
                          1191             
0969 803ED90145           1192             CMP PLACE_VALUE, 'E'
096E 741A                 1193             JE FIRST_JUMP_WRONG_QUANTITY
                          1194             
0970 803EEE0104           1195             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0975 7416                 1196             JE FIRST_JUMP_PRICE_PROCESSING
                          1197             
0977 803EEE0106           1198             CMP CASH_REGISTER_STATE, CANCEL_ITEM
097C 7412                 1199             JE CANCEL_ITEM_PROCESSING
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   27


LOC  OBJ                  LINE     SOURCE

                          1200             
097E E98701               1201             JMP SERIAL_END
                          1202             
0981                      1203     FIRST_JUMP_CHANGE_BARCODE_STATE:
0981 E9CC00               1204             JMP CHANGE_STATE_TO_BARCODE
                          1205             
0984                      1206     FIRST_JUMP_WRONG_LOGIN:
0984 E9FE00               1207             JMP DISPLAY_WRONG_LOGIN
                          1208             
0987                      1209     FIRST_JUMP_WRONG_BARCODE:
0987 E91201               1210             JMP DISPLAY_WRONG_BARCODE
                          1211             
098A                      1212     FIRST_JUMP_WRONG_QUANTITY:
098A E95501               1213             JMP DISPLAY_WRONG_QUANTITY
                          1214             
098D                      1215     FIRST_JUMP_PRICE_PROCESSING:
098D E9AE00               1216             JMP PRICE_PROCESSING
                          1217             
0990                      1218     CANCEL_ITEM_PROCESSING: 
0990 8A16EA01             1219             MOV DL, TOTAL_PLACE_VALUE
0994 88165200             1220             MOV CHANGE_PLACE_VALUE, DL              
0998 8A26DA01             1221             MOV AH, TMP_PLACE_VALUE
099C 80EC30               1222             SUB AH, 48
099F 8826EA01             1223             MOV TOTAL_PLACE_VALUE, AH
                          1224             
09A3 33C9                 1225             XOR CX, CX
09A5 33DB                 1226             XOR BX, BX
09A7 B10A                 1227             MOV CL, 10
09A9                      1228     CREATE_PRICE_ITEMS:
09A9 8A97E001             1229             MOV DL, TOTAL_PRICE[BX]
09AD 885753               1230             MOV CHANGE_PRICE[BX], DL
09B0 8A97CF01             1231             MOV DL, ITEM_PRICE[BX]
09B4 8897E001             1232             MOV TOTAL_PRICE[BX], DL
09B8 43                   1233             INC BX
09B9 E2EE                 1234             LOOP CREATE_PRICE_ITEMS 
09BB 9A1B0F----     R     1235             CALL FAR PTR CALCULATE_CHANGE
09C0 C606520000           1236             MOV CHANGE_PLACE_VALUE, 00H
                          1237             
09C5 33DB                 1238             XOR BX, BX
09C7 B10A                 1239             MOV CL, 10
09C9                      1240     TOTAL_INPUT_PRICE_SWAP:
09C9 8A97E001             1241             MOV DL, TOTAL_PRICE[BX]
09CD 8897CF01             1242             MOV ITEM_PRICE[BX], DL
09D1 C6475330             1243             MOV CHANGE_PRICE[BX], '0'
09D5 43                   1244             INC BX
09D6 E2F1                 1245             LOOP TOTAL_INPUT_PRICE_SWAP
                          1246             
09D8 8A26EA01             1247             MOV AH, TOTAL_PLACE_VALUE
09DC 80C430               1248             ADD AH, 48
09DF 8826D901             1249             MOV PLACE_VALUE, AH
09E3 8826DA01             1250             MOV TMP_PLACE_VALUE, AH 
09E7 FE0EEF01             1251             DEC PURCHASE_ITEM_COUNT
09EB 803EF20101           1252             CMP MODIFY_ITEM_FLAG, 01H
09F0 751C                 1253             JNE CONTINUE_CANCELLING 
09F2 C606CE0100           1254             MOV SERIAL_INDEX, 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   28


LOC  OBJ                  LINE     SOURCE

09F7 C606EE0104           1255             MOV CASH_REGISTER_STATE, ENTER_QUANTITY
09FC C606EB0101           1256             MOV CASH_REGISTER_START, 01H
0A01 C606C50100           1257             MOV SHOW_BCD_ONCE_FLAG, 00H
0A06 C606AB0100           1258             MOV SAY_SOUND_ONCE_FLAG, 00H
0A0B E9FA00               1259             JMP SERIAL_END
0A0E                      1260     CONTINUE_CANCELLING:
0A0E C606EE0105           1261             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0A13 C606C50101           1262             MOV SHOW_BCD_ONCE_FLAG, 01H
0A18 C606AB0101           1263             MOV SAY_SOUND_ONCE_FLAG, 01H
0A1D 9A3A06----     R     1264             CALL FAR PTR STATE_TRANSITION
0A22 C606AA0128           1265             MOV SOUND_INDEX_INPUT, SOUND_PURCHASED ;To say the phrase 'you have purchased
                                   '
0A27 9AEC0B----     R     1266             CALL FAR PTR ADD_SOUND_INDEX
0A2C 9A8A06----     R     1267             CALL FAR PTR DISPLAY_PRICE_ON_BCD
0A31 9A150C----     R     1268             CALL FAR PTR POPULATE_SOUND_QUEUE       
0A36 C606CE0100           1269             MOV SERIAL_INDEX, 00H
0A3B E9CA00               1270             JMP SERIAL_END
                          1271             
0A3E                      1272     PRICE_PROCESSING:
0A3E C606EE0105           1273             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0A43 C606F20100           1274             MOV MODIFY_ITEM_FLAG, 00H
0A48 9A3A06----     R     1275             CALL FAR PTR STATE_TRANSITION
0A4D E9B800               1276             JMP SERIAL_END
                          1277             
0A50                      1278     CHANGE_STATE_TO_BARCODE:
0A50 C606CE0100           1279             MOV SERIAL_INDEX, 00H
0A55 C606EE0102           1280             MOV CASH_REGISTER_STATE, WAITING_FOR_BARCODE
0A5A C606C40101           1281             MOV TRIGGER_P_FLAG, 01H
0A5F 9A3A06----     R     1282             CALL FAR PTR STATE_TRANSITION
0A64 C606AA0123           1283             MOV SOUND_INDEX_INPUT, SOUND_GOOD ;To say the word 'good'
0A69 9AEC0B----     R     1284             CALL FAR PTR ADD_SOUND_INDEX
0A6E C606AA012C           1285             MOV SOUND_INDEX_INPUT, SOUND_SILENCE ;To add silence
0A73 9AEC0B----     R     1286             CALL FAR PTR ADD_SOUND_INDEX
0A78 C606AA0125           1287             MOV SOUND_INDEX_INPUT, SOUND_AFTERNOON ;To say the word 'afternoon'
0A7D 9AEC0B----     R     1288             CALL FAR PTR ADD_SOUND_INDEX
0A82 E98300               1289             JMP SERIAL_END
                          1290             
0A85                      1291     DISPLAY_WRONG_LOGIN:
0A85 C606CE0100           1292             MOV SERIAL_INDEX, 00H
0A8A C606C30101           1293             MOV TRIGGER_A_FLAG, 01H
0A8F C606EE0100           1294             MOV CASH_REGISTER_STATE, WAITING_FOR_LOGIN
0A94 9A3A06----     R     1295             CALL FAR PTR STATE_TRANSITION
0A99 EB6D90               1296             JMP SERIAL_END
                          1297             
0A9C                      1298     DISPLAY_WRONG_BARCODE:
0A9C 803EF40101           1299             CMP EMAIL_FLAG, 01H
0AA1 7519                 1300             JNE NORMAL_WRONG_BARCODE
0AA3 C606F40100           1301             MOV EMAIL_FLAG, 00H
0AA8 C606EE0108           1302             MOV CASH_REGISTER_STATE, CHANGE_PAY
0AAD 803ECF0131           1303             CMP ITEM_PRICE[0], '1'
0AB2 7412                 1304             JE CONTINUE_SEND_ERROR
0AB4 C606C20101           1305             MOV TRIGGER_E_FLAG, 01H
0AB9 EB0B90               1306             JMP CONTINUE_SEND_ERROR
0ABC                      1307     NORMAL_WRONG_BARCODE:
0ABC C606EE0105           1308             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   29


LOC  OBJ                  LINE     SOURCE

0AC1 C606C20101           1309             MOV TRIGGER_E_FLAG, 01H
0AC6                      1310     CONTINUE_SEND_ERROR:
0AC6 C606CE0100           1311             MOV SERIAL_INDEX, 00H
0ACB C606F20100           1312             MOV MODIFY_ITEM_FLAG, 00H
0AD0 C606C50101           1313             MOV SHOW_BCD_ONCE_FLAG, 01H
0AD5 C606AB0101           1314             MOV SAY_SOUND_ONCE_FLAG, 01H    
0ADA 9A3A06----     R     1315             CALL FAR PTR STATE_TRANSITION
0ADF EB2790               1316             JMP SERIAL_END
                          1317             
0AE2                      1318     DISPLAY_WRONG_QUANTITY:
0AE2 C606EE0105           1319             MOV CASH_REGISTER_STATE, DISPLAY_ITEM_PRICE
0AE7 C606F20100           1320             MOV MODIFY_ITEM_FLAG, 00H
0AEC C606C50101           1321             MOV SHOW_BCD_ONCE_FLAG, 01H
0AF1 C606AB0101           1322             MOV SAY_SOUND_ONCE_FLAG, 01H
0AF6 9A3A06----     R     1323             CALL FAR PTR STATE_TRANSITION
0AFB 9A8A06----     R     1324             CALL FAR PTR DISPLAY_PRICE_ON_BCD
0B00 C606CE0100           1325             MOV SERIAL_INDEX, 00H
0B05 EB0190               1326             JMP SERIAL_END
                          1327             
0B08                      1328     SERIAL_END:
0B08 5A                   1329             POP DX
0B09 59                   1330             POP     CX
0B0A 5B                   1331             POP     BX
0B0B 58                   1332             POP AX
0B0C CB                   1333             RET
                          1334     SERIAL_REC_ACTION       ENDP
                          1335     
                          1336     
                          1337     ;Procedure that will send the cash register input to the PC via serial
0B0D                      1338     SEND_TO_PC PROC FAR     
0B0D 50                   1339             PUSH AX
0B0E 53                   1340             PUSH BX
0B0F 51                   1341             PUSH CX
                          1342     
0B10 803EF40101           1343             CMP EMAIL_FLAG, 01H
0B15 7455                 1344             JE FIRST_JUMP_CANCEL_BARCODE
                          1345             
0B17 803EF30101           1346             CMP USERNAME_FLAG, 01H
0B1C 740D                 1347             JE SEND_LOGIN_TO_PC
                          1348             
0B1E 803EEE0104           1349             CMP CASH_REGISTER_STATE, ENTER_QUANTITY
0B23 744A                 1350             JE SEND_TRANSACTION_TO_PC
                          1351             
0B25 EB4590               1352             JMP FIRST_JUMP_CANCEL_BARCODE
                          1353             
0B28 E9BD00               1354             JMP SEND_PC_END
                          1355     
0B2B                      1356     SEND_LOGIN_TO_PC:       
0B2B B028                 1357             MOV AL, '('
0B2D 9A0000----     E     1358             CALL FAR PTR PRINT_CHAR
0B32 33C9                 1359             XOR CX, CX
0B34 33DB                 1360             XOR BX, BX
0B36 B106                 1361             MOV CL, KBD_USERNAME_LENGTH     
0B38                      1362     SEND_USERNAME:
0B38 8A475D               1363             MOV AL, USER_USERNAME[BX]
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   30


LOC  OBJ                  LINE     SOURCE

0B3B 9A0000----     E     1364             CALL FAR PTR PRINT_CHAR
0B40 43                   1365             INC BX
0B41 E2F5                 1366             LOOP SEND_USERNAME              
0B43 B03B                 1367             MOV AL, ';'
0B45 9A0000----     E     1368             CALL FAR PTR PRINT_CHAR
0B4A 33DB                 1369             XOR BX, BX
0B4C B106                 1370             MOV CL, KBD_USERNAME_LENGTH     
0B4E                      1371     SEND_PASSWORD:
0B4E 8A4763               1372             MOV AL, USER_PASSWORD[BX]
0B51 02C3                 1373             ADD AL, BL
0B53 040F                 1374             ADD AL, 15
0B55 9A0000----     E     1375             CALL FAR PTR PRINT_CHAR
0B5A 43                   1376             INC BX
0B5B E2F1                 1377             LOOP SEND_PASSWORD      
0B5D B029                 1378             MOV AL, ')'
0B5F 9A0000----     E     1379             CALL FAR PTR PRINT_CHAR 
0B64 C606F30100           1380             MOV USERNAME_FLAG, 00H
0B69 EB7D90               1381             JMP SEND_PC_END
                          1382             
0B6C                      1383     FIRST_JUMP_CANCEL_BARCODE:
0B6C EB4C90               1384             JMP SEND_CANCEL_BARCODE_PC
                          1385             
0B6F                      1386     SEND_TRANSACTION_TO_PC:
0B6F 803EF20101           1387             CMP MODIFY_ITEM_FLAG, 01H
0B74 7405                 1388             JE SEND_HASH_CHARACTER
0B76 B05B                 1389             MOV AL, '['
0B78 EB0890               1390             JMP CONTINUE_SENDING_BARCODE
0B7B                      1391     SEND_HASH_CHARACTER:    
0B7B B023                 1392             MOV AL, '#'
0B7D C606EE0106           1393             MOV CASH_REGISTER_STATE, CANCEL_ITEM
0B82                      1394     CONTINUE_SENDING_BARCODE:
0B82 9A0000----     E     1395             CALL FAR PTR PRINT_CHAR
0B87 33C9                 1396             XOR CX, CX
0B89 33DB                 1397             XOR BX, BX
0B8B B108                 1398             MOV CL, KBD_BARCODE_LENGTH      
0B8D                      1399     SEND_BARCODE:
0B8D 8A4769               1400             MOV AL, USER_BARCODE[BX]
0B90 9A0000----     E     1401             CALL FAR PTR PRINT_CHAR
0B95 43                   1402             INC BX
0B96 E2F5                 1403             LOOP SEND_BARCODE       
0B98 B03B                 1404             MOV AL, ';'
0B9A 9A0000----     E     1405             CALL FAR PTR PRINT_CHAR
0B9F 33DB                 1406             XOR BX, BX
0BA1 8A0E7400             1407             MOV CL, USER_INPUT_LENGTH       
0BA5                      1408     SEND_QUANTITY:
0BA5 8A4771               1409             MOV AL, USER_QUANTITY[BX]
0BA8 9A0000----     E     1410             CALL FAR PTR PRINT_CHAR
0BAD 43                   1411             INC BX
0BAE E2F5                 1412             LOOP SEND_QUANTITY      
0BB0 B05D                 1413             MOV AL, ']'
0BB2 9A0000----     E     1414             CALL FAR PTR PRINT_CHAR
0BB7 EB2F90               1415             JMP SEND_PC_END
                          1416             
0BBA                      1417     SEND_CANCEL_BARCODE_PC: 
0BBA 803EF40101           1418             CMP EMAIL_FLAG, 01H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   31


LOC  OBJ                  LINE     SOURCE

0BBF 7405                 1419             JE SEND_EXCLAMATION
0BC1 B03C                 1420             MOV AL, '<'
0BC3 EB0390               1421             JMP CONTINUE_SEND_CANCEL
0BC6                      1422     SEND_EXCLAMATION:       
0BC6 B024                 1423             MOV AL, '$'
0BC8                      1424     CONTINUE_SEND_CANCEL:
0BC8 9A0000----     E     1425             CALL FAR PTR PRINT_CHAR
0BCD 33C9                 1426             XOR CX, CX
0BCF 33DB                 1427             XOR BX, BX
0BD1 B108                 1428             MOV CL, KBD_BARCODE_LENGTH      
0BD3                      1429     SEND_ITEM_ID:
0BD3 8A4769               1430             MOV AL, USER_BARCODE[BX]
0BD6 9A0000----     E     1431             CALL FAR PTR PRINT_CHAR
0BDB 43                   1432             INC BX
0BDC E2F5                 1433             LOOP SEND_ITEM_ID               
0BDE B03E                 1434             MOV AL, '>'
0BE0 9A0000----     E     1435             CALL FAR PTR PRINT_CHAR
0BE5 EB0190               1436             JMP SEND_PC_END
                          1437     
0BE8                      1438     SEND_PC_END:    
0BE8 59                   1439             POP     CX
0BE9 5B                   1440             POP     BX
0BEA 58                   1441             POP AX
0BEB CB                   1442             RET
                          1443     SEND_TO_PC ENDP
                          1444     
                          1445     
                          1446     ;Procedure that will take add the necessary sound indices to the sound queue for spea
                                   ker output based on a parameter
0BEC                      1447     ADD_SOUND_INDEX PROC FAR        
0BEC 50                   1448             PUSH AX
0BED 53                   1449             PUSH BX
0BEE 51                   1450             PUSH CX
                          1451     
0BEF 33DB                 1452             XOR BX, BX
0BF1 8A1EA901             1453             MOV BL, SOUND_TAIL
0BF5 8A0EAA01             1454             MOV CL, SOUND_INDEX_INPUT
0BF9 B002                 1455             MOV AL, 2
0BFB F6E1                 1456             MUL CL
0BFD 88878801             1457             MOV SOUND_QUEUE[BX], AL
                          1458             
0C01 FE06A901             1459             INC SOUND_TAIL 
0C05 803EA90120           1460             CMP SOUND_TAIL, 32
0C0A 7C05                 1461             JL SOUND_INDEX_END
0C0C C606A90100           1462             MOV SOUND_TAIL, 00H     
                          1463             
0C11                      1464     SOUND_INDEX_END:        
0C11 59                   1465             POP     CX
0C12 5B                   1466             POP     BX
0C13 58                   1467             POP AX
0C14 CB                   1468             RET
                          1469     ADD_SOUND_INDEX ENDP
                          1470     
                          1471     
                          1472     ;Procedure that will convert a price received on the serial into a format which is sa
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   32


LOC  OBJ                  LINE     SOURCE

                                   y-able on the speaker
0C15                      1473     POPULATE_SOUND_QUEUE PROC FAR   
0C15 50                   1474             PUSH AX
0C16 53                   1475             PUSH BX
0C17 51                   1476             PUSH CX
                          1477     
0C18 33DB                 1478             XOR BX, BX
0C1A 33C9                 1479             XOR CX, CX
                          1480             
0C1C 802ED90130           1481             SUB     PLACE_VALUE, 48
0C21 8A0ECE01             1482             MOV CL, SERIAL_INDEX
0C25 83E902               1483             SUB CX, 2
0C28 880ECE01             1484             MOV SERIAL_INDEX, CL    
                          1485             
0C2C                      1486     LOAD_SOUND_QUEUE:
0C2C 8A87CF01             1487             MOV AL, ITEM_PRICE[BX]
0C30 3C2E                 1488             CMP AL, '.'
0C32 7403                 1489             JE SAY_CENTS_VALUE
0C34 EB3490               1490             JMP SAY_OTHER_VALUES
                          1491             
0C37                      1492     SAY_CENTS_VALUE:
0C37 803EDE0100           1493             CMP CENTS_AND_FLAG, 00H
0C3C 740A                 1494             JE CONTINUE_SAYING_CENTS
0C3E C606AA011E           1495             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0C43 9AEC0B----     R     1496             CALL FAR PTR ADD_SOUND_INDEX
                          1497             
0C48                      1498     CONTINUE_SAYING_CENTS:
0C48 43                   1499             INC BX
0C49 8A87CF01             1500             MOV AL, ITEM_PRICE[BX]
0C4D A2DB01               1501             MOV TWO_DIGIT_SOUND[0], AL
0C50 43                   1502             INC BX
0C51 8A87CF01             1503             MOV AL, ITEM_PRICE[BX]
0C55 A2DC01               1504             MOV TWO_DIGIT_SOUND[1], AL
0C58 9AA10D----     R     1505             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0C5D C606AA0122           1506             MOV SOUND_INDEX_INPUT, SOUND_CENTS ;To say the word 'cents'
0C62 9AEC0B----     R     1507             CALL FAR PTR ADD_SOUND_INDEX 
0C67 E92401               1508             JMP SOUND_POPULATE_END
                          1509             
0C6A                      1510     SAY_OTHER_VALUES:       
0C6A 3C30                 1511             CMP AL, '0'
0C6C 7520                 1512             JNE CHECK_OTHER_VALUES
0C6E 803EDF0101           1513             CMP THOUSAND_FLAG, 01H
0C73 7516                 1514             JNE EXIT_FROM_PROCEDURE
0C75 803ED90104           1515             CMP PLACE_VALUE, 4
0C7A 750F                 1516             JNE EXIT_FROM_PROCEDURE
0C7C C606AA011D           1517             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0C81 9AEC0B----     R     1518             CALL FAR PTR ADD_SOUND_INDEX 
0C86 C606DF0100           1519             MOV THOUSAND_FLAG, 00H
                          1520             
0C8B                      1521     EXIT_FROM_PROCEDURE:
0C8B E9DF00               1522             JMP CONTINUE_NEXT_ITERATION
                          1523             
0C8E                      1524     CHECK_OTHER_VALUES:     
0C8E 803ED90106           1525             CMP PLACE_VALUE, 6
0C93 7423                 1526             JE PROCESS_6th_DIGIT
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   33


LOC  OBJ                  LINE     SOURCE

                          1527             
0C95 803ED90105           1528             CMP PLACE_VALUE, 5
0C9A 7443                 1529             JE PROCESS_5th_DIGIT
                          1530             
0C9C 803ED90104           1531             CMP PLACE_VALUE, 4
0CA1 7439                 1532             JE TEMP_JUMP_4th_DIGIT
                          1533             
0CA3 803ED90103           1534             CMP PLACE_VALUE, 3
0CA8 740E                 1535             JE PROCESS_6th_DIGIT
                          1536             
0CAA 803ED90102           1537             CMP PLACE_VALUE, 2
0CAF 742E                 1538             JE PROCESS_5th_DIGIT
                          1539             
0CB1 803ED90101           1540             CMP PLACE_VALUE, 1
0CB6 7475                 1541             JE PROCESS_4th_DIGIT
                          1542             
0CB8                      1543     PROCESS_6th_DIGIT:
0CB8 C606DB0130           1544             MOV TWO_DIGIT_SOUND[0], '0'
0CBD A2DC01               1545             MOV TWO_DIGIT_SOUND[1], AL
0CC0 9AA10D----     R     1546             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0CC5 C606AA011C           1547             MOV SOUND_INDEX_INPUT, SOUND_HUNDRED ;To say the word 'Hundred'
0CCA 9AEC0B----     R     1548             CALL FAR PTR ADD_SOUND_INDEX 
0CCF C606DD0101           1549             MOV AND_FLAG, 01H
0CD4 C606DF0101           1550             MOV THOUSAND_FLAG, 01H
0CD9 E99100               1551             JMP CONTINUE_NEXT_ITERATION
                          1552             
0CDC                      1553     TEMP_JUMP_4th_DIGIT:
0CDC EB4F90               1554             JMP PROCESS_4th_DIGIT
                          1555             
0CDF                      1556     PROCESS_5th_DIGIT:
0CDF C606DF0100           1557             MOV THOUSAND_FLAG, 00H
0CE4 803EDD0100           1558             CMP AND_FLAG, 00H
0CE9 740A                 1559             JE CONTINUE_WITH_5th_DIGIT
0CEB C606AA011E           1560             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0CF0 9AEC0B----     R     1561             CALL FAR PTR ADD_SOUND_INDEX
                          1562     
0CF5                      1563     CONTINUE_WITH_5th_DIGIT:
0CF5 8A87CF01             1564             MOV AL, ITEM_PRICE[BX]
0CF9 A2DB01               1565             MOV TWO_DIGIT_SOUND[0], AL
0CFC 43                   1566             INC BX
0CFD 8A87CF01             1567             MOV AL, ITEM_PRICE[BX]
0D01 A2DC01               1568             MOV TWO_DIGIT_SOUND[1], AL
0D04 9AA10D----     R     1569             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0D09 803ED90103           1570             CMP PLACE_VALUE, 3
0D0E 7E0A                 1571             JLE CONTINUE_WITH_REST_OF_5th_DIGIT
0D10 C606AA011D           1572             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0D15 9AEC0B----     R     1573             CALL FAR PTR ADD_SOUND_INDEX 
                          1574             
0D1A                      1575     CONTINUE_WITH_REST_OF_5th_DIGIT:
0D1A FE0ED901             1576             DEC PLACE_VALUE
0D1E C606DD0100           1577             MOV AND_FLAG, 00H
0D23 49                   1578             DEC CX
0D24 EB0490               1579             JMP FIRST_JMP_ITERATION 
                          1580                     
0D27                      1581     FIRST_JMP_TO_LOAD:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   34


LOC  OBJ                  LINE     SOURCE

0D27 E902FF               1582             JMP LOAD_SOUND_QUEUE
                          1583             
0D2A                      1584     FIRST_JMP_ITERATION:
0D2A EB4190               1585             JMP CONTINUE_NEXT_ITERATION
                          1586             
0D2D                      1587     PROCESS_4th_DIGIT:
0D2D C606DF0100           1588             MOV THOUSAND_FLAG, 00H
0D32 803EDD0100           1589             CMP AND_FLAG, 00H
0D37 740A                 1590             JE CONTINUE_WITH_4th_DIGIT
0D39 C606AA011E           1591             MOV SOUND_INDEX_INPUT, SOUND_AND ;To say the word 'and'
0D3E 9AEC0B----     R     1592             CALL FAR PTR ADD_SOUND_INDEX
                          1593             
0D43                      1594     CONTINUE_WITH_4th_DIGIT:
0D43 C606DB0130           1595             MOV TWO_DIGIT_SOUND[0], '0'
0D48 8A87CF01             1596             MOV AL, ITEM_PRICE[BX]
0D4C A2DC01               1597             MOV TWO_DIGIT_SOUND[1], AL
0D4F 9AA10D----     R     1598             CALL FAR PTR PROCESS_TWO_DIGIT_SOUND
0D54 803ED90103           1599             CMP PLACE_VALUE, 3
0D59 7E0A                 1600             JLE CONTINUE_WITH_REST_OF_4th_DIGIT
0D5B C606AA011D           1601             MOV SOUND_INDEX_INPUT, SOUND_THOUSAND ;To say the word 'Thousand'
0D60 9AEC0B----     R     1602             CALL FAR PTR ADD_SOUND_INDEX 
0D65                      1603     CONTINUE_WITH_REST_OF_4th_DIGIT:
0D65 C606DD0100           1604             MOV AND_FLAG, 00H
0D6A EB0190               1605             JMP CONTINUE_NEXT_ITERATION     
                          1606             
0D6D                      1607     CONTINUE_NEXT_ITERATION:
0D6D 43                   1608             INC BX
0D6E FE0ED901             1609             DEC PLACE_VALUE
0D72 803ED90100           1610             CMP PLACE_VALUE, 0
0D77 7403                 1611             JE SAY_DOLLARS_AFTER_PRICE
0D79 EB1090               1612             JMP CONTINUE_AFTER_DOLLAR
                          1613             
0D7C                      1614     SAY_DOLLARS_AFTER_PRICE:
0D7C C606DE0101           1615             MOV CENTS_AND_FLAG, 01H
0D81 C606AA0121           1616             MOV SOUND_INDEX_INPUT, SOUND_DOLLARS ;To say the word 'Dollars'
0D86 9AEC0B----     R     1617             CALL FAR PTR ADD_SOUND_INDEX 
                          1618             
0D8B                      1619     CONTINUE_AFTER_DOLLAR:          
0D8B 49                   1620             DEC CX
0D8C 7599                 1621             JNZ FIRST_JMP_TO_LOAD
                          1622             
0D8E                      1623     SOUND_POPULATE_END:     
0D8E C606CE0100           1624             MOV SERIAL_INDEX, 00H
0D93 C606DD0100           1625             MOV AND_FLAG, 00H
0D98 C606DE0100           1626             MOV CENTS_AND_FLAG, 00H
0D9D 59                   1627             POP     CX
0D9E 5B                   1628             POP     BX
0D9F 58                   1629             POP AX
0DA0 CB                   1630             RET
                          1631     POPULATE_SOUND_QUEUE ENDP
                          1632     
                          1633     
                          1634     ;Procedure that will take in  a two digit value and add the corresponding sound indic
                                   es to the sound queue
0DA1                      1635     PROCESS_TWO_DIGIT_SOUND PROC FAR        
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   35


LOC  OBJ                  LINE     SOURCE

0DA1 50                   1636             PUSH AX
0DA2 52                   1637             PUSH DX
                          1638     
0DA3 8A16DB01             1639             MOV DL, TWO_DIGIT_SOUND[0]
0DA7 80EA30               1640             SUB DL, 48
0DAA 8AF2                 1641             MOV DH, DL
0DAC B00A                 1642             MOV AL, 10
0DAE F6E2                 1643             MUL DL
0DB0 8AD0                 1644             MOV DL, AL
                          1645             
0DB2 A0DC01               1646             MOV AL, TWO_DIGIT_SOUND[1]
0DB5 2C30                 1647             SUB AL, 48
0DB7 8AE0                 1648             MOV AH, AL
0DB9 02C2                 1649             ADD AL, DL
                          1650             
0DBB 3C14                 1651             CMP AL, 20
0DBD 7F0B                 1652             JG PLAY_GREATER_THAN_20
0DBF A2AA01               1653             MOV SOUND_INDEX_INPUT, AL
0DC2 9AEC0B----     R     1654             CALL FAR PTR ADD_SOUND_INDEX
                          1655             
0DC7 EB1B90               1656             JMP TWO_DIGIT_SOUND_END 
                          1657             
0DCA                      1658     PLAY_GREATER_THAN_20:
0DCA 8AC6                 1659             MOV AL, DH
0DCC 0412                 1660             ADD AL, 18
0DCE A2AA01               1661             MOV SOUND_INDEX_INPUT, AL
0DD1 9AEC0B----     R     1662             CALL FAR PTR ADD_SOUND_INDEX
                          1663             
0DD6 8AC4                 1664             MOV AL, AH
0DD8 3C00                 1665             CMP AL, 0
0DDA 7408                 1666             JE TWO_DIGIT_SOUND_END
0DDC A2AA01               1667             MOV SOUND_INDEX_INPUT, AL
0DDF 9AEC0B----     R     1668             CALL FAR PTR ADD_SOUND_INDEX
                          1669             
0DE4                      1670     TWO_DIGIT_SOUND_END:    
0DE4 5A                   1671             POP DX
0DE5 58                   1672             POP AX
0DE6 CB                   1673             RET
                          1674     PROCESS_TWO_DIGIT_SOUND ENDP
                          1675     
                          1676     
                          1677     ;Procedure that will add the incoming price to the total price
0DE7                      1678     ADD_INCOMING_PRICE PROC FAR     
0DE7 50                   1679             PUSH AX
0DE8 53                   1680             PUSH BX
0DE9 51                   1681             PUSH CX
0DEA 52                   1682             PUSH DX
                          1683     
0DEB A0DA01               1684             MOV AL, TMP_PLACE_VALUE
0DEE 2C30                 1685             SUB AL, 48
0DF0 A2D901               1686             MOV PLACE_VALUE, AL     
                          1687             
0DF3 33C9                 1688             XOR CX, CX
                          1689             
0DF5 A0EA01               1690             MOV AL, TOTAL_PLACE_VALUE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   36


LOC  OBJ                  LINE     SOURCE

0DF8 3A06D901             1691             CMP AL, PLACE_VALUE
0DFC 745F                 1692             JE FIRST_JMP_ADDITION
0DFE 7C03                 1693             JL ADD_ZERO_TOTAL
0E00 EB6490               1694             JMP ADD_ZERO_INCOMING
                          1695             
0E03                      1696     ADD_ZERO_TOTAL:
0E03 8A16D901             1697             MOV DL, PLACE_VALUE
0E07 2AD0                 1698             SUB DL, AL
0E09 0016EA01             1699             ADD TOTAL_PLACE_VALUE, DL
0E0D 8ACA                 1700             MOV CL, DL
0E0F                      1701     START_SHIFT_TOTAL:
0E0F A0E801               1702             MOV AL, TOTAL_PRICE[8]
0E12 A2E901               1703             MOV TOTAL_PRICE[9], AL
0E15 A0E701               1704             MOV AL, TOTAL_PRICE[7]
0E18 A2E801               1705             MOV TOTAL_PRICE[8], AL
0E1B A0E601               1706             MOV AL, TOTAL_PRICE[6]
0E1E A2E701               1707             MOV TOTAL_PRICE[7], AL
0E21 A0E501               1708             MOV AL, TOTAL_PRICE[5]
0E24 A2E601               1709             MOV TOTAL_PRICE[6], AL
0E27 A0E401               1710             MOV AL, TOTAL_PRICE[4]
0E2A A2E501               1711             MOV TOTAL_PRICE[5], AL
0E2D A0E301               1712             MOV AL, TOTAL_PRICE[3]
0E30 A2E401               1713             MOV TOTAL_PRICE[4], AL
0E33 A0E201               1714             MOV AL, TOTAL_PRICE[2]
0E36 A2E301               1715             MOV TOTAL_PRICE[3], AL
0E39 A0E101               1716             MOV AL, TOTAL_PRICE[1]
0E3C A2E201               1717             MOV TOTAL_PRICE[2], AL
0E3F A0E001               1718             MOV AL, TOTAL_PRICE[0]
0E42 A2E101               1719             MOV TOTAL_PRICE[1], AL
0E45 803EF10101           1720             CMP SWAP_JUMP_FLAG, 01H
0E4A 7414                 1721             JE FIRST_CONTINUE_SWAP
0E4C 803EF10102           1722             CMP SWAP_JUMP_FLAG, 02H
0E51 7410                 1723             JE SECOND_CONTINUE_SWAP
0E53 C606E00130           1724             MOV TOTAL_PRICE[0], '0'
0E58 E2B5                 1725             LOOP START_SHIFT_TOTAL
0E5A EB5390               1726             JMP START_ADDITION
                          1727             
0E5D                      1728     FIRST_JMP_ADDITION:
0E5D EB5090               1729             JMP START_ADDITION
                          1730             
0E60                      1731     FIRST_CONTINUE_SWAP:
0E60 E9A500               1732             JMP CONTINUE_FIRST_SWAP
                          1733             
0E63                      1734     SECOND_CONTINUE_SWAP:
0E63 E90A01               1735             JMP CONTINUE_SECOND_SWAP
                          1736             
0E66                      1737     ADD_ZERO_INCOMING:
0E66 8A16D901             1738             MOV DL, PLACE_VALUE
0E6A 2AC2                 1739             SUB AL, DL
0E6C 0006D901             1740             ADD PLACE_VALUE, AL
0E70 8AC8                 1741             MOV CL, AL
0E72                      1742     START_SHIFT_INCOMING:
0E72 A0D701               1743             MOV AL, ITEM_PRICE[8]
0E75 A2D801               1744             MOV ITEM_PRICE[9], AL
0E78 A0D601               1745             MOV AL, ITEM_PRICE[7]
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   37


LOC  OBJ                  LINE     SOURCE

0E7B A2D701               1746             MOV ITEM_PRICE[8], AL
0E7E A0D501               1747             MOV AL, ITEM_PRICE[6]
0E81 A2D601               1748             MOV ITEM_PRICE[7], AL
0E84 A0D401               1749             MOV AL, ITEM_PRICE[5]
0E87 A2D501               1750             MOV ITEM_PRICE[6], AL
0E8A A0D301               1751             MOV AL, ITEM_PRICE[4]
0E8D A2D401               1752             MOV ITEM_PRICE[5], AL
0E90 A0D201               1753             MOV AL, ITEM_PRICE[3]
0E93 A2D301               1754             MOV ITEM_PRICE[4], AL
0E96 A0D101               1755             MOV AL, ITEM_PRICE[2]
0E99 A2D201               1756             MOV ITEM_PRICE[3], AL
0E9C A0D001               1757             MOV AL, ITEM_PRICE[1]
0E9F A2D101               1758             MOV ITEM_PRICE[2], AL
0EA2 A0CF01               1759             MOV AL, ITEM_PRICE[0]
0EA5 A2D001               1760             MOV ITEM_PRICE[1], AL
0EA8 C606CF0130           1761             MOV ITEM_PRICE[0], '0'
0EAD E2C3                 1762         LOOP START_SHIFT_INCOMING   
                          1763             
0EAF                      1764     START_ADDITION:
0EAF 8A0ED901             1765             MOV CL, PLACE_VALUE
0EB3 80C103               1766             ADD CL, 3
0EB6 8AD9                 1767             MOV BL, CL
0EB8 4B                   1768             DEC BX
0EB9 33D2                 1769             XOR DX, DX
0EBB                      1770     ADD_DIGITS:
0EBB 80BFCF012E           1771             CMP ITEM_PRICE[BX], '.'
0EC0 7431                 1772             JE ADD_DECIMAL_POINT
0EC2 8A87CF01             1773             MOV AL, ITEM_PRICE[BX]
0EC6 8AA7E001             1774             MOV AH, TOTAL_PRICE[BX]
0ECA 80EC30               1775             SUB AH, 48
0ECD 2C30                 1776             SUB AL, 48
0ECF 02E0                 1777             ADD AH, AL
0ED1 02E2                 1778             ADD AH, DL
0ED3 80FC0A               1779             CMP AH, 10
0ED6 7D0C                 1780             JGE ADD_CARRY_TO_DIGIT
0ED8 80C430               1781             ADD AH, 48
0EDB 88A7E001             1782             MOV TOTAL_PRICE[BX], AH
0EDF B200                 1783             MOV DL, 00H     
0EE1 EB1590               1784             JMP END_ADD_LOOP
                          1785             
0EE4                      1786     ADD_CARRY_TO_DIGIT:
0EE4 80EC0A               1787             SUB AH, 10
0EE7 80C430               1788             ADD AH, 48
0EEA 88A7E001             1789             MOV TOTAL_PRICE[BX], AH
0EEE B201                 1790             MOV DL, 01H
0EF0 EB0690               1791             JMP END_ADD_LOOP
                          1792             
0EF3                      1793     ADD_DECIMAL_POINT:
0EF3 C687E0012E           1794             MOV TOTAL_PRICE[BX], '.'
                          1795                     
0EF8                      1796     END_ADD_LOOP:
0EF8 4B                   1797             DEC BX
0EF9 E2C0                 1798             LOOP ADD_DIGITS
                          1799             
0EFB 80FA00               1800             CMP DL, 00H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   38


LOC  OBJ                  LINE     SOURCE

0EFE 7416                 1801             JE INCOMING_PRICE_END   
0F00 C606F10101           1802             MOV SWAP_JUMP_FLAG, 01H
0F05 E907FF               1803             JMP START_SHIFT_TOTAL
0F08                      1804     CONTINUE_FIRST_SWAP:
0F08 C606F10100           1805             MOV SWAP_JUMP_FLAG, 00H
0F0D C606E00131           1806             MOV TOTAL_PRICE[0], '1'
0F12 FE06EA01             1807             INC TOTAL_PLACE_VALUE
                          1808     
0F16                      1809     INCOMING_PRICE_END:     
0F16 5A                   1810             POP DX
0F17 59                   1811             POP     CX
0F18 5B                   1812             POP     BX
0F19 58                   1813             POP AX
0F1A CB                   1814             RET
                          1815     ADD_INCOMING_PRICE ENDP
                          1816     
                          1817     
                          1818     ;Procedure that will subtract the total price from the amount the user wants to pay a
                                   nd calculate the change
0F1B                      1819     CALCULATE_CHANGE PROC FAR       
0F1B 50                   1820             PUSH AX
0F1C 53                   1821             PUSH BX
0F1D 51                   1822             PUSH CX
0F1E 52                   1823             PUSH DX
                          1824     
0F1F A05200               1825             MOV AL, CHANGE_PLACE_VALUE
0F22 3A06EA01             1826             CMP AL, TOTAL_PLACE_VALUE
0F26 7F26                 1827             JG START_SUBTRACTION
0F28 7C1C                 1828             JL SAY_ERROR
                          1829             
0F2A 33C9                 1830             XOR CX, CX
0F2C 33DB                 1831             XOR BX, BX
0F2E 8A0EEA01             1832             MOV CL, TOTAL_PLACE_VALUE
0F32 80C103               1833             ADD CL, 3
                          1834     
0F35                      1835     CHECK_FOR_LESSER:
0F35 8A87E001             1836             MOV AL, TOTAL_PRICE[BX]
0F39 384753               1837             CMP CHANGE_PRICE[BX], AL        
0F3C 7C08                 1838             JL SAY_ERROR
0F3E 7F0E                 1839             JG START_SUBTRACTION
0F40 43                   1840             INC BX
0F41 E2F2                 1841             LOOP CHECK_FOR_LESSER
0F43 EB0990               1842             JMP START_SUBTRACTION   
                          1843             
0F46                      1844     SAY_ERROR:
0F46 C606750001           1845             MOV CHANGE_SUCCESS_FLAG, 01H
0F4B E9EA00               1846             JMP CALCULATE_CHANGE_END        
                          1847     
0F4E                      1848     START_SUBTRACTION:      
0F4E 33C9                 1849             XOR CX, CX
                          1850             
0F50 A0EA01               1851             MOV AL, TOTAL_PLACE_VALUE
0F53 3A065200             1852             CMP AL, CHANGE_PLACE_VALUE
0F57 7C03                 1853             JL SUB_ZERO_TOTAL
0F59 EB2190               1854             JMP SUBTRACT_NUMBER
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   39


LOC  OBJ                  LINE     SOURCE

                          1855             
0F5C                      1856     SUB_ZERO_TOTAL:
0F5C 8A165200             1857             MOV DL, CHANGE_PLACE_VALUE
0F60 2AD0                 1858             SUB DL, AL
0F62 0016EA01             1859             ADD TOTAL_PLACE_VALUE, DL
0F66 8ACA                 1860             MOV CL, DL
0F68                      1861     SUB_START_SHIFT_TOTAL:
0F68 C606F10102           1862             MOV SWAP_JUMP_FLAG, 02H
0F6D E99FFE               1863             JMP START_SHIFT_TOTAL
0F70                      1864     CONTINUE_SECOND_SWAP:
0F70 C606F10100           1865             MOV SWAP_JUMP_FLAG, 00H
0F75 C606E00130           1866             MOV TOTAL_PRICE[0], '0'
0F7A E2EC                 1867             LOOP SUB_START_SHIFT_TOTAL
                          1868             
0F7C                      1869     SUBTRACT_NUMBER:
0F7C 8A0EEA01             1870             MOV CL, TOTAL_PLACE_VALUE
0F80 80C103               1871             ADD CL, 3
0F83 8AD9                 1872             MOV BL, CL
0F85 4B                   1873             DEC BX
0F86 33D2                 1874             XOR DX, DX
0F88                      1875     SUBTRACT_DIGITS:
0F88 80BFE0012E           1876             CMP TOTAL_PRICE[BX], '.'
0F8D 7459                 1877             JE ADD_DECIMAL_POINT_SUB
0F8F 8A87E001             1878             MOV AL, TOTAL_PRICE[BX]
0F93 8A6753               1879             MOV AH, CHANGE_PRICE[BX]
0F96 80EC30               1880             SUB AH, 48
0F99 2C30                 1881             SUB AL, 48
0F9B 3AE0                 1882             CMP AH, AL
0F9D 7C36                 1883             JL BORROW_SUBTRACT
0F9F 7F24                 1884             JG NORMAL_SUBTRACT
                          1885     
0FA1                      1886     EQUAL_SUBTRACT: 
0FA1 2AE0                 1887             SUB AH, AL
0FA3 2AE2                 1888             SUB AH, DL
0FA5 80FC00               1889             CMP AH, 0
0FA8 7C0C                 1890             JL LESSER_SUBTRACT
                          1891             
0FAA B200                 1892             MOV DL, 0
0FAC 80C430               1893             ADD AH, 48
0FAF 88A7E001             1894             MOV TOTAL_PRICE[BX], AH
0FB3 EB3890               1895             JMP END_SUB_LOOP
                          1896             
0FB6                      1897     LESSER_SUBTRACT:
0FB6 80C40A               1898             ADD AH, 10
0FB9 B201                 1899             MOV DL, 1
0FBB 80C430               1900             ADD AH, 48
0FBE 88A7E001             1901             MOV TOTAL_PRICE[BX], AH
0FC2 EB2990               1902             JMP END_SUB_LOOP
                          1903             
0FC5                      1904     NORMAL_SUBTRACT:
0FC5 2AE0                 1905             SUB AH, AL
0FC7 2AE2                 1906             SUB AH, DL
0FC9 B200                 1907             MOV DL, 0
0FCB 80C430               1908             ADD AH, 48
0FCE 88A7E001             1909             MOV TOTAL_PRICE[BX], AH
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   40


LOC  OBJ                  LINE     SOURCE

0FD2 EB1990               1910             JMP END_SUB_LOOP
                          1911             
0FD5                      1912     BORROW_SUBTRACT:
0FD5 2AE0                 1913             SUB AH, AL
0FD7 2AE2                 1914             SUB AH, DL
0FD9 80C40A               1915             ADD AH, 10
0FDC B201                 1916             MOV DL, 1
0FDE 80C430               1917             ADD AH, 48
0FE1 88A7E001             1918             MOV TOTAL_PRICE[BX], AH
0FE5 EB0690               1919             JMP END_SUB_LOOP
                          1920             
0FE8                      1921     ADD_DECIMAL_POINT_SUB:
0FE8 C687E0012E           1922             MOV TOTAL_PRICE[BX], '.'
                          1923                     
0FED                      1924     END_SUB_LOOP:
0FED 4B                   1925             DEC BX
0FEE E298                 1926             LOOP SUBTRACT_DIGITS
                          1927             
0FF0                      1928     REMOVE_SUB_ZERO:
0FF0 803EE00130           1929             CMP TOTAL_PRICE[0], '0'
0FF5 7541                 1930             JNE CALCULATE_CHANGE_END
0FF7 A0E101               1931             MOV AL, TOTAL_PRICE[1]
0FFA A2E001               1932             MOV TOTAL_PRICE[0], AL
0FFD A0E201               1933             MOV AL, TOTAL_PRICE[2]
1000 A2E101               1934             MOV TOTAL_PRICE[1], AL
1003 A0E301               1935             MOV AL, TOTAL_PRICE[3]
1006 A2E201               1936             MOV TOTAL_PRICE[2], AL
1009 A0E401               1937             MOV AL, TOTAL_PRICE[4]
100C A2E301               1938             MOV TOTAL_PRICE[3], AL
100F A0E501               1939             MOV AL, TOTAL_PRICE[5]
1012 A2E401               1940             MOV TOTAL_PRICE[4], AL
1015 A0E601               1941             MOV AL, TOTAL_PRICE[6]
1018 A2E501               1942             MOV TOTAL_PRICE[5], AL
101B A0E701               1943             MOV AL, TOTAL_PRICE[7]
101E A2E601               1944             MOV TOTAL_PRICE[6], AL
1021 A0E801               1945             MOV AL, TOTAL_PRICE[8]
1024 A2E701               1946             MOV TOTAL_PRICE[7], AL
1027 A0E901               1947             MOV AL, TOTAL_PRICE[9]
102A A2E801               1948             MOV TOTAL_PRICE[8], AL
102D C606E90130           1949             MOV TOTAL_PRICE[9], '0'
1032 FE0EEA01             1950             DEC TOTAL_PLACE_VALUE
1036 EBB8                 1951             JMP REMOVE_SUB_ZERO
                          1952             
1038                      1953     CALCULATE_CHANGE_END:   
1038 5A                   1954             POP DX
1039 59                   1955             POP     CX
103A 5B                   1956             POP     BX
103B 58                   1957             POP AX
103C CB                   1958             RET
                          1959     CALCULATE_CHANGE ENDP
                          1960     
                          1961     
                          1962     ;Procedure that is called whenever a timer interrupt is received
103D                      1963     TIMER2_ACTION   PROC    FAR
103D FE06C601             1964             INC DS:TIMER_COUNTER_BCD
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   41


LOC  OBJ                  LINE     SOURCE

1041 FF06C701             1965         INC DS:TIMER_COUNTER_KBD
                          1966     
1045 833EC70128           1967         CMP DS:TIMER_COUNTER_KBD, TIMER_COUNTER_KBD_LEN
104A 7426                 1968         JE EXECUTE_KBD
                          1969             
104C 803EC60114           1970         CMP DS:TIMER_COUNTER_BCD, TIMER_COUNTER_BCD_LEN
1051 7408                 1971         JE EXECUTE_BCD
                          1972             
1053                      1973     EXECUTE_SOUND:
1053 9A2911----     R     1974             CALL FAR PTR PLAY_SOUND
1058 EB3790               1975             JMP T2_END
                          1976     
105B                      1977     EXECUTE_BCD:
105B 9A2911----     R     1978             CALL FAR PTR PLAY_SOUND
1060 C606C60100           1979             MOV DS:TIMER_COUNTER_BCD, 0
1065 9AF310----     R     1980             CALL FAR PTR DISPLAY_7SEGMENT
106A 9A2911----     R     1981             CALL FAR PTR PLAY_SOUND
106F EB2090               1982             JMP T2_END
                          1983             
1072                      1984     EXECUTE_KBD:
1072 9A2911----     R     1985             CALL FAR PTR PLAY_SOUND
1077 9A2911----     R     1986             CALL FAR PTR PLAY_SOUND
107C C706C7010000         1987             MOV DS:TIMER_COUNTER_KBD, 0
1082 9ADA06----     R     1988             CALL FAR PTR KEYPAD_READ
1087 9A2911----     R     1989             CALL FAR PTR PLAY_SOUND
108C 9A2911----     R     1990             CALL FAR PTR PLAY_SOUND
                          1991             
1091                      1992     T2_END:
1091 CB                   1993             RET
                          1994     TIMER2_ACTION   ENDP
                          1995     
                          1996     
                          1997     ;Procedure that will reset the 7-segment displays back to zeroes
1092                      1998     CLEAR_7SEGMENT PROC FAR
1092 50                   1999             PUSH AX
1093 53                   2000             PUSH BX
1094 51                   2001             PUSH CX
                          2002     
1095 33DB                 2003             XOR BX, BX
1097 B90600               2004             MOV CX, 06
                          2005             
109A                      2006     CLEAR_SINGLE_BCD:
109A 803EC10101           2007             CMP TRIGGER_L_FLAG, 01H
109F 741B                 2008             JE ASSIGN_BCD_VALUE_TO_L
                          2009             
10A1 803EC20101           2010             CMP TRIGGER_E_FLAG, 01H
10A6 741A                 2011             JE ASSIGN_BCD_VALUE_TO_E
                          2012             
10A8 803EC30101           2013             CMP TRIGGER_A_FLAG, 01H
10AD 7419                 2014             JE ASSIGN_BCD_VALUE_TO_A
                          2015             
10AF 803EC40101           2016             CMP TRIGGER_P_FLAG, 01H
10B4 7418                 2017             JE ASSIGN_BCD_VALUE_TO_P
                          2018             
10B6 A0AC01               2019             MOV AL, BCD_NUMBERS[0]
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   42


LOC  OBJ                  LINE     SOURCE

10B9 EB1990               2020             JMP ASSIGN_TO_BCD
                          2021             
10BC                      2022     ASSIGN_BCD_VALUE_TO_L:
10BC A0B601               2023             MOV AL, BCD_NUMBERS[10]
10BF EB1390               2024             JMP ASSIGN_TO_BCD
                          2025             
10C2                      2026     ASSIGN_BCD_VALUE_TO_E:
10C2 A0B701               2027             MOV AL, BCD_NUMBERS[11]
10C5 EB0D90               2028             JMP ASSIGN_TO_BCD
                          2029             
10C8                      2030     ASSIGN_BCD_VALUE_TO_A:
10C8 A0B801               2031             MOV AL, BCD_NUMBERS[12]
10CB EB0790               2032             JMP ASSIGN_TO_BCD
                          2033             
10CE                      2034     ASSIGN_BCD_VALUE_TO_P:
10CE A0B901               2035             MOV AL, BCD_NUMBERS[13] 
10D1 EB0190               2036             JMP ASSIGN_TO_BCD
                          2037             
10D4                      2038     ASSIGN_TO_BCD:
10D4 8887BA01             2039             MOV DS:BCD_DISPLAY[BX], AL
10D8 43                   2040             INC BX
10D9 E2BF                 2041             LOOP CLEAR_SINGLE_BCD
                          2042             
10DB C606C10100           2043             MOV TRIGGER_L_FLAG, 00H
10E0 C606C20100           2044             MOV TRIGGER_E_FLAG, 00H
10E5 C606C30100           2045             MOV TRIGGER_A_FLAG, 00H
10EA C606C40100           2046             MOV TRIGGER_P_FLAG, 00H
                          2047     
10EF 59                   2048             POP CX
10F0 5B                   2049             POP BX
10F1 58                   2050             POP AX
10F2 CB                   2051             RET
                          2052     CLEAR_7SEGMENT ENDP
                          2053     
                          2054     
                          2055     ;Procedure that will display digits on the BCD based on the BCD queue
10F3                      2056     DISPLAY_7SEGMENT PROC FAR       
10F3 50                   2057             PUSH AX
10F4 53                   2058             PUSH BX
10F5 51                   2059             PUSH CX
10F6 52                   2060             PUSH DX
                          2061     
10F7 33DB                 2062             XOR BX, BX
                          2063             
                          2064             ; BCD Select: [-] [-] [6] [5] [4] [3] [2] [1]
10F9 BA0001               2065             MOV DX, PCS2_ADDR
10FC B0FE                 2066             MOV AL, 0FEH
10FE 8A0EC001             2067             MOV CL, DS:CURRENT_BCD
1102 D2C0                 2068             ROL AL, CL
1104 EE                   2069             OUT DX, AL
                          2070             
1105 BA8001               2071             MOV DX, PCS3_ADDR
1108 8A1EC001             2072             MOV BL, CURRENT_BCD
110C 8A87BA01             2073             MOV AL, BCD_DISPLAY[BX]
1110 EE                   2074             OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   43


LOC  OBJ                  LINE     SOURCE

                          2075             
1111 FE06C001             2076             INC CURRENT_BCD
1115 803EC00106           2077             CMP CURRENT_BCD, 06H
111A 7403                 2078             JE RESET_CURRENT_BCD
111C EB0690               2079             JMP DISP_END
                          2080             
111F                      2081     RESET_CURRENT_BCD:
111F C606C00100           2082             MOV CURRENT_BCD, 00H
                          2083     
1124                      2084     DISP_END:       
1124 5A                   2085             POP DX
1125 59                   2086             POP     CX
1126 5B                   2087             POP     BX
1127 58                   2088             POP AX
1128 CB                   2089             RET
                          2090     DISPLAY_7SEGMENT ENDP
                          2091     
                          2092     
                          2093     ;Procedure that will play sounds on the speaker based on the speaker queue
1129                      2094     PLAY_SOUND PROC FAR     
1129 50                   2095             PUSH AX
112A 53                   2096             PUSH BX
112B 56                   2097             PUSH SI
112C 52                   2098             PUSH DX
                          2099             
112D B8----         R     2100             MOV AX, DATA_SEG
1130 8ED8                 2101         MOV DS, AX
                          2102             
1132 A0A801               2103             MOV AL, SOUND_HEAD
1135 3806A901             2104             CMP SOUND_TAIL, AL
1139 7470                 2105             JE SOUND_END
                          2106             
113B 33DB                 2107             XOR BX, BX
113D 8A1EA801             2108             MOV BL, SOUND_HEAD 
1141 8A9F8801             2109             MOV BL, SOUND_QUEUE[BX]
1145 8B87D000             2110             MOV AX, SOUND_SIZE[BX]
                          2111             
1149 833E860100           2112             CMP SOUND_COUNT, 0000H
114E 7438                 2113             JE ASSIGN_ADDRESS
1150 39068601             2114             CMP SOUND_COUNT, AX
1154 7E38                 2115             JLE SOUND_PLAY
                          2116             
1156 FE06A801             2117             INC SOUND_HEAD
115A 803EA80120           2118             CMP SOUND_HEAD, 32
115F 7C05                 2119             JL SOUND_INITIALIZE_CONTINUE
1161 C606A80100           2120             MOV SOUND_HEAD, 00H
                          2121     
1166                      2122     SOUND_INITIALIZE_CONTINUE:
1166 C70686010000         2123             MOV SOUND_COUNT, 0000H
116C A0A801               2124             MOV AL, SOUND_HEAD
116F 3806A901             2125             CMP SOUND_TAIL, AL
1173 7436                 2126             JE SOUND_END
                          2127             
1175 33DB                 2128             XOR BX, BX
1177 8A1EA801             2129             MOV BL, SOUND_HEAD
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    11:07:28  11/28/;3  PAGE   44


LOC  OBJ                  LINE     SOURCE

117B 8A9F8801             2130             MOV BL, SOUND_QUEUE[BX]
117F 8B4776               2131             MOV AX, SOUND_OFFSET[BX]
1182 A38401               2132             MOV SOUND_ADDRESS, AX
1185 EB0790               2133             JMP SOUND_PLAY
                          2134             
1188                      2135     ASSIGN_ADDRESS:
1188 8B4776               2136             MOV AX, SOUND_OFFSET[BX]
118B A38401               2137             MOV SOUND_ADDRESS, AX
                          2138             
118E                      2139     SOUND_PLAY:                             
118E 8B368401             2140             MOV SI, SOUND_ADDRESS
1192 8B872A01             2141             MOV AX, EEPROM_START[BX]
1196 8ED8                 2142             MOV DS, AX
                          2143             
1198 8A04                 2144             MOV AL, [SI]
119A BA0002               2145             MOV DX, PCS4_ADDR
119D EE                   2146             OUT DX, AL
                          2147                     
119E B8----         R     2148             MOV AX, DATA_SEG
11A1 8ED8                 2149         MOV DS, AX
                          2150             
11A3 FF068601             2151             INC SOUND_COUNT
11A7 FF068401             2152             INC SOUND_ADDRESS
                          2153     
11AB                      2154     SOUND_END:      
11AB 5A                   2155             POP DX
11AC 5E                   2156             POP     SI
11AD 5B                   2157             POP     BX
11AE 58                   2158             POP AX
11AF CB                   2159             RET
                          2160     PLAY_SOUND ENDP
                          2161     
                          2162     
----                      2163     CODE_SEG        ENDS
                          2164     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
